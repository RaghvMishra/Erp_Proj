//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HiWork.DAL.Database
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CentralDBEntities : DbContext
    {
        public CentralDBEntities()
            : base("name=CentralDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AccessLog> AccessLogs { get; set; }
        public virtual DbSet<AdditionalOperationPermission> AdditionalOperationPermissions { get; set; }
        public virtual DbSet<AdditionalScreenPermission> AdditionalScreenPermissions { get; set; }
        public virtual DbSet<AdvertizementSetting> AdvertizementSettings { get; set; }
        public virtual DbSet<Application> Applications { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<Company_AgencyPrice> Company_AgencyPrice { get; set; }
        public virtual DbSet<Company_Department> Company_Department { get; set; }
        public virtual DbSet<Company_TransproPartner> Company_TransproPartner { get; set; }
        public virtual DbSet<CompanyAgentBusiness> CompanyAgentBusinesses { get; set; }
        public virtual DbSet<CompanyAgentCharacterstic> CompanyAgentCharacterstics { get; set; }
        public virtual DbSet<CompanyAgentDesignation> CompanyAgentDesignations { get; set; }
        public virtual DbSet<CompanyBusinessHistory> CompanyBusinessHistories { get; set; }
        public virtual DbSet<CompanyBusinessInformation> CompanyBusinessInformations { get; set; }
        public virtual DbSet<CompanyCooperativeInfo> CompanyCooperativeInfoes { get; set; }
        public virtual DbSet<CompanyIndustryClassification> CompanyIndustryClassifications { get; set; }
        public virtual DbSet<CompanyRFMAnalysi> CompanyRFMAnalysis { get; set; }
        public virtual DbSet<CompanyShare> CompanyShares { get; set; }
        public virtual DbSet<CompanyTradingCategory> CompanyTradingCategories { get; set; }
        public virtual DbSet<ContactU> ContactUs { get; set; }
        public virtual DbSet<EmailDeliverySetting> EmailDeliverySettings { get; set; }
        public virtual DbSet<EmailHistory> EmailHistories { get; set; }
        public virtual DbSet<EmailTemplate> EmailTemplates { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<ErrorLog> ErrorLogs { get; set; }
        public virtual DbSet<ErrorReportWeb> ErrorReportWebs { get; set; }
        public virtual DbSet<Estimation> Estimations { get; set; }
        public virtual DbSet<EstimationAction> EstimationActions { get; set; }
        public virtual DbSet<EstimationActionType> EstimationActionTypes { get; set; }
        public virtual DbSet<EstimationApproval> EstimationApprovals { get; set; }
        public virtual DbSet<EstimationCompetency> EstimationCompetencies { get; set; }
        public virtual DbSet<EstimationDeliveryFileType> EstimationDeliveryFileTypes { get; set; }
        public virtual DbSet<EstimationDetail> EstimationDetails { get; set; }
        public virtual DbSet<EstimationFile> EstimationFiles { get; set; }
        public virtual DbSet<EstimationNarrationExpense> EstimationNarrationExpenses { get; set; }
        public virtual DbSet<EstimationProject> EstimationProjects { get; set; }
        public virtual DbSet<EstimationRequestHistory> EstimationRequestHistories { get; set; }
        public virtual DbSet<EstimationUserAccess> EstimationUserAccesses { get; set; }
        public virtual DbSet<EstimationWorkContent> EstimationWorkContents { get; set; }
        public virtual DbSet<HiworkLanguagePrice> HiworkLanguagePrices { get; set; }
        public virtual DbSet<Master_Address> Master_Address { get; set; }
        public virtual DbSet<Master_AgentBusiness> Master_AgentBusiness { get; set; }
        public virtual DbSet<Master_AgentCharacterstics> Master_AgentCharacterstics { get; set; }
        public virtual DbSet<Master_AgentFreeDesignation> Master_AgentFreeDesignation { get; set; }
        public virtual DbSet<Master_Bank> Master_Bank { get; set; }
        public virtual DbSet<Master_BankAccount> Master_BankAccount { get; set; }
        public virtual DbSet<Master_BankAccountType> Master_BankAccountType { get; set; }
        public virtual DbSet<Master_BankBranch> Master_BankBranch { get; set; }
        public virtual DbSet<Master_BranchOffice> Master_BranchOffice { get; set; }
        public virtual DbSet<Master_CompanyBusinessService> Master_CompanyBusinessService { get; set; }
        public virtual DbSet<Master_CompanyBusinessSpeciality> Master_CompanyBusinessSpeciality { get; set; }
        public virtual DbSet<Master_CompanyIndustryClassification> Master_CompanyIndustryClassification { get; set; }
        public virtual DbSet<Master_CompanyIndustryClassificationItem> Master_CompanyIndustryClassificationItem { get; set; }
        public virtual DbSet<Master_CompanyTradingCategory> Master_CompanyTradingCategory { get; set; }
        public virtual DbSet<Master_CompanyTradingCategoryItem> Master_CompanyTradingCategoryItem { get; set; }
        public virtual DbSet<Master_CompanyTradingDivision> Master_CompanyTradingDivision { get; set; }
        public virtual DbSet<Master_Country> Master_Country { get; set; }
        public virtual DbSet<Master_Culture> Master_Culture { get; set; }
        public virtual DbSet<Master_Currency> Master_Currency { get; set; }
        public virtual DbSet<Master_CurrencyRate> Master_CurrencyRate { get; set; }
        public virtual DbSet<Master_DeliveryMethod> Master_DeliveryMethod { get; set; }
        public virtual DbSet<Master_Department> Master_Department { get; set; }
        public virtual DbSet<Master_Designation> Master_Designation { get; set; }
        public virtual DbSet<Master_Division> Master_Division { get; set; }
        public virtual DbSet<Master_EmailCategorySettings> Master_EmailCategorySettings { get; set; }
        public virtual DbSet<Master_EmailGroupSettings> Master_EmailGroupSettings { get; set; }
        public virtual DbSet<Master_EstimationRoutes> Master_EstimationRoutes { get; set; }
        public virtual DbSet<Master_EstimationServiceType> Master_EstimationServiceType { get; set; }
        public virtual DbSet<Master_EstimationSpecializedField> Master_EstimationSpecializedField { get; set; }
        public virtual DbSet<Master_EstimationStatus> Master_EstimationStatus { get; set; }
        public virtual DbSet<Master_EstimationSubSpecializedField> Master_EstimationSubSpecializedField { get; set; }
        public virtual DbSet<Master_EstimationType> Master_EstimationType { get; set; }
        public virtual DbSet<Master_Language> Master_Language { get; set; }
        public virtual DbSet<Master_Market> Master_Market { get; set; }
        public virtual DbSet<Master_PartnerServiceType> Master_PartnerServiceType { get; set; }
        public virtual DbSet<Master_PaymentType> Master_PaymentType { get; set; }
        public virtual DbSet<Master_Penalty> Master_Penalty { get; set; }
        public virtual DbSet<Master_StaffBusinessCategory> Master_StaffBusinessCategory { get; set; }
        public virtual DbSet<Master_StaffBusinessCategoryDetails> Master_StaffBusinessCategoryDetails { get; set; }
        public virtual DbSet<Master_StaffCategory> Master_StaffCategory { get; set; }
        public virtual DbSet<Master_StaffCurrentState> Master_StaffCurrentState { get; set; }
        public virtual DbSet<Master_StaffDevelopmentSkill> Master_StaffDevelopmentSkill { get; set; }
        public virtual DbSet<Master_StaffDevelopmentSkillItem> Master_StaffDevelopmentSkillItem { get; set; }
        public virtual DbSet<Master_StaffEducationalDegree> Master_StaffEducationalDegree { get; set; }
        public virtual DbSet<Master_StaffEmploymentType> Master_StaffEmploymentType { get; set; }
        public virtual DbSet<Master_StaffInterpretationFields> Master_StaffInterpretationFields { get; set; }
        public virtual DbSet<Master_StaffJobCategory> Master_StaffJobCategory { get; set; }
        public virtual DbSet<Master_StaffJobCategoryDetails> Master_StaffJobCategoryDetails { get; set; }
        public virtual DbSet<Master_StaffKnowledgeField> Master_StaffKnowledgeField { get; set; }
        public virtual DbSet<Master_StaffKnowledgeFieldItem> Master_StaffKnowledgeFieldItem { get; set; }
        public virtual DbSet<Master_StaffLanguageQualifications> Master_StaffLanguageQualifications { get; set; }
        public virtual DbSet<Master_StaffMajorSubject> Master_StaffMajorSubject { get; set; }
        public virtual DbSet<Master_StaffMajorSubjectDetails> Master_StaffMajorSubjectDetails { get; set; }
        public virtual DbSet<Master_StaffMedicalField> Master_StaffMedicalField { get; set; }
        public virtual DbSet<Master_StaffNarrationType> Master_StaffNarrationType { get; set; }
        public virtual DbSet<Master_StaffPatentField> Master_StaffPatentField { get; set; }
        public virtual DbSet<Master_StaffProfession> Master_StaffProfession { get; set; }
        public virtual DbSet<Master_StaffResearchField> Master_StaffResearchField { get; set; }
        public virtual DbSet<Master_StaffSoftwareSkill> Master_StaffSoftwareSkill { get; set; }
        public virtual DbSet<Master_StaffSpecialField> Master_StaffSpecialField { get; set; }
        public virtual DbSet<Master_StaffTechnicalSkillCategory> Master_StaffTechnicalSkillCategory { get; set; }
        public virtual DbSet<Master_StaffTechnicalSkillItems> Master_StaffTechnicalSkillItems { get; set; }
        public virtual DbSet<Master_StaffTranslationFields> Master_StaffTranslationFields { get; set; }
        public virtual DbSet<Master_StaffType> Master_StaffType { get; set; }
        public virtual DbSet<Master_StaffVisaType> Master_StaffVisaType { get; set; }
        public virtual DbSet<Master_Team> Master_Team { get; set; }
        public virtual DbSet<Master_TeamToMarket> Master_TeamToMarket { get; set; }
        public virtual DbSet<Master_Unit> Master_Unit { get; set; }
        public virtual DbSet<Master_UnitPriceSetting> Master_UnitPriceSetting { get; set; }
        public virtual DbSet<Master_WebOrderStatus> Master_WebOrderStatus { get; set; }
        public virtual DbSet<Master_WorkingStatus> Master_WorkingStatus { get; set; }
        public virtual DbSet<Menu> Menus { get; set; }
        public virtual DbSet<Message> Messages { get; set; }
        public virtual DbSet<Module> Modules { get; set; }
        public virtual DbSet<Notice> Notices { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Order_DeliveryDocuments> Order_DeliveryDocuments { get; set; }
        public virtual DbSet<Order_StaffAllowance> Order_StaffAllowance { get; set; }
        public virtual DbSet<Order_Web> Order_Web { get; set; }
        public virtual DbSet<Order_WebDocuments> Order_WebDocuments { get; set; }
        public virtual DbSet<OrderAppointedToStaff_Web> OrderAppointedToStaff_Web { get; set; }
        public virtual DbSet<OrderDetail> OrderDetails { get; set; }
        public virtual DbSet<OrderEvaluationByCustomer> OrderEvaluationByCustomers { get; set; }
        public virtual DbSet<OrderRequestedToStaff_Web> OrderRequestedToStaff_Web { get; set; }
        public virtual DbSet<ProfitShareSetting> ProfitShareSettings { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<RoleAudit> RoleAudits { get; set; }
        public virtual DbSet<RoleWiseOperationPermission> RoleWiseOperationPermissions { get; set; }
        public virtual DbSet<RoleWiseScreenPermission> RoleWiseScreenPermissions { get; set; }
        public virtual DbSet<Screen> Screens { get; set; }
        public virtual DbSet<ScreenOperation> ScreenOperations { get; set; }
        public virtual DbSet<Staff> Staffs { get; set; }
        public virtual DbSet<Staff_BankAccountInfo> Staff_BankAccountInfo { get; set; }
        public virtual DbSet<Staff_CurrentStates> Staff_CurrentStates { get; set; }
        public virtual DbSet<Staff_DevelopmentSkill> Staff_DevelopmentSkill { get; set; }
        public virtual DbSet<Staff_EditingproInformation> Staff_EditingproInformation { get; set; }
        public virtual DbSet<Staff_EducationalHistory> Staff_EducationalHistory { get; set; }
        public virtual DbSet<Staff_InterpretationSpecialFields> Staff_InterpretationSpecialFields { get; set; }
        public virtual DbSet<Staff_JobCategories> Staff_JobCategories { get; set; }
        public virtual DbSet<Staff_JobHistory> Staff_JobHistory { get; set; }
        public virtual DbSet<Staff_KnowledgeFields> Staff_KnowledgeFields { get; set; }
        public virtual DbSet<Staff_ManagementExperience> Staff_ManagementExperience { get; set; }
        public virtual DbSet<Staff_NarrationInformation> Staff_NarrationInformation { get; set; }
        public virtual DbSet<Staff_NarrationVoiceFiles> Staff_NarrationVoiceFiles { get; set; }
        public virtual DbSet<Staff_ProfessionalSpeciality> Staff_ProfessionalSpeciality { get; set; }
        public virtual DbSet<Staff_ServiceTypes> Staff_ServiceTypes { get; set; }
        public virtual DbSet<Staff_SkillCertificate> Staff_SkillCertificate { get; set; }
        public virtual DbSet<Staff_SoftwareSkill> Staff_SoftwareSkill { get; set; }
        public virtual DbSet<Staff_TechnicalCertificate> Staff_TechnicalCertificate { get; set; }
        public virtual DbSet<Staff_TranslateInterpretExperience> Staff_TranslateInterpretExperience { get; set; }
        public virtual DbSet<Staff_TranslationSpecialFields> Staff_TranslationSpecialFields { get; set; }
        public virtual DbSet<Staff_TransproInformation> Staff_TransproInformation { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TranslationCertificateSetting> TranslationCertificateSettings { get; set; }
        public virtual DbSet<TranslationLevel> TranslationLevels { get; set; }
        public virtual DbSet<TranslatorBlackList> TranslatorBlackLists { get; set; }
        public virtual DbSet<TranslatorFavouriteList> TranslatorFavouriteLists { get; set; }
        public virtual DbSet<TransproDeliveryPlanSetting> TransproDeliveryPlanSettings { get; set; }
        public virtual DbSet<TransproLanguagePriceCategory> TransproLanguagePriceCategories { get; set; }
        public virtual DbSet<UserInformation> UserInformations { get; set; }
        public virtual DbSet<UserInRole> UserInRoles { get; set; }
        public virtual DbSet<UserType> UserTypes { get; set; }
        public virtual DbSet<IdentityInformation> IdentityInformations { get; set; }
        public virtual DbSet<PayPalTransaction> PayPalTransactions { get; set; }
        public virtual DbSet<TransproLanguagePriceDetail> TransproLanguagePriceDetails { get; set; }
        public virtual DbSet<RoleManagement> RoleManagements { get; set; }
        public virtual DbSet<staff_tbd> staff_tbd { get; set; }
        public virtual DbSet<VW_GetAdvancedSearch> VW_GetAdvancedSearch { get; set; }
        public virtual DbSet<VW_GetAdvancedSearch_OLD> VW_GetAdvancedSearch_OLD { get; set; }
    
        public virtual ObjectResult<f_TEMP_ASTAFF_INCOMPLETE_Result> f_TEMP_ASTAFF_INCOMPLETE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<f_TEMP_ASTAFF_INCOMPLETE_Result>("f_TEMP_ASTAFF_INCOMPLETE");
        }
    
        public virtual ObjectResult<SP_AllTranslation_History_Result> SP_AllTranslation_History(Nullable<System.Guid> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_AllTranslation_History_Result>("SP_AllTranslation_History", iDParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int SP_CreateErrorlog(Nullable<long> userId, string description, string component)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var componentParameter = component != null ?
                new ObjectParameter("Component", component) :
                new ObjectParameter("Component", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CreateErrorlog", userIdParameter, descriptionParameter, componentParameter);
        }
    
        public virtual ObjectResult<SP_Dashboard_SAdmin_Result> SP_Dashboard_SAdmin(string currentUserID, string applicationID, string culture)
        {
            var currentUserIDParameter = currentUserID != null ?
                new ObjectParameter("CurrentUserID", currentUserID) :
                new ObjectParameter("CurrentUserID", typeof(string));
    
            var applicationIDParameter = applicationID != null ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(string));
    
            var cultureParameter = culture != null ?
                new ObjectParameter("Culture", culture) :
                new ObjectParameter("Culture", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Dashboard_SAdmin_Result>("SP_Dashboard_SAdmin", currentUserIDParameter, applicationIDParameter, cultureParameter);
        }
    
        public virtual int SP_DeleteAgentBusiness(Nullable<System.Guid> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteAgentBusiness", iDParameter);
        }
    
        public virtual int SP_DeleteAgentCharacterstics(Nullable<System.Guid> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteAgentCharacterstics", iDParameter);
        }
    
        public virtual int SP_DeleteAgentFreeDesignation(Nullable<System.Guid> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteAgentFreeDesignation", iDParameter);
        }
    
        public virtual int SP_DeleteCompanyBusinessService(Nullable<System.Guid> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteCompanyBusinessService", iDParameter);
        }
    
        public virtual int SP_DeleteCompanyBusinessSpeciality(Nullable<System.Guid> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteCompanyBusinessSpeciality", iDParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_GetAdvancedSearch(string cultureId, Nullable<System.Guid> iD, string staffName, Nullable<long> registrationID, string staffEmailID, Nullable<System.Guid> staffTypeID, Nullable<long> applicationID, string registrationDate, string password, string nickName_en, string nickName_jp, string nickName_kr, string nickName_cn, string nickName_fr, string nickName_tl, string surname, string firstName_en, string firstName_jp, string firstName_kr, string firstName_cn, string firstName_fr, string firstName_tl, string middleName_en, string middleName_jp, string middleName_kr, string middleName_cn, string middleName_fr, string middleName_tl, string lastName_en, string lastName_jp, string lastName_kr, string lastName_cn, string lastName_fr, string lastName_tl, string sex, string birthDate, string countryOfCitizenship, string postalCode, string isJapanese, string livingCountryID, string cityOfOverseas_en, string cityOfOverseas_jp, string cityOfOverseas_kr, string cityOfOverseas_cn, string cityOfOverseas_fr, string cityOfOverseas_tl, string nativeLanguageID, string foriegnLanguage1ID, string foriegnLanguage2ID, string foriegnLanguage3ID, string foriegnLanguage4ID, string foreignLang1Level, string foreignLang2Level, string foreignLang3Level, string foreignLang4Level, string translationExpID, string otherLanguage, string otherLangQualification, string visaTypeID, string visaDeadLine, string district_en, string district_jp, string district_kr, string district_cn, string district_fr, string district_tl, string townName_en, string townName_jp, string townName_kr, string townName_cn, string townName_fr, string townName_tl, string address_en, string address_jp, string address_kr, string address_cn, string address_fr, string address_tl, string apartmentName_en, string apartmentName_jp, string apartmentName_kr, string apartmentName_cn, string apartmentName_fr, string apartmentName_tl, string apartmentNo, string telephoneNo, string mobileNo, string homeCountryPhone, string fax, string homeCountryAddress_en, string homeCountryAddress_jp, string homeCountryAddress_kr, string homeCountryAddress_cn, string homeCountryAddress_fr, string homeCountryAddress_tl, string hasSocialExperienceJapan, string hasSocialExperienceOtherCountry, string nationalityID, string currentStates, string street_en, string street_jp, string street_kr, string street_cn, string street_fr, string street_tl, string professionSpecialities, string educationalDegree1, string educationalDegree2, string educationalDegree3, string mainCareer_en, string mainCareer_jp, string mainCareer_kr, string mainCareer_cn, string mainCareer_fr, string mainCareer_tl, string selfPR_en, string selfPR_jp, string selfPR_kr, string selfPR_cn, string selfPR_fr, string selfPR_tl, string createdDate, string createdBy, string updatedDate, string updatedBy, string image, Nullable<long> appid)
        {
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var staffNameParameter = staffName != null ?
                new ObjectParameter("StaffName", staffName) :
                new ObjectParameter("StaffName", typeof(string));
    
            var registrationIDParameter = registrationID.HasValue ?
                new ObjectParameter("RegistrationID", registrationID) :
                new ObjectParameter("RegistrationID", typeof(long));
    
            var staffEmailIDParameter = staffEmailID != null ?
                new ObjectParameter("StaffEmailID", staffEmailID) :
                new ObjectParameter("StaffEmailID", typeof(string));
    
            var staffTypeIDParameter = staffTypeID.HasValue ?
                new ObjectParameter("StaffTypeID", staffTypeID) :
                new ObjectParameter("StaffTypeID", typeof(System.Guid));
    
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(long));
    
            var registrationDateParameter = registrationDate != null ?
                new ObjectParameter("RegistrationDate", registrationDate) :
                new ObjectParameter("RegistrationDate", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var nickName_enParameter = nickName_en != null ?
                new ObjectParameter("NickName_en", nickName_en) :
                new ObjectParameter("NickName_en", typeof(string));
    
            var nickName_jpParameter = nickName_jp != null ?
                new ObjectParameter("NickName_jp", nickName_jp) :
                new ObjectParameter("NickName_jp", typeof(string));
    
            var nickName_krParameter = nickName_kr != null ?
                new ObjectParameter("NickName_kr", nickName_kr) :
                new ObjectParameter("NickName_kr", typeof(string));
    
            var nickName_cnParameter = nickName_cn != null ?
                new ObjectParameter("NickName_cn", nickName_cn) :
                new ObjectParameter("NickName_cn", typeof(string));
    
            var nickName_frParameter = nickName_fr != null ?
                new ObjectParameter("NickName_fr", nickName_fr) :
                new ObjectParameter("NickName_fr", typeof(string));
    
            var nickName_tlParameter = nickName_tl != null ?
                new ObjectParameter("NickName_tl", nickName_tl) :
                new ObjectParameter("NickName_tl", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var firstName_enParameter = firstName_en != null ?
                new ObjectParameter("FirstName_en", firstName_en) :
                new ObjectParameter("FirstName_en", typeof(string));
    
            var firstName_jpParameter = firstName_jp != null ?
                new ObjectParameter("FirstName_jp", firstName_jp) :
                new ObjectParameter("FirstName_jp", typeof(string));
    
            var firstName_krParameter = firstName_kr != null ?
                new ObjectParameter("FirstName_kr", firstName_kr) :
                new ObjectParameter("FirstName_kr", typeof(string));
    
            var firstName_cnParameter = firstName_cn != null ?
                new ObjectParameter("FirstName_cn", firstName_cn) :
                new ObjectParameter("FirstName_cn", typeof(string));
    
            var firstName_frParameter = firstName_fr != null ?
                new ObjectParameter("FirstName_fr", firstName_fr) :
                new ObjectParameter("FirstName_fr", typeof(string));
    
            var firstName_tlParameter = firstName_tl != null ?
                new ObjectParameter("FirstName_tl", firstName_tl) :
                new ObjectParameter("FirstName_tl", typeof(string));
    
            var middleName_enParameter = middleName_en != null ?
                new ObjectParameter("MiddleName_en", middleName_en) :
                new ObjectParameter("MiddleName_en", typeof(string));
    
            var middleName_jpParameter = middleName_jp != null ?
                new ObjectParameter("MiddleName_jp", middleName_jp) :
                new ObjectParameter("MiddleName_jp", typeof(string));
    
            var middleName_krParameter = middleName_kr != null ?
                new ObjectParameter("MiddleName_kr", middleName_kr) :
                new ObjectParameter("MiddleName_kr", typeof(string));
    
            var middleName_cnParameter = middleName_cn != null ?
                new ObjectParameter("MiddleName_cn", middleName_cn) :
                new ObjectParameter("MiddleName_cn", typeof(string));
    
            var middleName_frParameter = middleName_fr != null ?
                new ObjectParameter("MiddleName_fr", middleName_fr) :
                new ObjectParameter("MiddleName_fr", typeof(string));
    
            var middleName_tlParameter = middleName_tl != null ?
                new ObjectParameter("MiddleName_tl", middleName_tl) :
                new ObjectParameter("MiddleName_tl", typeof(string));
    
            var lastName_enParameter = lastName_en != null ?
                new ObjectParameter("LastName_en", lastName_en) :
                new ObjectParameter("LastName_en", typeof(string));
    
            var lastName_jpParameter = lastName_jp != null ?
                new ObjectParameter("LastName_jp", lastName_jp) :
                new ObjectParameter("LastName_jp", typeof(string));
    
            var lastName_krParameter = lastName_kr != null ?
                new ObjectParameter("LastName_kr", lastName_kr) :
                new ObjectParameter("LastName_kr", typeof(string));
    
            var lastName_cnParameter = lastName_cn != null ?
                new ObjectParameter("LastName_cn", lastName_cn) :
                new ObjectParameter("LastName_cn", typeof(string));
    
            var lastName_frParameter = lastName_fr != null ?
                new ObjectParameter("LastName_fr", lastName_fr) :
                new ObjectParameter("LastName_fr", typeof(string));
    
            var lastName_tlParameter = lastName_tl != null ?
                new ObjectParameter("LastName_tl", lastName_tl) :
                new ObjectParameter("LastName_tl", typeof(string));
    
            var sexParameter = sex != null ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(string));
    
            var birthDateParameter = birthDate != null ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(string));
    
            var countryOfCitizenshipParameter = countryOfCitizenship != null ?
                new ObjectParameter("CountryOfCitizenship", countryOfCitizenship) :
                new ObjectParameter("CountryOfCitizenship", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var isJapaneseParameter = isJapanese != null ?
                new ObjectParameter("IsJapanese", isJapanese) :
                new ObjectParameter("IsJapanese", typeof(string));
    
            var livingCountryIDParameter = livingCountryID != null ?
                new ObjectParameter("LivingCountryID", livingCountryID) :
                new ObjectParameter("LivingCountryID", typeof(string));
    
            var cityOfOverseas_enParameter = cityOfOverseas_en != null ?
                new ObjectParameter("CityOfOverseas_en", cityOfOverseas_en) :
                new ObjectParameter("CityOfOverseas_en", typeof(string));
    
            var cityOfOverseas_jpParameter = cityOfOverseas_jp != null ?
                new ObjectParameter("CityOfOverseas_jp", cityOfOverseas_jp) :
                new ObjectParameter("CityOfOverseas_jp", typeof(string));
    
            var cityOfOverseas_krParameter = cityOfOverseas_kr != null ?
                new ObjectParameter("CityOfOverseas_kr", cityOfOverseas_kr) :
                new ObjectParameter("CityOfOverseas_kr", typeof(string));
    
            var cityOfOverseas_cnParameter = cityOfOverseas_cn != null ?
                new ObjectParameter("CityOfOverseas_cn", cityOfOverseas_cn) :
                new ObjectParameter("CityOfOverseas_cn", typeof(string));
    
            var cityOfOverseas_frParameter = cityOfOverseas_fr != null ?
                new ObjectParameter("CityOfOverseas_fr", cityOfOverseas_fr) :
                new ObjectParameter("CityOfOverseas_fr", typeof(string));
    
            var cityOfOverseas_tlParameter = cityOfOverseas_tl != null ?
                new ObjectParameter("CityOfOverseas_tl", cityOfOverseas_tl) :
                new ObjectParameter("CityOfOverseas_tl", typeof(string));
    
            var nativeLanguageIDParameter = nativeLanguageID != null ?
                new ObjectParameter("NativeLanguageID", nativeLanguageID) :
                new ObjectParameter("NativeLanguageID", typeof(string));
    
            var foriegnLanguage1IDParameter = foriegnLanguage1ID != null ?
                new ObjectParameter("ForiegnLanguage1ID", foriegnLanguage1ID) :
                new ObjectParameter("ForiegnLanguage1ID", typeof(string));
    
            var foriegnLanguage2IDParameter = foriegnLanguage2ID != null ?
                new ObjectParameter("ForiegnLanguage2ID", foriegnLanguage2ID) :
                new ObjectParameter("ForiegnLanguage2ID", typeof(string));
    
            var foriegnLanguage3IDParameter = foriegnLanguage3ID != null ?
                new ObjectParameter("ForiegnLanguage3ID", foriegnLanguage3ID) :
                new ObjectParameter("ForiegnLanguage3ID", typeof(string));
    
            var foriegnLanguage4IDParameter = foriegnLanguage4ID != null ?
                new ObjectParameter("ForiegnLanguage4ID", foriegnLanguage4ID) :
                new ObjectParameter("ForiegnLanguage4ID", typeof(string));
    
            var foreignLang1LevelParameter = foreignLang1Level != null ?
                new ObjectParameter("ForeignLang1Level", foreignLang1Level) :
                new ObjectParameter("ForeignLang1Level", typeof(string));
    
            var foreignLang2LevelParameter = foreignLang2Level != null ?
                new ObjectParameter("ForeignLang2Level", foreignLang2Level) :
                new ObjectParameter("ForeignLang2Level", typeof(string));
    
            var foreignLang3LevelParameter = foreignLang3Level != null ?
                new ObjectParameter("ForeignLang3Level", foreignLang3Level) :
                new ObjectParameter("ForeignLang3Level", typeof(string));
    
            var foreignLang4LevelParameter = foreignLang4Level != null ?
                new ObjectParameter("ForeignLang4Level", foreignLang4Level) :
                new ObjectParameter("ForeignLang4Level", typeof(string));
    
            var translationExpIDParameter = translationExpID != null ?
                new ObjectParameter("TranslationExpID", translationExpID) :
                new ObjectParameter("TranslationExpID", typeof(string));
    
            var otherLanguageParameter = otherLanguage != null ?
                new ObjectParameter("OtherLanguage", otherLanguage) :
                new ObjectParameter("OtherLanguage", typeof(string));
    
            var otherLangQualificationParameter = otherLangQualification != null ?
                new ObjectParameter("OtherLangQualification", otherLangQualification) :
                new ObjectParameter("OtherLangQualification", typeof(string));
    
            var visaTypeIDParameter = visaTypeID != null ?
                new ObjectParameter("VisaTypeID", visaTypeID) :
                new ObjectParameter("VisaTypeID", typeof(string));
    
            var visaDeadLineParameter = visaDeadLine != null ?
                new ObjectParameter("VisaDeadLine", visaDeadLine) :
                new ObjectParameter("VisaDeadLine", typeof(string));
    
            var district_enParameter = district_en != null ?
                new ObjectParameter("District_en", district_en) :
                new ObjectParameter("District_en", typeof(string));
    
            var district_jpParameter = district_jp != null ?
                new ObjectParameter("District_jp", district_jp) :
                new ObjectParameter("District_jp", typeof(string));
    
            var district_krParameter = district_kr != null ?
                new ObjectParameter("District_kr", district_kr) :
                new ObjectParameter("District_kr", typeof(string));
    
            var district_cnParameter = district_cn != null ?
                new ObjectParameter("District_cn", district_cn) :
                new ObjectParameter("District_cn", typeof(string));
    
            var district_frParameter = district_fr != null ?
                new ObjectParameter("District_fr", district_fr) :
                new ObjectParameter("District_fr", typeof(string));
    
            var district_tlParameter = district_tl != null ?
                new ObjectParameter("District_tl", district_tl) :
                new ObjectParameter("District_tl", typeof(string));
    
            var townName_enParameter = townName_en != null ?
                new ObjectParameter("TownName_en", townName_en) :
                new ObjectParameter("TownName_en", typeof(string));
    
            var townName_jpParameter = townName_jp != null ?
                new ObjectParameter("TownName_jp", townName_jp) :
                new ObjectParameter("TownName_jp", typeof(string));
    
            var townName_krParameter = townName_kr != null ?
                new ObjectParameter("TownName_kr", townName_kr) :
                new ObjectParameter("TownName_kr", typeof(string));
    
            var townName_cnParameter = townName_cn != null ?
                new ObjectParameter("TownName_cn", townName_cn) :
                new ObjectParameter("TownName_cn", typeof(string));
    
            var townName_frParameter = townName_fr != null ?
                new ObjectParameter("TownName_fr", townName_fr) :
                new ObjectParameter("TownName_fr", typeof(string));
    
            var townName_tlParameter = townName_tl != null ?
                new ObjectParameter("TownName_tl", townName_tl) :
                new ObjectParameter("TownName_tl", typeof(string));
    
            var address_enParameter = address_en != null ?
                new ObjectParameter("Address_en", address_en) :
                new ObjectParameter("Address_en", typeof(string));
    
            var address_jpParameter = address_jp != null ?
                new ObjectParameter("Address_jp", address_jp) :
                new ObjectParameter("Address_jp", typeof(string));
    
            var address_krParameter = address_kr != null ?
                new ObjectParameter("Address_kr", address_kr) :
                new ObjectParameter("Address_kr", typeof(string));
    
            var address_cnParameter = address_cn != null ?
                new ObjectParameter("Address_cn", address_cn) :
                new ObjectParameter("Address_cn", typeof(string));
    
            var address_frParameter = address_fr != null ?
                new ObjectParameter("Address_fr", address_fr) :
                new ObjectParameter("Address_fr", typeof(string));
    
            var address_tlParameter = address_tl != null ?
                new ObjectParameter("Address_tl", address_tl) :
                new ObjectParameter("Address_tl", typeof(string));
    
            var apartmentName_enParameter = apartmentName_en != null ?
                new ObjectParameter("ApartmentName_en", apartmentName_en) :
                new ObjectParameter("ApartmentName_en", typeof(string));
    
            var apartmentName_jpParameter = apartmentName_jp != null ?
                new ObjectParameter("ApartmentName_jp", apartmentName_jp) :
                new ObjectParameter("ApartmentName_jp", typeof(string));
    
            var apartmentName_krParameter = apartmentName_kr != null ?
                new ObjectParameter("ApartmentName_kr", apartmentName_kr) :
                new ObjectParameter("ApartmentName_kr", typeof(string));
    
            var apartmentName_cnParameter = apartmentName_cn != null ?
                new ObjectParameter("ApartmentName_cn", apartmentName_cn) :
                new ObjectParameter("ApartmentName_cn", typeof(string));
    
            var apartmentName_frParameter = apartmentName_fr != null ?
                new ObjectParameter("ApartmentName_fr", apartmentName_fr) :
                new ObjectParameter("ApartmentName_fr", typeof(string));
    
            var apartmentName_tlParameter = apartmentName_tl != null ?
                new ObjectParameter("ApartmentName_tl", apartmentName_tl) :
                new ObjectParameter("ApartmentName_tl", typeof(string));
    
            var apartmentNoParameter = apartmentNo != null ?
                new ObjectParameter("ApartmentNo", apartmentNo) :
                new ObjectParameter("ApartmentNo", typeof(string));
    
            var telephoneNoParameter = telephoneNo != null ?
                new ObjectParameter("TelephoneNo", telephoneNo) :
                new ObjectParameter("TelephoneNo", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var homeCountryPhoneParameter = homeCountryPhone != null ?
                new ObjectParameter("HomeCountryPhone", homeCountryPhone) :
                new ObjectParameter("HomeCountryPhone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var homeCountryAddress_enParameter = homeCountryAddress_en != null ?
                new ObjectParameter("HomeCountryAddress_en", homeCountryAddress_en) :
                new ObjectParameter("HomeCountryAddress_en", typeof(string));
    
            var homeCountryAddress_jpParameter = homeCountryAddress_jp != null ?
                new ObjectParameter("HomeCountryAddress_jp", homeCountryAddress_jp) :
                new ObjectParameter("HomeCountryAddress_jp", typeof(string));
    
            var homeCountryAddress_krParameter = homeCountryAddress_kr != null ?
                new ObjectParameter("HomeCountryAddress_kr", homeCountryAddress_kr) :
                new ObjectParameter("HomeCountryAddress_kr", typeof(string));
    
            var homeCountryAddress_cnParameter = homeCountryAddress_cn != null ?
                new ObjectParameter("HomeCountryAddress_cn", homeCountryAddress_cn) :
                new ObjectParameter("HomeCountryAddress_cn", typeof(string));
    
            var homeCountryAddress_frParameter = homeCountryAddress_fr != null ?
                new ObjectParameter("HomeCountryAddress_fr", homeCountryAddress_fr) :
                new ObjectParameter("HomeCountryAddress_fr", typeof(string));
    
            var homeCountryAddress_tlParameter = homeCountryAddress_tl != null ?
                new ObjectParameter("HomeCountryAddress_tl", homeCountryAddress_tl) :
                new ObjectParameter("HomeCountryAddress_tl", typeof(string));
    
            var hasSocialExperienceJapanParameter = hasSocialExperienceJapan != null ?
                new ObjectParameter("HasSocialExperienceJapan", hasSocialExperienceJapan) :
                new ObjectParameter("HasSocialExperienceJapan", typeof(string));
    
            var hasSocialExperienceOtherCountryParameter = hasSocialExperienceOtherCountry != null ?
                new ObjectParameter("HasSocialExperienceOtherCountry", hasSocialExperienceOtherCountry) :
                new ObjectParameter("HasSocialExperienceOtherCountry", typeof(string));
    
            var nationalityIDParameter = nationalityID != null ?
                new ObjectParameter("NationalityID", nationalityID) :
                new ObjectParameter("NationalityID", typeof(string));
    
            var currentStatesParameter = currentStates != null ?
                new ObjectParameter("CurrentStates", currentStates) :
                new ObjectParameter("CurrentStates", typeof(string));
    
            var street_enParameter = street_en != null ?
                new ObjectParameter("Street_en", street_en) :
                new ObjectParameter("Street_en", typeof(string));
    
            var street_jpParameter = street_jp != null ?
                new ObjectParameter("Street_jp", street_jp) :
                new ObjectParameter("Street_jp", typeof(string));
    
            var street_krParameter = street_kr != null ?
                new ObjectParameter("Street_kr", street_kr) :
                new ObjectParameter("Street_kr", typeof(string));
    
            var street_cnParameter = street_cn != null ?
                new ObjectParameter("Street_cn", street_cn) :
                new ObjectParameter("Street_cn", typeof(string));
    
            var street_frParameter = street_fr != null ?
                new ObjectParameter("Street_fr", street_fr) :
                new ObjectParameter("Street_fr", typeof(string));
    
            var street_tlParameter = street_tl != null ?
                new ObjectParameter("Street_tl", street_tl) :
                new ObjectParameter("Street_tl", typeof(string));
    
            var professionSpecialitiesParameter = professionSpecialities != null ?
                new ObjectParameter("ProfessionSpecialities", professionSpecialities) :
                new ObjectParameter("ProfessionSpecialities", typeof(string));
    
            var educationalDegree1Parameter = educationalDegree1 != null ?
                new ObjectParameter("EducationalDegree1", educationalDegree1) :
                new ObjectParameter("EducationalDegree1", typeof(string));
    
            var educationalDegree2Parameter = educationalDegree2 != null ?
                new ObjectParameter("EducationalDegree2", educationalDegree2) :
                new ObjectParameter("EducationalDegree2", typeof(string));
    
            var educationalDegree3Parameter = educationalDegree3 != null ?
                new ObjectParameter("EducationalDegree3", educationalDegree3) :
                new ObjectParameter("EducationalDegree3", typeof(string));
    
            var mainCareer_enParameter = mainCareer_en != null ?
                new ObjectParameter("MainCareer_en", mainCareer_en) :
                new ObjectParameter("MainCareer_en", typeof(string));
    
            var mainCareer_jpParameter = mainCareer_jp != null ?
                new ObjectParameter("MainCareer_jp", mainCareer_jp) :
                new ObjectParameter("MainCareer_jp", typeof(string));
    
            var mainCareer_krParameter = mainCareer_kr != null ?
                new ObjectParameter("MainCareer_kr", mainCareer_kr) :
                new ObjectParameter("MainCareer_kr", typeof(string));
    
            var mainCareer_cnParameter = mainCareer_cn != null ?
                new ObjectParameter("MainCareer_cn", mainCareer_cn) :
                new ObjectParameter("MainCareer_cn", typeof(string));
    
            var mainCareer_frParameter = mainCareer_fr != null ?
                new ObjectParameter("MainCareer_fr", mainCareer_fr) :
                new ObjectParameter("MainCareer_fr", typeof(string));
    
            var mainCareer_tlParameter = mainCareer_tl != null ?
                new ObjectParameter("MainCareer_tl", mainCareer_tl) :
                new ObjectParameter("MainCareer_tl", typeof(string));
    
            var selfPR_enParameter = selfPR_en != null ?
                new ObjectParameter("SelfPR_en", selfPR_en) :
                new ObjectParameter("SelfPR_en", typeof(string));
    
            var selfPR_jpParameter = selfPR_jp != null ?
                new ObjectParameter("SelfPR_jp", selfPR_jp) :
                new ObjectParameter("SelfPR_jp", typeof(string));
    
            var selfPR_krParameter = selfPR_kr != null ?
                new ObjectParameter("SelfPR_kr", selfPR_kr) :
                new ObjectParameter("SelfPR_kr", typeof(string));
    
            var selfPR_cnParameter = selfPR_cn != null ?
                new ObjectParameter("SelfPR_cn", selfPR_cn) :
                new ObjectParameter("SelfPR_cn", typeof(string));
    
            var selfPR_frParameter = selfPR_fr != null ?
                new ObjectParameter("SelfPR_fr", selfPR_fr) :
                new ObjectParameter("SelfPR_fr", typeof(string));
    
            var selfPR_tlParameter = selfPR_tl != null ?
                new ObjectParameter("SelfPR_tl", selfPR_tl) :
                new ObjectParameter("SelfPR_tl", typeof(string));
    
            var createdDateParameter = createdDate != null ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedDateParameter = updatedDate != null ?
                new ObjectParameter("UpdatedDate", updatedDate) :
                new ObjectParameter("UpdatedDate", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var appidParameter = appid.HasValue ?
                new ObjectParameter("appid", appid) :
                new ObjectParameter("appid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetAdvancedSearch", cultureIdParameter, iDParameter, staffNameParameter, registrationIDParameter, staffEmailIDParameter, staffTypeIDParameter, applicationIDParameter, registrationDateParameter, passwordParameter, nickName_enParameter, nickName_jpParameter, nickName_krParameter, nickName_cnParameter, nickName_frParameter, nickName_tlParameter, surnameParameter, firstName_enParameter, firstName_jpParameter, firstName_krParameter, firstName_cnParameter, firstName_frParameter, firstName_tlParameter, middleName_enParameter, middleName_jpParameter, middleName_krParameter, middleName_cnParameter, middleName_frParameter, middleName_tlParameter, lastName_enParameter, lastName_jpParameter, lastName_krParameter, lastName_cnParameter, lastName_frParameter, lastName_tlParameter, sexParameter, birthDateParameter, countryOfCitizenshipParameter, postalCodeParameter, isJapaneseParameter, livingCountryIDParameter, cityOfOverseas_enParameter, cityOfOverseas_jpParameter, cityOfOverseas_krParameter, cityOfOverseas_cnParameter, cityOfOverseas_frParameter, cityOfOverseas_tlParameter, nativeLanguageIDParameter, foriegnLanguage1IDParameter, foriegnLanguage2IDParameter, foriegnLanguage3IDParameter, foriegnLanguage4IDParameter, foreignLang1LevelParameter, foreignLang2LevelParameter, foreignLang3LevelParameter, foreignLang4LevelParameter, translationExpIDParameter, otherLanguageParameter, otherLangQualificationParameter, visaTypeIDParameter, visaDeadLineParameter, district_enParameter, district_jpParameter, district_krParameter, district_cnParameter, district_frParameter, district_tlParameter, townName_enParameter, townName_jpParameter, townName_krParameter, townName_cnParameter, townName_frParameter, townName_tlParameter, address_enParameter, address_jpParameter, address_krParameter, address_cnParameter, address_frParameter, address_tlParameter, apartmentName_enParameter, apartmentName_jpParameter, apartmentName_krParameter, apartmentName_cnParameter, apartmentName_frParameter, apartmentName_tlParameter, apartmentNoParameter, telephoneNoParameter, mobileNoParameter, homeCountryPhoneParameter, faxParameter, homeCountryAddress_enParameter, homeCountryAddress_jpParameter, homeCountryAddress_krParameter, homeCountryAddress_cnParameter, homeCountryAddress_frParameter, homeCountryAddress_tlParameter, hasSocialExperienceJapanParameter, hasSocialExperienceOtherCountryParameter, nationalityIDParameter, currentStatesParameter, street_enParameter, street_jpParameter, street_krParameter, street_cnParameter, street_frParameter, street_tlParameter, professionSpecialitiesParameter, educationalDegree1Parameter, educationalDegree2Parameter, educationalDegree3Parameter, mainCareer_enParameter, mainCareer_jpParameter, mainCareer_krParameter, mainCareer_cnParameter, mainCareer_frParameter, mainCareer_tlParameter, selfPR_enParameter, selfPR_jpParameter, selfPR_krParameter, selfPR_cnParameter, selfPR_frParameter, selfPR_tlParameter, createdDateParameter, createdByParameter, updatedDateParameter, updatedByParameter, imageParameter, appidParameter);
        }
    
        public virtual int SP_GetAdvancedStaffSearchData(string currentUserID, string applicationID, string culture, string registrationID, string myIdentityNo, string staffEmailID, string name, string telephone, string mobile, string fax, string textSearch, string achievementSearch, string sourceOfRegistrationID, string foriegnLanguage1ID, string foreignLang1Level, string foriegnLanguage2ID, string foreignLang2Level, string foriegnLanguage3ID, string foreignLang3Level, string foriegnLanguage4ID, string foreignLang4Level, string sex, string ageFrom, string ageTo, string nationalityID, string visaCountryID, string visaTypeID, string visaExpire, string rdoResidenceType, string residenceNationalityID, Nullable<bool> isIntroVideo, Nullable<bool> chkActive30Days, Nullable<bool> isSNS, string sNSAccount, Nullable<bool> isDtpExperience, string dtpExp, string technicalSkillParent, string technicalSkillChild, string developmentSkillParent, string developmentSkillChild, string knowledgeSkillParent, string knowledgeSkillChild, string medicalSkillParent, string medicalSkillChild, string translationFrom, string translationTo, string translationUnitPrice, string interpretationFrom, string interpretationTo, string interpretationUnitPriceType, string interpretationUnitPriceValue, Nullable<bool> isSuccessiveInterpretation, Nullable<bool> isWhisperingInterpretation, Nullable<bool> isSimultaneousInterpretation, string narrationFrom, string narrationTo, Nullable<bool> isSpecialistNarator, string narrationPerformance)
        {
            var currentUserIDParameter = currentUserID != null ?
                new ObjectParameter("CurrentUserID", currentUserID) :
                new ObjectParameter("CurrentUserID", typeof(string));
    
            var applicationIDParameter = applicationID != null ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(string));
    
            var cultureParameter = culture != null ?
                new ObjectParameter("Culture", culture) :
                new ObjectParameter("Culture", typeof(string));
    
            var registrationIDParameter = registrationID != null ?
                new ObjectParameter("RegistrationID", registrationID) :
                new ObjectParameter("RegistrationID", typeof(string));
    
            var myIdentityNoParameter = myIdentityNo != null ?
                new ObjectParameter("MyIdentityNo", myIdentityNo) :
                new ObjectParameter("MyIdentityNo", typeof(string));
    
            var staffEmailIDParameter = staffEmailID != null ?
                new ObjectParameter("StaffEmailID", staffEmailID) :
                new ObjectParameter("StaffEmailID", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var textSearchParameter = textSearch != null ?
                new ObjectParameter("TextSearch", textSearch) :
                new ObjectParameter("TextSearch", typeof(string));
    
            var achievementSearchParameter = achievementSearch != null ?
                new ObjectParameter("AchievementSearch", achievementSearch) :
                new ObjectParameter("AchievementSearch", typeof(string));
    
            var sourceOfRegistrationIDParameter = sourceOfRegistrationID != null ?
                new ObjectParameter("SourceOfRegistrationID", sourceOfRegistrationID) :
                new ObjectParameter("SourceOfRegistrationID", typeof(string));
    
            var foriegnLanguage1IDParameter = foriegnLanguage1ID != null ?
                new ObjectParameter("ForiegnLanguage1ID", foriegnLanguage1ID) :
                new ObjectParameter("ForiegnLanguage1ID", typeof(string));
    
            var foreignLang1LevelParameter = foreignLang1Level != null ?
                new ObjectParameter("ForeignLang1Level", foreignLang1Level) :
                new ObjectParameter("ForeignLang1Level", typeof(string));
    
            var foriegnLanguage2IDParameter = foriegnLanguage2ID != null ?
                new ObjectParameter("ForiegnLanguage2ID", foriegnLanguage2ID) :
                new ObjectParameter("ForiegnLanguage2ID", typeof(string));
    
            var foreignLang2LevelParameter = foreignLang2Level != null ?
                new ObjectParameter("ForeignLang2Level", foreignLang2Level) :
                new ObjectParameter("ForeignLang2Level", typeof(string));
    
            var foriegnLanguage3IDParameter = foriegnLanguage3ID != null ?
                new ObjectParameter("ForiegnLanguage3ID", foriegnLanguage3ID) :
                new ObjectParameter("ForiegnLanguage3ID", typeof(string));
    
            var foreignLang3LevelParameter = foreignLang3Level != null ?
                new ObjectParameter("ForeignLang3Level", foreignLang3Level) :
                new ObjectParameter("ForeignLang3Level", typeof(string));
    
            var foriegnLanguage4IDParameter = foriegnLanguage4ID != null ?
                new ObjectParameter("ForiegnLanguage4ID", foriegnLanguage4ID) :
                new ObjectParameter("ForiegnLanguage4ID", typeof(string));
    
            var foreignLang4LevelParameter = foreignLang4Level != null ?
                new ObjectParameter("ForeignLang4Level", foreignLang4Level) :
                new ObjectParameter("ForeignLang4Level", typeof(string));
    
            var sexParameter = sex != null ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(string));
    
            var ageFromParameter = ageFrom != null ?
                new ObjectParameter("AgeFrom", ageFrom) :
                new ObjectParameter("AgeFrom", typeof(string));
    
            var ageToParameter = ageTo != null ?
                new ObjectParameter("AgeTo", ageTo) :
                new ObjectParameter("AgeTo", typeof(string));
    
            var nationalityIDParameter = nationalityID != null ?
                new ObjectParameter("NationalityID", nationalityID) :
                new ObjectParameter("NationalityID", typeof(string));
    
            var visaCountryIDParameter = visaCountryID != null ?
                new ObjectParameter("VisaCountryID", visaCountryID) :
                new ObjectParameter("VisaCountryID", typeof(string));
    
            var visaTypeIDParameter = visaTypeID != null ?
                new ObjectParameter("VisaTypeID", visaTypeID) :
                new ObjectParameter("VisaTypeID", typeof(string));
    
            var visaExpireParameter = visaExpire != null ?
                new ObjectParameter("VisaExpire", visaExpire) :
                new ObjectParameter("VisaExpire", typeof(string));
    
            var rdoResidenceTypeParameter = rdoResidenceType != null ?
                new ObjectParameter("RdoResidenceType", rdoResidenceType) :
                new ObjectParameter("RdoResidenceType", typeof(string));
    
            var residenceNationalityIDParameter = residenceNationalityID != null ?
                new ObjectParameter("ResidenceNationalityID", residenceNationalityID) :
                new ObjectParameter("ResidenceNationalityID", typeof(string));
    
            var isIntroVideoParameter = isIntroVideo.HasValue ?
                new ObjectParameter("IsIntroVideo", isIntroVideo) :
                new ObjectParameter("IsIntroVideo", typeof(bool));
    
            var chkActive30DaysParameter = chkActive30Days.HasValue ?
                new ObjectParameter("ChkActive30Days", chkActive30Days) :
                new ObjectParameter("ChkActive30Days", typeof(bool));
    
            var isSNSParameter = isSNS.HasValue ?
                new ObjectParameter("IsSNS", isSNS) :
                new ObjectParameter("IsSNS", typeof(bool));
    
            var sNSAccountParameter = sNSAccount != null ?
                new ObjectParameter("SNSAccount", sNSAccount) :
                new ObjectParameter("SNSAccount", typeof(string));
    
            var isDtpExperienceParameter = isDtpExperience.HasValue ?
                new ObjectParameter("IsDtpExperience", isDtpExperience) :
                new ObjectParameter("IsDtpExperience", typeof(bool));
    
            var dtpExpParameter = dtpExp != null ?
                new ObjectParameter("DtpExp", dtpExp) :
                new ObjectParameter("DtpExp", typeof(string));
    
            var technicalSkillParentParameter = technicalSkillParent != null ?
                new ObjectParameter("TechnicalSkillParent", technicalSkillParent) :
                new ObjectParameter("TechnicalSkillParent", typeof(string));
    
            var technicalSkillChildParameter = technicalSkillChild != null ?
                new ObjectParameter("TechnicalSkillChild", technicalSkillChild) :
                new ObjectParameter("TechnicalSkillChild", typeof(string));
    
            var developmentSkillParentParameter = developmentSkillParent != null ?
                new ObjectParameter("DevelopmentSkillParent", developmentSkillParent) :
                new ObjectParameter("DevelopmentSkillParent", typeof(string));
    
            var developmentSkillChildParameter = developmentSkillChild != null ?
                new ObjectParameter("DevelopmentSkillChild", developmentSkillChild) :
                new ObjectParameter("DevelopmentSkillChild", typeof(string));
    
            var knowledgeSkillParentParameter = knowledgeSkillParent != null ?
                new ObjectParameter("KnowledgeSkillParent", knowledgeSkillParent) :
                new ObjectParameter("KnowledgeSkillParent", typeof(string));
    
            var knowledgeSkillChildParameter = knowledgeSkillChild != null ?
                new ObjectParameter("KnowledgeSkillChild", knowledgeSkillChild) :
                new ObjectParameter("KnowledgeSkillChild", typeof(string));
    
            var medicalSkillParentParameter = medicalSkillParent != null ?
                new ObjectParameter("MedicalSkillParent", medicalSkillParent) :
                new ObjectParameter("MedicalSkillParent", typeof(string));
    
            var medicalSkillChildParameter = medicalSkillChild != null ?
                new ObjectParameter("MedicalSkillChild", medicalSkillChild) :
                new ObjectParameter("MedicalSkillChild", typeof(string));
    
            var translationFromParameter = translationFrom != null ?
                new ObjectParameter("TranslationFrom", translationFrom) :
                new ObjectParameter("TranslationFrom", typeof(string));
    
            var translationToParameter = translationTo != null ?
                new ObjectParameter("TranslationTo", translationTo) :
                new ObjectParameter("TranslationTo", typeof(string));
    
            var translationUnitPriceParameter = translationUnitPrice != null ?
                new ObjectParameter("TranslationUnitPrice", translationUnitPrice) :
                new ObjectParameter("TranslationUnitPrice", typeof(string));
    
            var interpretationFromParameter = interpretationFrom != null ?
                new ObjectParameter("InterpretationFrom", interpretationFrom) :
                new ObjectParameter("InterpretationFrom", typeof(string));
    
            var interpretationToParameter = interpretationTo != null ?
                new ObjectParameter("InterpretationTo", interpretationTo) :
                new ObjectParameter("InterpretationTo", typeof(string));
    
            var interpretationUnitPriceTypeParameter = interpretationUnitPriceType != null ?
                new ObjectParameter("InterpretationUnitPriceType", interpretationUnitPriceType) :
                new ObjectParameter("InterpretationUnitPriceType", typeof(string));
    
            var interpretationUnitPriceValueParameter = interpretationUnitPriceValue != null ?
                new ObjectParameter("InterpretationUnitPriceValue", interpretationUnitPriceValue) :
                new ObjectParameter("InterpretationUnitPriceValue", typeof(string));
    
            var isSuccessiveInterpretationParameter = isSuccessiveInterpretation.HasValue ?
                new ObjectParameter("IsSuccessiveInterpretation", isSuccessiveInterpretation) :
                new ObjectParameter("IsSuccessiveInterpretation", typeof(bool));
    
            var isWhisperingInterpretationParameter = isWhisperingInterpretation.HasValue ?
                new ObjectParameter("IsWhisperingInterpretation", isWhisperingInterpretation) :
                new ObjectParameter("IsWhisperingInterpretation", typeof(bool));
    
            var isSimultaneousInterpretationParameter = isSimultaneousInterpretation.HasValue ?
                new ObjectParameter("IsSimultaneousInterpretation", isSimultaneousInterpretation) :
                new ObjectParameter("IsSimultaneousInterpretation", typeof(bool));
    
            var narrationFromParameter = narrationFrom != null ?
                new ObjectParameter("NarrationFrom", narrationFrom) :
                new ObjectParameter("NarrationFrom", typeof(string));
    
            var narrationToParameter = narrationTo != null ?
                new ObjectParameter("NarrationTo", narrationTo) :
                new ObjectParameter("NarrationTo", typeof(string));
    
            var isSpecialistNaratorParameter = isSpecialistNarator.HasValue ?
                new ObjectParameter("IsSpecialistNarator", isSpecialistNarator) :
                new ObjectParameter("IsSpecialistNarator", typeof(bool));
    
            var narrationPerformanceParameter = narrationPerformance != null ?
                new ObjectParameter("NarrationPerformance", narrationPerformance) :
                new ObjectParameter("NarrationPerformance", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetAdvancedStaffSearchData", currentUserIDParameter, applicationIDParameter, cultureParameter, registrationIDParameter, myIdentityNoParameter, staffEmailIDParameter, nameParameter, telephoneParameter, mobileParameter, faxParameter, textSearchParameter, achievementSearchParameter, sourceOfRegistrationIDParameter, foriegnLanguage1IDParameter, foreignLang1LevelParameter, foriegnLanguage2IDParameter, foreignLang2LevelParameter, foriegnLanguage3IDParameter, foreignLang3LevelParameter, foriegnLanguage4IDParameter, foreignLang4LevelParameter, sexParameter, ageFromParameter, ageToParameter, nationalityIDParameter, visaCountryIDParameter, visaTypeIDParameter, visaExpireParameter, rdoResidenceTypeParameter, residenceNationalityIDParameter, isIntroVideoParameter, chkActive30DaysParameter, isSNSParameter, sNSAccountParameter, isDtpExperienceParameter, dtpExpParameter, technicalSkillParentParameter, technicalSkillChildParameter, developmentSkillParentParameter, developmentSkillChildParameter, knowledgeSkillParentParameter, knowledgeSkillChildParameter, medicalSkillParentParameter, medicalSkillChildParameter, translationFromParameter, translationToParameter, translationUnitPriceParameter, interpretationFromParameter, interpretationToParameter, interpretationUnitPriceTypeParameter, interpretationUnitPriceValueParameter, isSuccessiveInterpretationParameter, isWhisperingInterpretationParameter, isSimultaneousInterpretationParameter, narrationFromParameter, narrationToParameter, isSpecialistNaratorParameter, narrationPerformanceParameter);
        }
    
        public virtual int SP_GetAdvancedStaffSearchData_OLD(string currentUserID, string applicationID, string culture, string registrationID, string myIdentityNo, string staffEmailID, string name, string telephone, string mobile, string fax, string textSearch, string achievementSearch, string sourceOfRegistrationID, string foriegnLanguage1ID, string foreignLang1Level, string foriegnLanguage2ID, string foreignLang2Level, string foriegnLanguage3ID, string foreignLang3Level, string foriegnLanguage4ID, string foreignLang4Level, string sex, string ageFrom, string ageTo, string nationalityID, string visaCountryID, string visaTypeID, string visaExpire, string rdoResidenceType, string residenceNationalityID, string isIntroVideo, string chkActive30Days, string isSNS, string sNSAccount, string isDtpExperience, string dtpExp, string technicalSkillParent, string technicalSkillChild, string developmentSkillParent, string developmentSkillChild, string knowledgeSkillParent, string knowledgeSkillChild, string medicalSkillParent, string medicalSkillChild, string translationFrom, string translationTo, string translationUnitPrice, string interpretationFrom, string interpretationTo, string interpretationUnitPriceType, string interpretationUnitPriceValue, string isSuccessiveInterpretation, string isWhisperingInterpretation, string isSimultaneousInterpretation, string narrationFrom, string narrationTo, string isSpecialistNarator, string narrationPerformance)
        {
            var currentUserIDParameter = currentUserID != null ?
                new ObjectParameter("CurrentUserID", currentUserID) :
                new ObjectParameter("CurrentUserID", typeof(string));
    
            var applicationIDParameter = applicationID != null ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(string));
    
            var cultureParameter = culture != null ?
                new ObjectParameter("Culture", culture) :
                new ObjectParameter("Culture", typeof(string));
    
            var registrationIDParameter = registrationID != null ?
                new ObjectParameter("RegistrationID", registrationID) :
                new ObjectParameter("RegistrationID", typeof(string));
    
            var myIdentityNoParameter = myIdentityNo != null ?
                new ObjectParameter("MyIdentityNo", myIdentityNo) :
                new ObjectParameter("MyIdentityNo", typeof(string));
    
            var staffEmailIDParameter = staffEmailID != null ?
                new ObjectParameter("StaffEmailID", staffEmailID) :
                new ObjectParameter("StaffEmailID", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var textSearchParameter = textSearch != null ?
                new ObjectParameter("TextSearch", textSearch) :
                new ObjectParameter("TextSearch", typeof(string));
    
            var achievementSearchParameter = achievementSearch != null ?
                new ObjectParameter("AchievementSearch", achievementSearch) :
                new ObjectParameter("AchievementSearch", typeof(string));
    
            var sourceOfRegistrationIDParameter = sourceOfRegistrationID != null ?
                new ObjectParameter("SourceOfRegistrationID", sourceOfRegistrationID) :
                new ObjectParameter("SourceOfRegistrationID", typeof(string));
    
            var foriegnLanguage1IDParameter = foriegnLanguage1ID != null ?
                new ObjectParameter("ForiegnLanguage1ID", foriegnLanguage1ID) :
                new ObjectParameter("ForiegnLanguage1ID", typeof(string));
    
            var foreignLang1LevelParameter = foreignLang1Level != null ?
                new ObjectParameter("ForeignLang1Level", foreignLang1Level) :
                new ObjectParameter("ForeignLang1Level", typeof(string));
    
            var foriegnLanguage2IDParameter = foriegnLanguage2ID != null ?
                new ObjectParameter("ForiegnLanguage2ID", foriegnLanguage2ID) :
                new ObjectParameter("ForiegnLanguage2ID", typeof(string));
    
            var foreignLang2LevelParameter = foreignLang2Level != null ?
                new ObjectParameter("ForeignLang2Level", foreignLang2Level) :
                new ObjectParameter("ForeignLang2Level", typeof(string));
    
            var foriegnLanguage3IDParameter = foriegnLanguage3ID != null ?
                new ObjectParameter("ForiegnLanguage3ID", foriegnLanguage3ID) :
                new ObjectParameter("ForiegnLanguage3ID", typeof(string));
    
            var foreignLang3LevelParameter = foreignLang3Level != null ?
                new ObjectParameter("ForeignLang3Level", foreignLang3Level) :
                new ObjectParameter("ForeignLang3Level", typeof(string));
    
            var foriegnLanguage4IDParameter = foriegnLanguage4ID != null ?
                new ObjectParameter("ForiegnLanguage4ID", foriegnLanguage4ID) :
                new ObjectParameter("ForiegnLanguage4ID", typeof(string));
    
            var foreignLang4LevelParameter = foreignLang4Level != null ?
                new ObjectParameter("ForeignLang4Level", foreignLang4Level) :
                new ObjectParameter("ForeignLang4Level", typeof(string));
    
            var sexParameter = sex != null ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(string));
    
            var ageFromParameter = ageFrom != null ?
                new ObjectParameter("AgeFrom", ageFrom) :
                new ObjectParameter("AgeFrom", typeof(string));
    
            var ageToParameter = ageTo != null ?
                new ObjectParameter("AgeTo", ageTo) :
                new ObjectParameter("AgeTo", typeof(string));
    
            var nationalityIDParameter = nationalityID != null ?
                new ObjectParameter("NationalityID", nationalityID) :
                new ObjectParameter("NationalityID", typeof(string));
    
            var visaCountryIDParameter = visaCountryID != null ?
                new ObjectParameter("VisaCountryID", visaCountryID) :
                new ObjectParameter("VisaCountryID", typeof(string));
    
            var visaTypeIDParameter = visaTypeID != null ?
                new ObjectParameter("VisaTypeID", visaTypeID) :
                new ObjectParameter("VisaTypeID", typeof(string));
    
            var visaExpireParameter = visaExpire != null ?
                new ObjectParameter("VisaExpire", visaExpire) :
                new ObjectParameter("VisaExpire", typeof(string));
    
            var rdoResidenceTypeParameter = rdoResidenceType != null ?
                new ObjectParameter("RdoResidenceType", rdoResidenceType) :
                new ObjectParameter("RdoResidenceType", typeof(string));
    
            var residenceNationalityIDParameter = residenceNationalityID != null ?
                new ObjectParameter("ResidenceNationalityID", residenceNationalityID) :
                new ObjectParameter("ResidenceNationalityID", typeof(string));
    
            var isIntroVideoParameter = isIntroVideo != null ?
                new ObjectParameter("IsIntroVideo", isIntroVideo) :
                new ObjectParameter("IsIntroVideo", typeof(string));
    
            var chkActive30DaysParameter = chkActive30Days != null ?
                new ObjectParameter("ChkActive30Days", chkActive30Days) :
                new ObjectParameter("ChkActive30Days", typeof(string));
    
            var isSNSParameter = isSNS != null ?
                new ObjectParameter("IsSNS", isSNS) :
                new ObjectParameter("IsSNS", typeof(string));
    
            var sNSAccountParameter = sNSAccount != null ?
                new ObjectParameter("SNSAccount", sNSAccount) :
                new ObjectParameter("SNSAccount", typeof(string));
    
            var isDtpExperienceParameter = isDtpExperience != null ?
                new ObjectParameter("IsDtpExperience", isDtpExperience) :
                new ObjectParameter("IsDtpExperience", typeof(string));
    
            var dtpExpParameter = dtpExp != null ?
                new ObjectParameter("DtpExp", dtpExp) :
                new ObjectParameter("DtpExp", typeof(string));
    
            var technicalSkillParentParameter = technicalSkillParent != null ?
                new ObjectParameter("TechnicalSkillParent", technicalSkillParent) :
                new ObjectParameter("TechnicalSkillParent", typeof(string));
    
            var technicalSkillChildParameter = technicalSkillChild != null ?
                new ObjectParameter("TechnicalSkillChild", technicalSkillChild) :
                new ObjectParameter("TechnicalSkillChild", typeof(string));
    
            var developmentSkillParentParameter = developmentSkillParent != null ?
                new ObjectParameter("DevelopmentSkillParent", developmentSkillParent) :
                new ObjectParameter("DevelopmentSkillParent", typeof(string));
    
            var developmentSkillChildParameter = developmentSkillChild != null ?
                new ObjectParameter("DevelopmentSkillChild", developmentSkillChild) :
                new ObjectParameter("DevelopmentSkillChild", typeof(string));
    
            var knowledgeSkillParentParameter = knowledgeSkillParent != null ?
                new ObjectParameter("KnowledgeSkillParent", knowledgeSkillParent) :
                new ObjectParameter("KnowledgeSkillParent", typeof(string));
    
            var knowledgeSkillChildParameter = knowledgeSkillChild != null ?
                new ObjectParameter("KnowledgeSkillChild", knowledgeSkillChild) :
                new ObjectParameter("KnowledgeSkillChild", typeof(string));
    
            var medicalSkillParentParameter = medicalSkillParent != null ?
                new ObjectParameter("MedicalSkillParent", medicalSkillParent) :
                new ObjectParameter("MedicalSkillParent", typeof(string));
    
            var medicalSkillChildParameter = medicalSkillChild != null ?
                new ObjectParameter("MedicalSkillChild", medicalSkillChild) :
                new ObjectParameter("MedicalSkillChild", typeof(string));
    
            var translationFromParameter = translationFrom != null ?
                new ObjectParameter("TranslationFrom", translationFrom) :
                new ObjectParameter("TranslationFrom", typeof(string));
    
            var translationToParameter = translationTo != null ?
                new ObjectParameter("TranslationTo", translationTo) :
                new ObjectParameter("TranslationTo", typeof(string));
    
            var translationUnitPriceParameter = translationUnitPrice != null ?
                new ObjectParameter("TranslationUnitPrice", translationUnitPrice) :
                new ObjectParameter("TranslationUnitPrice", typeof(string));
    
            var interpretationFromParameter = interpretationFrom != null ?
                new ObjectParameter("InterpretationFrom", interpretationFrom) :
                new ObjectParameter("InterpretationFrom", typeof(string));
    
            var interpretationToParameter = interpretationTo != null ?
                new ObjectParameter("InterpretationTo", interpretationTo) :
                new ObjectParameter("InterpretationTo", typeof(string));
    
            var interpretationUnitPriceTypeParameter = interpretationUnitPriceType != null ?
                new ObjectParameter("InterpretationUnitPriceType", interpretationUnitPriceType) :
                new ObjectParameter("InterpretationUnitPriceType", typeof(string));
    
            var interpretationUnitPriceValueParameter = interpretationUnitPriceValue != null ?
                new ObjectParameter("InterpretationUnitPriceValue", interpretationUnitPriceValue) :
                new ObjectParameter("InterpretationUnitPriceValue", typeof(string));
    
            var isSuccessiveInterpretationParameter = isSuccessiveInterpretation != null ?
                new ObjectParameter("IsSuccessiveInterpretation", isSuccessiveInterpretation) :
                new ObjectParameter("IsSuccessiveInterpretation", typeof(string));
    
            var isWhisperingInterpretationParameter = isWhisperingInterpretation != null ?
                new ObjectParameter("IsWhisperingInterpretation", isWhisperingInterpretation) :
                new ObjectParameter("IsWhisperingInterpretation", typeof(string));
    
            var isSimultaneousInterpretationParameter = isSimultaneousInterpretation != null ?
                new ObjectParameter("IsSimultaneousInterpretation", isSimultaneousInterpretation) :
                new ObjectParameter("IsSimultaneousInterpretation", typeof(string));
    
            var narrationFromParameter = narrationFrom != null ?
                new ObjectParameter("NarrationFrom", narrationFrom) :
                new ObjectParameter("NarrationFrom", typeof(string));
    
            var narrationToParameter = narrationTo != null ?
                new ObjectParameter("NarrationTo", narrationTo) :
                new ObjectParameter("NarrationTo", typeof(string));
    
            var isSpecialistNaratorParameter = isSpecialistNarator != null ?
                new ObjectParameter("IsSpecialistNarator", isSpecialistNarator) :
                new ObjectParameter("IsSpecialistNarator", typeof(string));
    
            var narrationPerformanceParameter = narrationPerformance != null ?
                new ObjectParameter("NarrationPerformance", narrationPerformance) :
                new ObjectParameter("NarrationPerformance", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetAdvancedStaffSearchData_OLD", currentUserIDParameter, applicationIDParameter, cultureParameter, registrationIDParameter, myIdentityNoParameter, staffEmailIDParameter, nameParameter, telephoneParameter, mobileParameter, faxParameter, textSearchParameter, achievementSearchParameter, sourceOfRegistrationIDParameter, foriegnLanguage1IDParameter, foreignLang1LevelParameter, foriegnLanguage2IDParameter, foreignLang2LevelParameter, foriegnLanguage3IDParameter, foreignLang3LevelParameter, foriegnLanguage4IDParameter, foreignLang4LevelParameter, sexParameter, ageFromParameter, ageToParameter, nationalityIDParameter, visaCountryIDParameter, visaTypeIDParameter, visaExpireParameter, rdoResidenceTypeParameter, residenceNationalityIDParameter, isIntroVideoParameter, chkActive30DaysParameter, isSNSParameter, sNSAccountParameter, isDtpExperienceParameter, dtpExpParameter, technicalSkillParentParameter, technicalSkillChildParameter, developmentSkillParentParameter, developmentSkillChildParameter, knowledgeSkillParentParameter, knowledgeSkillChildParameter, medicalSkillParentParameter, medicalSkillChildParameter, translationFromParameter, translationToParameter, translationUnitPriceParameter, interpretationFromParameter, interpretationToParameter, interpretationUnitPriceTypeParameter, interpretationUnitPriceValueParameter, isSuccessiveInterpretationParameter, isWhisperingInterpretationParameter, isSimultaneousInterpretationParameter, narrationFromParameter, narrationToParameter, isSpecialistNaratorParameter, narrationPerformanceParameter);
        }
    
        public virtual int SP_GetAdvancedStaffSearchInit(string cultureId, string userID, string applicationID, string type)
        {
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var applicationIDParameter = applicationID != null ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetAdvancedStaffSearchInit", cultureIdParameter, userIDParameter, applicationIDParameter, typeParameter);
        }
    
        public virtual int SP_GetAllAgentBusiness(string cultureId)
        {
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetAllAgentBusiness", cultureIdParameter);
        }
    
        public virtual int SP_GetAllAgentCharacterstics(string cultureId)
        {
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetAllAgentCharacterstics", cultureIdParameter);
        }
    
        public virtual int SP_GetAllAgentFreeDesignation(string cultureId)
        {
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetAllAgentFreeDesignation", cultureIdParameter);
        }
    
        public virtual int SP_GetAllCompany(string cultureId)
        {
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetAllCompany", cultureIdParameter);
        }
    
        public virtual int SP_GetAllCompanyBusinessService(string cultureId)
        {
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetAllCompanyBusinessService", cultureIdParameter);
        }
    
        public virtual int SP_GetAllCompanyBusinessSpeciality(string cultureId)
        {
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetAllCompanyBusinessSpeciality", cultureIdParameter);
        }
    
        public virtual int SP_GetAllEmployee(Nullable<System.Guid> iD, string cultureId, Nullable<System.Guid> employeeId, Nullable<long> employeeTypeID, Nullable<System.Guid> departmentID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(System.Guid));
    
            var employeeTypeIDParameter = employeeTypeID.HasValue ?
                new ObjectParameter("EmployeeTypeID", employeeTypeID) :
                new ObjectParameter("EmployeeTypeID", typeof(long));
    
            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetAllEmployee", iDParameter, cultureIdParameter, employeeIdParameter, employeeTypeIDParameter, departmentIDParameter);
        }
    
        public virtual int SP_GetAllEstimation(string cultureId, Nullable<int> estimationType, string estimationNo, Nullable<System.Guid> clientID)
        {
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            var estimationTypeParameter = estimationType.HasValue ?
                new ObjectParameter("EstimationType", estimationType) :
                new ObjectParameter("EstimationType", typeof(int));
    
            var estimationNoParameter = estimationNo != null ?
                new ObjectParameter("EstimationNo", estimationNo) :
                new ObjectParameter("EstimationNo", typeof(string));
    
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetAllEstimation", cultureIdParameter, estimationTypeParameter, estimationNoParameter, clientIDParameter);
        }
    
        public virtual int SP_GetAllEstimationActions(Nullable<System.Guid> estimationID, string cultureId)
        {
            var estimationIDParameter = estimationID.HasValue ?
                new ObjectParameter("EstimationID", estimationID) :
                new ObjectParameter("EstimationID", typeof(System.Guid));
    
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetAllEstimationActions", estimationIDParameter, cultureIdParameter);
        }
    
        public virtual ObjectResult<SP_GetAllEstimationActionType_Result> SP_GetAllEstimationActionType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAllEstimationActionType_Result>("SP_GetAllEstimationActionType");
        }
    
        public virtual int SP_GetAllEstimationDetails(Nullable<System.Guid> estimationID, string cultureId)
        {
            var estimationIDParameter = estimationID.HasValue ?
                new ObjectParameter("EstimationID", estimationID) :
                new ObjectParameter("EstimationID", typeof(System.Guid));
    
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetAllEstimationDetails", estimationIDParameter, cultureIdParameter);
        }
    
        public virtual int SP_GetAllEstimationDetails_2017_09_23(Nullable<System.Guid> estimationID, string cultureId)
        {
            var estimationIDParameter = estimationID.HasValue ?
                new ObjectParameter("EstimationID", estimationID) :
                new ObjectParameter("EstimationID", typeof(System.Guid));
    
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetAllEstimationDetails_2017_09_23", estimationIDParameter, cultureIdParameter);
        }
    
        public virtual ObjectResult<SP_GetAllEstimationFiles_Result> SP_GetAllEstimationFiles(Nullable<System.Guid> estimateID, Nullable<System.Guid> estimateDetailsID)
        {
            var estimateIDParameter = estimateID.HasValue ?
                new ObjectParameter("EstimateID", estimateID) :
                new ObjectParameter("EstimateID", typeof(System.Guid));
    
            var estimateDetailsIDParameter = estimateDetailsID.HasValue ?
                new ObjectParameter("EstimateDetailsID", estimateDetailsID) :
                new ObjectParameter("EstimateDetailsID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAllEstimationFiles_Result>("SP_GetAllEstimationFiles", estimateIDParameter, estimateDetailsIDParameter);
        }
    
        public virtual int SP_GetAllOrders_Web(string cultureId, Nullable<long> applicationId, Nullable<int> translationType, Nullable<long> orderId, string orderNo, Nullable<System.Guid> sourceLangID, Nullable<System.Guid> targetLangID, Nullable<System.Guid> specialFieldID, Nullable<System.Guid> clientID, Nullable<System.Guid> translatorID, Nullable<int> orderStatus, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(long));
    
            var translationTypeParameter = translationType.HasValue ?
                new ObjectParameter("TranslationType", translationType) :
                new ObjectParameter("TranslationType", typeof(int));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(long));
    
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(string));
    
            var sourceLangIDParameter = sourceLangID.HasValue ?
                new ObjectParameter("SourceLangID", sourceLangID) :
                new ObjectParameter("SourceLangID", typeof(System.Guid));
    
            var targetLangIDParameter = targetLangID.HasValue ?
                new ObjectParameter("TargetLangID", targetLangID) :
                new ObjectParameter("TargetLangID", typeof(System.Guid));
    
            var specialFieldIDParameter = specialFieldID.HasValue ?
                new ObjectParameter("SpecialFieldID", specialFieldID) :
                new ObjectParameter("SpecialFieldID", typeof(System.Guid));
    
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(System.Guid));
    
            var translatorIDParameter = translatorID.HasValue ?
                new ObjectParameter("TranslatorID", translatorID) :
                new ObjectParameter("TranslatorID", typeof(System.Guid));
    
            var orderStatusParameter = orderStatus.HasValue ?
                new ObjectParameter("OrderStatus", orderStatus) :
                new ObjectParameter("OrderStatus", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetAllOrders_Web", cultureIdParameter, applicationIdParameter, translationTypeParameter, orderIdParameter, orderNoParameter, sourceLangIDParameter, targetLangIDParameter, specialFieldIDParameter, clientIDParameter, translatorIDParameter, orderStatusParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_GetAllOrderStaffAllowance_Result> SP_GetAllOrderStaffAllowance(Nullable<System.Guid> estimationID)
        {
            var estimationIDParameter = estimationID.HasValue ?
                new ObjectParameter("EstimationID", estimationID) :
                new ObjectParameter("EstimationID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAllOrderStaffAllowance_Result>("SP_GetAllOrderStaffAllowance", estimationIDParameter);
        }
    
        public virtual int SP_GetAllStaffJobCategory(string cultureId)
        {
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetAllStaffJobCategory", cultureIdParameter);
        }
    
        public virtual ObjectResult<SP_GetAllTranslationCertificateSettings_Result> SP_GetAllTranslationCertificateSettings()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAllTranslationCertificateSettings_Result>("SP_GetAllTranslationCertificateSettings");
        }
    
        public virtual int SP_GetAllTranslators_By_Search(string cultureId, Nullable<System.Guid> sourceLangID, Nullable<System.Guid> targetLangID, Nullable<System.Guid> specialFieldID)
        {
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            var sourceLangIDParameter = sourceLangID.HasValue ?
                new ObjectParameter("SourceLangID", sourceLangID) :
                new ObjectParameter("SourceLangID", typeof(System.Guid));
    
            var targetLangIDParameter = targetLangID.HasValue ?
                new ObjectParameter("TargetLangID", targetLangID) :
                new ObjectParameter("TargetLangID", typeof(System.Guid));
    
            var specialFieldIDParameter = specialFieldID.HasValue ?
                new ObjectParameter("SpecialFieldID", specialFieldID) :
                new ObjectParameter("SpecialFieldID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetAllTranslators_By_Search", cultureIdParameter, sourceLangIDParameter, targetLangIDParameter, specialFieldIDParameter);
        }
    
        public virtual int SP_GetAppointedOrders_Web(string cultureId, Nullable<long> applicationId, Nullable<System.Guid> translatorID)
        {
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(long));
    
            var translatorIDParameter = translatorID.HasValue ?
                new ObjectParameter("TranslatorID", translatorID) :
                new ObjectParameter("TranslatorID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetAppointedOrders_Web", cultureIdParameter, applicationIdParameter, translatorIDParameter);
        }
    
        public virtual int SP_GetApprovalEstimation(string cultureId, Nullable<int> estimationType, string estimationNo, Nullable<System.Guid> clientID)
        {
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            var estimationTypeParameter = estimationType.HasValue ?
                new ObjectParameter("EstimationType", estimationType) :
                new ObjectParameter("EstimationType", typeof(int));
    
            var estimationNoParameter = estimationNo != null ?
                new ObjectParameter("EstimationNo", estimationNo) :
                new ObjectParameter("EstimationNo", typeof(string));
    
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetApprovalEstimation", cultureIdParameter, estimationTypeParameter, estimationNoParameter, clientIDParameter);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> SP_GetHomeSearchData(string culture, string searchType, string value)
        {
            var cultureParameter = culture != null ?
                new ObjectParameter("Culture", culture) :
                new ObjectParameter("Culture", typeof(string));
    
            var searchTypeParameter = searchType != null ?
                new ObjectParameter("SearchType", searchType) :
                new ObjectParameter("SearchType", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("SP_GetHomeSearchData", cultureParameter, searchTypeParameter, valueParameter);
        }
    
        public virtual int SP_GetHomeSearchData_Order(string cultureId, string searchValue, Nullable<int> estimationType, string estimationNo)
        {
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            var estimationTypeParameter = estimationType.HasValue ?
                new ObjectParameter("EstimationType", estimationType) :
                new ObjectParameter("EstimationType", typeof(int));
    
            var estimationNoParameter = estimationNo != null ?
                new ObjectParameter("EstimationNo", estimationNo) :
                new ObjectParameter("EstimationNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetHomeSearchData_Order", cultureIdParameter, searchValueParameter, estimationTypeParameter, estimationNoParameter);
        }
    
        public virtual ObjectResult<SP_GetOrderWebDocuments_Result> SP_GetOrderWebDocuments(Nullable<System.Guid> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetOrderWebDocuments_Result>("SP_GetOrderWebDocuments", orderIDParameter);
        }
    
        public virtual int SP_GetPaypalPaymentID(string gUID, ObjectParameter pAYMENTID)
        {
            var gUIDParameter = gUID != null ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetPaypalPaymentID", gUIDParameter, pAYMENTID);
        }
    
        public virtual int SP_GetProfessionalSpeciality(string cultureId, Nullable<System.Guid> staffID)
        {
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetProfessionalSpeciality", cultureIdParameter, staffIDParameter);
        }
    
        public virtual int SP_GetSearchAllEmployee(Nullable<System.Guid> iD, string cultureId, Nullable<System.Guid> employeeId, Nullable<long> employeeTypeID, Nullable<System.Guid> departmentID, string eid, string ename, string branch)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(System.Guid));
    
            var employeeTypeIDParameter = employeeTypeID.HasValue ?
                new ObjectParameter("EmployeeTypeID", employeeTypeID) :
                new ObjectParameter("EmployeeTypeID", typeof(long));
    
            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(System.Guid));
    
            var eidParameter = eid != null ?
                new ObjectParameter("eid", eid) :
                new ObjectParameter("eid", typeof(string));
    
            var enameParameter = ename != null ?
                new ObjectParameter("ename", ename) :
                new ObjectParameter("ename", typeof(string));
    
            var branchParameter = branch != null ?
                new ObjectParameter("branch", branch) :
                new ObjectParameter("branch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetSearchAllEmployee", iDParameter, cultureIdParameter, employeeIdParameter, employeeTypeIDParameter, departmentIDParameter, eidParameter, enameParameter, branchParameter);
        }
    
        public virtual int SP_GetSoftwareSkills(string cultureId, Nullable<System.Guid> staffID)
        {
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetSoftwareSkills", cultureIdParameter, staffIDParameter);
        }
    
        public virtual int SP_GetSpecificEstimation(string cultureId, Nullable<int> estimationType, string estimationNo, Nullable<System.Guid> clientID, Nullable<System.Guid> iD)
        {
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            var estimationTypeParameter = estimationType.HasValue ?
                new ObjectParameter("EstimationType", estimationType) :
                new ObjectParameter("EstimationType", typeof(int));
    
            var estimationNoParameter = estimationNo != null ?
                new ObjectParameter("EstimationNo", estimationNo) :
                new ObjectParameter("EstimationNo", typeof(string));
    
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(System.Guid));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetSpecificEstimation", cultureIdParameter, estimationTypeParameter, estimationNoParameter, clientIDParameter, iDParameter);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> SP_GetStaffID(string staffID)
        {
            var staffIDParameter = staffID != null ?
                new ObjectParameter("staffID", staffID) :
                new ObjectParameter("staffID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("SP_GetStaffID", staffIDParameter);
        }
    
        public virtual ObjectResult<SP_GetStaffList_Result> SP_GetStaffList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetStaffList_Result>("SP_GetStaffList");
        }
    
        public virtual int SP_GetStaffPayment(string sTAFFNO, string cultureId)
        {
            var sTAFFNOParameter = sTAFFNO != null ?
                new ObjectParameter("STAFFNO", sTAFFNO) :
                new ObjectParameter("STAFFNO", typeof(string));
    
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetStaffPayment", sTAFFNOParameter, cultureIdParameter);
        }
    
        public virtual int SP_GetTranslatorByEmail(string cultureId, string email, string password)
        {
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetTranslatorByEmail", cultureIdParameter, emailParameter, passwordParameter);
        }
    
        public virtual int SP_GetTranslatorDetailsByID(string cultureId, Nullable<System.Guid> iD, Nullable<long> registrationID)
        {
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var registrationIDParameter = registrationID.HasValue ?
                new ObjectParameter("RegistrationID", registrationID) :
                new ObjectParameter("RegistrationID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetTranslatorDetailsByID", cultureIdParameter, iDParameter, registrationIDParameter);
        }
    
        public virtual int SP_GetTransproLanguagePriceCategory(Nullable<System.Guid> sourceLanguageID, Nullable<System.Guid> targetLanguageID, Nullable<System.Guid> specialityFieldID, Nullable<System.Guid> subSpecialityFieldID, string sourceLanguageName, string cultureId)
        {
            var sourceLanguageIDParameter = sourceLanguageID.HasValue ?
                new ObjectParameter("SourceLanguageID", sourceLanguageID) :
                new ObjectParameter("SourceLanguageID", typeof(System.Guid));
    
            var targetLanguageIDParameter = targetLanguageID.HasValue ?
                new ObjectParameter("TargetLanguageID", targetLanguageID) :
                new ObjectParameter("TargetLanguageID", typeof(System.Guid));
    
            var specialityFieldIDParameter = specialityFieldID.HasValue ?
                new ObjectParameter("SpecialityFieldID", specialityFieldID) :
                new ObjectParameter("SpecialityFieldID", typeof(System.Guid));
    
            var subSpecialityFieldIDParameter = subSpecialityFieldID.HasValue ?
                new ObjectParameter("SubSpecialityFieldID", subSpecialityFieldID) :
                new ObjectParameter("SubSpecialityFieldID", typeof(System.Guid));
    
            var sourceLanguageNameParameter = sourceLanguageName != null ?
                new ObjectParameter("SourceLanguageName", sourceLanguageName) :
                new ObjectParameter("SourceLanguageName", typeof(string));
    
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetTransproLanguagePriceCategory", sourceLanguageIDParameter, targetLanguageIDParameter, specialityFieldIDParameter, subSpecialityFieldIDParameter, sourceLanguageNameParameter, cultureIdParameter);
        }
    
        public virtual int SP_GetTransproLanguagePriceDetails(Nullable<System.Guid> priceCategoryID, string cultureId)
        {
            var priceCategoryIDParameter = priceCategoryID.HasValue ?
                new ObjectParameter("PriceCategoryID", priceCategoryID) :
                new ObjectParameter("PriceCategoryID", typeof(System.Guid));
    
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetTransproLanguagePriceDetails", priceCategoryIDParameter, cultureIdParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_OrderDetails(Nullable<System.Guid> iD, Nullable<System.Guid> orderID, Nullable<System.Guid> estimationDetailsID, Nullable<System.Guid> staffID, Nullable<int> workingStatus, Nullable<System.DateTime> deliveryDate, Nullable<decimal> evaluationAmount, Nullable<decimal> paymentAmount, Nullable<decimal> agencyCommission, string complainDetails, Nullable<System.DateTime> remitanceDate, Nullable<decimal> depositAmount)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(System.Guid));
    
            var estimationDetailsIDParameter = estimationDetailsID.HasValue ?
                new ObjectParameter("EstimationDetailsID", estimationDetailsID) :
                new ObjectParameter("EstimationDetailsID", typeof(System.Guid));
    
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(System.Guid));
    
            var workingStatusParameter = workingStatus.HasValue ?
                new ObjectParameter("WorkingStatus", workingStatus) :
                new ObjectParameter("WorkingStatus", typeof(int));
    
            var deliveryDateParameter = deliveryDate.HasValue ?
                new ObjectParameter("DeliveryDate", deliveryDate) :
                new ObjectParameter("DeliveryDate", typeof(System.DateTime));
    
            var evaluationAmountParameter = evaluationAmount.HasValue ?
                new ObjectParameter("EvaluationAmount", evaluationAmount) :
                new ObjectParameter("EvaluationAmount", typeof(decimal));
    
            var paymentAmountParameter = paymentAmount.HasValue ?
                new ObjectParameter("PaymentAmount", paymentAmount) :
                new ObjectParameter("PaymentAmount", typeof(decimal));
    
            var agencyCommissionParameter = agencyCommission.HasValue ?
                new ObjectParameter("AgencyCommission", agencyCommission) :
                new ObjectParameter("AgencyCommission", typeof(decimal));
    
            var complainDetailsParameter = complainDetails != null ?
                new ObjectParameter("ComplainDetails", complainDetails) :
                new ObjectParameter("ComplainDetails", typeof(string));
    
            var remitanceDateParameter = remitanceDate.HasValue ?
                new ObjectParameter("RemitanceDate", remitanceDate) :
                new ObjectParameter("RemitanceDate", typeof(System.DateTime));
    
            var depositAmountParameter = depositAmount.HasValue ?
                new ObjectParameter("DepositAmount", depositAmount) :
                new ObjectParameter("DepositAmount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OrderDetails", iDParameter, orderIDParameter, estimationDetailsIDParameter, staffIDParameter, workingStatusParameter, deliveryDateParameter, evaluationAmountParameter, paymentAmountParameter, agencyCommissionParameter, complainDetailsParameter, remitanceDateParameter, depositAmountParameter);
        }
    
        public virtual int SP_OrderOperation_Translator(Nullable<System.Guid> iD, Nullable<int> statusId, Nullable<System.Guid> translatorId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<System.DateTime> deliveryDate, string type)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var translatorIdParameter = translatorId.HasValue ?
                new ObjectParameter("TranslatorId", translatorId) :
                new ObjectParameter("TranslatorId", typeof(System.Guid));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var deliveryDateParameter = deliveryDate.HasValue ?
                new ObjectParameter("DeliveryDate", deliveryDate) :
                new ObjectParameter("DeliveryDate", typeof(System.DateTime));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OrderOperation_Translator", iDParameter, statusIdParameter, translatorIdParameter, startDateParameter, endDateParameter, deliveryDateParameter, typeParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int SP_RetrieveNextIdentity(string tABLENAME)
        {
            var tABLENAMEParameter = tABLENAME != null ?
                new ObjectParameter("TABLENAME", tABLENAME) :
                new ObjectParameter("TABLENAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RetrieveNextIdentity", tABLENAMEParameter);
        }
    
        public virtual int SP_RetrieveNextSequenceFor(string tABLENAME)
        {
            var tABLENAMEParameter = tABLENAME != null ?
                new ObjectParameter("TABLENAME", tABLENAME) :
                new ObjectParameter("TABLENAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RetrieveNextSequenceFor", tABLENAMEParameter);
        }
    
        public virtual int SP_SaveAgentBusiness(Nullable<System.Guid> iD, string code, string name_en, string name_jp, string name_kr, string name_cn, string name_fr, string name_tl, Nullable<bool> isActive, Nullable<int> createdBy, string cultureId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var name_enParameter = name_en != null ?
                new ObjectParameter("Name_en", name_en) :
                new ObjectParameter("Name_en", typeof(string));
    
            var name_jpParameter = name_jp != null ?
                new ObjectParameter("Name_jp", name_jp) :
                new ObjectParameter("Name_jp", typeof(string));
    
            var name_krParameter = name_kr != null ?
                new ObjectParameter("Name_kr", name_kr) :
                new ObjectParameter("Name_kr", typeof(string));
    
            var name_cnParameter = name_cn != null ?
                new ObjectParameter("Name_cn", name_cn) :
                new ObjectParameter("Name_cn", typeof(string));
    
            var name_frParameter = name_fr != null ?
                new ObjectParameter("Name_fr", name_fr) :
                new ObjectParameter("Name_fr", typeof(string));
    
            var name_tlParameter = name_tl != null ?
                new ObjectParameter("Name_tl", name_tl) :
                new ObjectParameter("Name_tl", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SaveAgentBusiness", iDParameter, codeParameter, name_enParameter, name_jpParameter, name_krParameter, name_cnParameter, name_frParameter, name_tlParameter, isActiveParameter, createdByParameter, cultureIdParameter);
        }
    
        public virtual int SP_SaveAgentCharacterstics(Nullable<System.Guid> iD, string code, string name_en, string name_jp, string name_kr, string name_cn, string name_fr, string name_tl, Nullable<bool> isActive, Nullable<int> createdBy, string cultureId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var name_enParameter = name_en != null ?
                new ObjectParameter("Name_en", name_en) :
                new ObjectParameter("Name_en", typeof(string));
    
            var name_jpParameter = name_jp != null ?
                new ObjectParameter("Name_jp", name_jp) :
                new ObjectParameter("Name_jp", typeof(string));
    
            var name_krParameter = name_kr != null ?
                new ObjectParameter("Name_kr", name_kr) :
                new ObjectParameter("Name_kr", typeof(string));
    
            var name_cnParameter = name_cn != null ?
                new ObjectParameter("Name_cn", name_cn) :
                new ObjectParameter("Name_cn", typeof(string));
    
            var name_frParameter = name_fr != null ?
                new ObjectParameter("Name_fr", name_fr) :
                new ObjectParameter("Name_fr", typeof(string));
    
            var name_tlParameter = name_tl != null ?
                new ObjectParameter("Name_tl", name_tl) :
                new ObjectParameter("Name_tl", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SaveAgentCharacterstics", iDParameter, codeParameter, name_enParameter, name_jpParameter, name_krParameter, name_cnParameter, name_frParameter, name_tlParameter, isActiveParameter, createdByParameter, cultureIdParameter);
        }
    
        public virtual int SP_SaveAgentFreeDesignation(Nullable<System.Guid> iD, string code, string name_en, string name_jp, string name_kr, string name_cn, string name_fr, string name_tl, Nullable<bool> isActive, Nullable<int> createdBy, string cultureId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var name_enParameter = name_en != null ?
                new ObjectParameter("Name_en", name_en) :
                new ObjectParameter("Name_en", typeof(string));
    
            var name_jpParameter = name_jp != null ?
                new ObjectParameter("Name_jp", name_jp) :
                new ObjectParameter("Name_jp", typeof(string));
    
            var name_krParameter = name_kr != null ?
                new ObjectParameter("Name_kr", name_kr) :
                new ObjectParameter("Name_kr", typeof(string));
    
            var name_cnParameter = name_cn != null ?
                new ObjectParameter("Name_cn", name_cn) :
                new ObjectParameter("Name_cn", typeof(string));
    
            var name_frParameter = name_fr != null ?
                new ObjectParameter("Name_fr", name_fr) :
                new ObjectParameter("Name_fr", typeof(string));
    
            var name_tlParameter = name_tl != null ?
                new ObjectParameter("Name_tl", name_tl) :
                new ObjectParameter("Name_tl", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SaveAgentFreeDesignation", iDParameter, codeParameter, name_enParameter, name_jpParameter, name_krParameter, name_cnParameter, name_frParameter, name_tlParameter, isActiveParameter, createdByParameter, cultureIdParameter);
        }
    
        public virtual int SP_SaveCompanyBusinessService(Nullable<System.Guid> iD, string code, string name_en, string name_jp, string name_kr, string name_cn, string name_fr, string name_tl, Nullable<bool> isActive, Nullable<int> createdBy, string cultureId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var name_enParameter = name_en != null ?
                new ObjectParameter("Name_en", name_en) :
                new ObjectParameter("Name_en", typeof(string));
    
            var name_jpParameter = name_jp != null ?
                new ObjectParameter("Name_jp", name_jp) :
                new ObjectParameter("Name_jp", typeof(string));
    
            var name_krParameter = name_kr != null ?
                new ObjectParameter("Name_kr", name_kr) :
                new ObjectParameter("Name_kr", typeof(string));
    
            var name_cnParameter = name_cn != null ?
                new ObjectParameter("Name_cn", name_cn) :
                new ObjectParameter("Name_cn", typeof(string));
    
            var name_frParameter = name_fr != null ?
                new ObjectParameter("Name_fr", name_fr) :
                new ObjectParameter("Name_fr", typeof(string));
    
            var name_tlParameter = name_tl != null ?
                new ObjectParameter("Name_tl", name_tl) :
                new ObjectParameter("Name_tl", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SaveCompanyBusinessService", iDParameter, codeParameter, name_enParameter, name_jpParameter, name_krParameter, name_cnParameter, name_frParameter, name_tlParameter, isActiveParameter, createdByParameter, cultureIdParameter);
        }
    
        public virtual int SP_SaveCompanyBusinessSpeciality(Nullable<System.Guid> iD, string code, string name_en, string name_jp, string name_kr, string name_cn, string name_fr, string name_tl, Nullable<bool> isActive, Nullable<int> createdBy, string cultureId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var name_enParameter = name_en != null ?
                new ObjectParameter("Name_en", name_en) :
                new ObjectParameter("Name_en", typeof(string));
    
            var name_jpParameter = name_jp != null ?
                new ObjectParameter("Name_jp", name_jp) :
                new ObjectParameter("Name_jp", typeof(string));
    
            var name_krParameter = name_kr != null ?
                new ObjectParameter("Name_kr", name_kr) :
                new ObjectParameter("Name_kr", typeof(string));
    
            var name_cnParameter = name_cn != null ?
                new ObjectParameter("Name_cn", name_cn) :
                new ObjectParameter("Name_cn", typeof(string));
    
            var name_frParameter = name_fr != null ?
                new ObjectParameter("Name_fr", name_fr) :
                new ObjectParameter("Name_fr", typeof(string));
    
            var name_tlParameter = name_tl != null ?
                new ObjectParameter("Name_tl", name_tl) :
                new ObjectParameter("Name_tl", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SaveCompanyBusinessSpeciality", iDParameter, codeParameter, name_enParameter, name_jpParameter, name_krParameter, name_cnParameter, name_frParameter, name_tlParameter, isActiveParameter, createdByParameter, cultureIdParameter);
        }
    
        public virtual int SP_SaveDeleteCompany(Nullable<System.Guid> iD, Nullable<long> registrationID, Nullable<System.Guid> divisionID, Nullable<System.Guid> corporateDivisionID, Nullable<long> originCountryID, Nullable<long> applicationID, Nullable<bool> isCompanyAgent, string companyNo, string name_en, string name_jp, string name_kr, string name_cn, string name_fr, string name_tl, string corporateNo, string webSiteURL, string email, string email_CC, string password, string representativeDirector_en, string representativeDirector_jp, string representativeDirector_kr, string representativeDirector_cn, string representativeDirector_fr, string representativeDirector_tl, string phone, string fax, string postalCode, string address_en, string address_jp, string address_kr, string address_cn, string address_fr, string address_tl, Nullable<long> captital, Nullable<System.DateTime> establishmentDate, Nullable<System.Guid> businessClassificationID, Nullable<bool> isActive, string mainPhoto, string logo, Nullable<bool> isBillingMonthly, string employeeName_en, string employeeName_jp, string employeeName_kr, string employeeName_cn, string employeeName_fr, string employeeName_tl, string branchName_en, string branchName_jp, string branchName_kr, string branchName_cn, string branchName_fr, string branchName_tl, string tradingNote, string tradingRecord, Nullable<System.Guid> bankID, Nullable<System.Guid> bankBranchID, Nullable<long> bankAccountTypeID, string privateCompanyName, string personInCharge_en, string personInCharge_jp, string personInCharge_kr, string personInCharge_cn, string personInCharge_fr, string personInCharge_tl, string inchargeMobileNo, Nullable<bool> isJapneseOffice, Nullable<System.Guid> homeOfficeAddressID, Nullable<long> foreignCountryID, Nullable<bool> isAddressPrivate, string privateName, string provinceOfOverseas_en, string provinceOfOverseas_jp, string provinceOfOverseas_kr, string provinceOfOverseas_cn, string provinceOfOverseas_fr, string provinceOfOverseas_tl, Nullable<System.DateTime> closingDate, string buildingName_en, string buildingName_jp, string buildingName_kr, string buildingName_cn, string buildingName_fr, string buildingName_tl, string billingCompanyName_en, string billingCompanyName_jp, string billingCompanyName_kr, string billingCompanyName_cn, string billingCompanyName_fr, string billingCompanyName_tl, Nullable<bool> isPostBill, Nullable<System.Guid> biilingDivisionID, string billingDivisionName_en, string billingDivisionName_jp, string billingDivisionName_kr, string billingDivisionName_fr, string billingDivisionName_tl, string billingPostalCode, string billingAddress_en, string billingAddress_jp, string billingAddress_kr, string billingAddress_cn, string billingAddress_fr, string billingAddress_tl, string billingPersonInCharge_en, string billingPersonInCharge_jp, string billingPersonInCharge_kr, string billingPersonInCharge_cn, string billingPersonInCharge_fr, string billingPersonInCharge_tl, string billingPostCode, Nullable<System.Guid> billingBankID, Nullable<System.Guid> billingBankBranchID, Nullable<long> billingBankAccountTypeID, string billingBankAccountNo, string billingBankAccountHolder_en, string billingBankAccountHolder_jp, string billingBankAccountHolder_kr, string billingBankAccountHolder_cn, string billingBankAccountHolder_fr, string billingBankAccountHolder_tl, Nullable<bool> isWebsitePrivate, string salesMan, Nullable<System.DateTime> dateOfPayment, string coordinate, Nullable<System.Guid> inHousePersonID, string salesScale, string industryClassification, string tradingDivision, Nullable<System.DateTime> salesVisitDate, Nullable<bool> isInteractWithCompany, Nullable<bool> isInteractByVisit, Nullable<bool> isInteractByPhone, Nullable<bool> hasThePersonInCharge, string interactWithCompanyDiscription, Nullable<System.DateTime> createdDate, Nullable<long> createdBy, Nullable<System.DateTime> updatedDate, Nullable<long> updatedBy, string cultureId, string statementType)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var registrationIDParameter = registrationID.HasValue ?
                new ObjectParameter("RegistrationID", registrationID) :
                new ObjectParameter("RegistrationID", typeof(long));
    
            var divisionIDParameter = divisionID.HasValue ?
                new ObjectParameter("DivisionID", divisionID) :
                new ObjectParameter("DivisionID", typeof(System.Guid));
    
            var corporateDivisionIDParameter = corporateDivisionID.HasValue ?
                new ObjectParameter("CorporateDivisionID", corporateDivisionID) :
                new ObjectParameter("CorporateDivisionID", typeof(System.Guid));
    
            var originCountryIDParameter = originCountryID.HasValue ?
                new ObjectParameter("OriginCountryID", originCountryID) :
                new ObjectParameter("OriginCountryID", typeof(long));
    
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(long));
    
            var isCompanyAgentParameter = isCompanyAgent.HasValue ?
                new ObjectParameter("IsCompanyAgent", isCompanyAgent) :
                new ObjectParameter("IsCompanyAgent", typeof(bool));
    
            var companyNoParameter = companyNo != null ?
                new ObjectParameter("CompanyNo", companyNo) :
                new ObjectParameter("CompanyNo", typeof(string));
    
            var name_enParameter = name_en != null ?
                new ObjectParameter("Name_en", name_en) :
                new ObjectParameter("Name_en", typeof(string));
    
            var name_jpParameter = name_jp != null ?
                new ObjectParameter("Name_jp", name_jp) :
                new ObjectParameter("Name_jp", typeof(string));
    
            var name_krParameter = name_kr != null ?
                new ObjectParameter("Name_kr", name_kr) :
                new ObjectParameter("Name_kr", typeof(string));
    
            var name_cnParameter = name_cn != null ?
                new ObjectParameter("Name_cn", name_cn) :
                new ObjectParameter("Name_cn", typeof(string));
    
            var name_frParameter = name_fr != null ?
                new ObjectParameter("Name_fr", name_fr) :
                new ObjectParameter("Name_fr", typeof(string));
    
            var name_tlParameter = name_tl != null ?
                new ObjectParameter("Name_tl", name_tl) :
                new ObjectParameter("Name_tl", typeof(string));
    
            var corporateNoParameter = corporateNo != null ?
                new ObjectParameter("CorporateNo", corporateNo) :
                new ObjectParameter("CorporateNo", typeof(string));
    
            var webSiteURLParameter = webSiteURL != null ?
                new ObjectParameter("WebSiteURL", webSiteURL) :
                new ObjectParameter("WebSiteURL", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var email_CCParameter = email_CC != null ?
                new ObjectParameter("Email_CC", email_CC) :
                new ObjectParameter("Email_CC", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var representativeDirector_enParameter = representativeDirector_en != null ?
                new ObjectParameter("RepresentativeDirector_en", representativeDirector_en) :
                new ObjectParameter("RepresentativeDirector_en", typeof(string));
    
            var representativeDirector_jpParameter = representativeDirector_jp != null ?
                new ObjectParameter("RepresentativeDirector_jp", representativeDirector_jp) :
                new ObjectParameter("RepresentativeDirector_jp", typeof(string));
    
            var representativeDirector_krParameter = representativeDirector_kr != null ?
                new ObjectParameter("RepresentativeDirector_kr", representativeDirector_kr) :
                new ObjectParameter("RepresentativeDirector_kr", typeof(string));
    
            var representativeDirector_cnParameter = representativeDirector_cn != null ?
                new ObjectParameter("RepresentativeDirector_cn", representativeDirector_cn) :
                new ObjectParameter("RepresentativeDirector_cn", typeof(string));
    
            var representativeDirector_frParameter = representativeDirector_fr != null ?
                new ObjectParameter("RepresentativeDirector_fr", representativeDirector_fr) :
                new ObjectParameter("RepresentativeDirector_fr", typeof(string));
    
            var representativeDirector_tlParameter = representativeDirector_tl != null ?
                new ObjectParameter("RepresentativeDirector_tl", representativeDirector_tl) :
                new ObjectParameter("RepresentativeDirector_tl", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var address_enParameter = address_en != null ?
                new ObjectParameter("Address_en", address_en) :
                new ObjectParameter("Address_en", typeof(string));
    
            var address_jpParameter = address_jp != null ?
                new ObjectParameter("Address_jp", address_jp) :
                new ObjectParameter("Address_jp", typeof(string));
    
            var address_krParameter = address_kr != null ?
                new ObjectParameter("Address_kr", address_kr) :
                new ObjectParameter("Address_kr", typeof(string));
    
            var address_cnParameter = address_cn != null ?
                new ObjectParameter("Address_cn", address_cn) :
                new ObjectParameter("Address_cn", typeof(string));
    
            var address_frParameter = address_fr != null ?
                new ObjectParameter("Address_fr", address_fr) :
                new ObjectParameter("Address_fr", typeof(string));
    
            var address_tlParameter = address_tl != null ?
                new ObjectParameter("Address_tl", address_tl) :
                new ObjectParameter("Address_tl", typeof(string));
    
            var captitalParameter = captital.HasValue ?
                new ObjectParameter("Captital", captital) :
                new ObjectParameter("Captital", typeof(long));
    
            var establishmentDateParameter = establishmentDate.HasValue ?
                new ObjectParameter("EstablishmentDate", establishmentDate) :
                new ObjectParameter("EstablishmentDate", typeof(System.DateTime));
    
            var businessClassificationIDParameter = businessClassificationID.HasValue ?
                new ObjectParameter("businessClassificationID", businessClassificationID) :
                new ObjectParameter("businessClassificationID", typeof(System.Guid));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var mainPhotoParameter = mainPhoto != null ?
                new ObjectParameter("MainPhoto", mainPhoto) :
                new ObjectParameter("MainPhoto", typeof(string));
    
            var logoParameter = logo != null ?
                new ObjectParameter("Logo", logo) :
                new ObjectParameter("Logo", typeof(string));
    
            var isBillingMonthlyParameter = isBillingMonthly.HasValue ?
                new ObjectParameter("IsBillingMonthly", isBillingMonthly) :
                new ObjectParameter("IsBillingMonthly", typeof(bool));
    
            var employeeName_enParameter = employeeName_en != null ?
                new ObjectParameter("EmployeeName_en", employeeName_en) :
                new ObjectParameter("EmployeeName_en", typeof(string));
    
            var employeeName_jpParameter = employeeName_jp != null ?
                new ObjectParameter("EmployeeName_jp", employeeName_jp) :
                new ObjectParameter("EmployeeName_jp", typeof(string));
    
            var employeeName_krParameter = employeeName_kr != null ?
                new ObjectParameter("EmployeeName_kr", employeeName_kr) :
                new ObjectParameter("EmployeeName_kr", typeof(string));
    
            var employeeName_cnParameter = employeeName_cn != null ?
                new ObjectParameter("EmployeeName_cn", employeeName_cn) :
                new ObjectParameter("EmployeeName_cn", typeof(string));
    
            var employeeName_frParameter = employeeName_fr != null ?
                new ObjectParameter("EmployeeName_fr", employeeName_fr) :
                new ObjectParameter("EmployeeName_fr", typeof(string));
    
            var employeeName_tlParameter = employeeName_tl != null ?
                new ObjectParameter("EmployeeName_tl", employeeName_tl) :
                new ObjectParameter("EmployeeName_tl", typeof(string));
    
            var branchName_enParameter = branchName_en != null ?
                new ObjectParameter("BranchName_en", branchName_en) :
                new ObjectParameter("BranchName_en", typeof(string));
    
            var branchName_jpParameter = branchName_jp != null ?
                new ObjectParameter("BranchName_jp", branchName_jp) :
                new ObjectParameter("BranchName_jp", typeof(string));
    
            var branchName_krParameter = branchName_kr != null ?
                new ObjectParameter("BranchName_kr", branchName_kr) :
                new ObjectParameter("BranchName_kr", typeof(string));
    
            var branchName_cnParameter = branchName_cn != null ?
                new ObjectParameter("BranchName_cn", branchName_cn) :
                new ObjectParameter("BranchName_cn", typeof(string));
    
            var branchName_frParameter = branchName_fr != null ?
                new ObjectParameter("BranchName_fr", branchName_fr) :
                new ObjectParameter("BranchName_fr", typeof(string));
    
            var branchName_tlParameter = branchName_tl != null ?
                new ObjectParameter("BranchName_tl", branchName_tl) :
                new ObjectParameter("BranchName_tl", typeof(string));
    
            var tradingNoteParameter = tradingNote != null ?
                new ObjectParameter("TradingNote", tradingNote) :
                new ObjectParameter("TradingNote", typeof(string));
    
            var tradingRecordParameter = tradingRecord != null ?
                new ObjectParameter("TradingRecord", tradingRecord) :
                new ObjectParameter("TradingRecord", typeof(string));
    
            var bankIDParameter = bankID.HasValue ?
                new ObjectParameter("BankID", bankID) :
                new ObjectParameter("BankID", typeof(System.Guid));
    
            var bankBranchIDParameter = bankBranchID.HasValue ?
                new ObjectParameter("BankBranchID", bankBranchID) :
                new ObjectParameter("BankBranchID", typeof(System.Guid));
    
            var bankAccountTypeIDParameter = bankAccountTypeID.HasValue ?
                new ObjectParameter("BankAccountTypeID", bankAccountTypeID) :
                new ObjectParameter("BankAccountTypeID", typeof(long));
    
            var privateCompanyNameParameter = privateCompanyName != null ?
                new ObjectParameter("PrivateCompanyName", privateCompanyName) :
                new ObjectParameter("PrivateCompanyName", typeof(string));
    
            var personInCharge_enParameter = personInCharge_en != null ?
                new ObjectParameter("PersonInCharge_en", personInCharge_en) :
                new ObjectParameter("PersonInCharge_en", typeof(string));
    
            var personInCharge_jpParameter = personInCharge_jp != null ?
                new ObjectParameter("PersonInCharge_jp", personInCharge_jp) :
                new ObjectParameter("PersonInCharge_jp", typeof(string));
    
            var personInCharge_krParameter = personInCharge_kr != null ?
                new ObjectParameter("PersonInCharge_kr", personInCharge_kr) :
                new ObjectParameter("PersonInCharge_kr", typeof(string));
    
            var personInCharge_cnParameter = personInCharge_cn != null ?
                new ObjectParameter("PersonInCharge_cn", personInCharge_cn) :
                new ObjectParameter("PersonInCharge_cn", typeof(string));
    
            var personInCharge_frParameter = personInCharge_fr != null ?
                new ObjectParameter("PersonInCharge_fr", personInCharge_fr) :
                new ObjectParameter("PersonInCharge_fr", typeof(string));
    
            var personInCharge_tlParameter = personInCharge_tl != null ?
                new ObjectParameter("PersonInCharge_tl", personInCharge_tl) :
                new ObjectParameter("PersonInCharge_tl", typeof(string));
    
            var inchargeMobileNoParameter = inchargeMobileNo != null ?
                new ObjectParameter("InchargeMobileNo", inchargeMobileNo) :
                new ObjectParameter("InchargeMobileNo", typeof(string));
    
            var isJapneseOfficeParameter = isJapneseOffice.HasValue ?
                new ObjectParameter("IsJapneseOffice", isJapneseOffice) :
                new ObjectParameter("IsJapneseOffice", typeof(bool));
    
            var homeOfficeAddressIDParameter = homeOfficeAddressID.HasValue ?
                new ObjectParameter("HomeOfficeAddressID", homeOfficeAddressID) :
                new ObjectParameter("HomeOfficeAddressID", typeof(System.Guid));
    
            var foreignCountryIDParameter = foreignCountryID.HasValue ?
                new ObjectParameter("ForeignCountryID", foreignCountryID) :
                new ObjectParameter("ForeignCountryID", typeof(long));
    
            var isAddressPrivateParameter = isAddressPrivate.HasValue ?
                new ObjectParameter("IsAddressPrivate", isAddressPrivate) :
                new ObjectParameter("IsAddressPrivate", typeof(bool));
    
            var privateNameParameter = privateName != null ?
                new ObjectParameter("PrivateName", privateName) :
                new ObjectParameter("PrivateName", typeof(string));
    
            var provinceOfOverseas_enParameter = provinceOfOverseas_en != null ?
                new ObjectParameter("ProvinceOfOverseas_en", provinceOfOverseas_en) :
                new ObjectParameter("ProvinceOfOverseas_en", typeof(string));
    
            var provinceOfOverseas_jpParameter = provinceOfOverseas_jp != null ?
                new ObjectParameter("ProvinceOfOverseas_jp", provinceOfOverseas_jp) :
                new ObjectParameter("ProvinceOfOverseas_jp", typeof(string));
    
            var provinceOfOverseas_krParameter = provinceOfOverseas_kr != null ?
                new ObjectParameter("ProvinceOfOverseas_kr", provinceOfOverseas_kr) :
                new ObjectParameter("ProvinceOfOverseas_kr", typeof(string));
    
            var provinceOfOverseas_cnParameter = provinceOfOverseas_cn != null ?
                new ObjectParameter("ProvinceOfOverseas_cn", provinceOfOverseas_cn) :
                new ObjectParameter("ProvinceOfOverseas_cn", typeof(string));
    
            var provinceOfOverseas_frParameter = provinceOfOverseas_fr != null ?
                new ObjectParameter("ProvinceOfOverseas_fr", provinceOfOverseas_fr) :
                new ObjectParameter("ProvinceOfOverseas_fr", typeof(string));
    
            var provinceOfOverseas_tlParameter = provinceOfOverseas_tl != null ?
                new ObjectParameter("ProvinceOfOverseas_tl", provinceOfOverseas_tl) :
                new ObjectParameter("ProvinceOfOverseas_tl", typeof(string));
    
            var closingDateParameter = closingDate.HasValue ?
                new ObjectParameter("ClosingDate", closingDate) :
                new ObjectParameter("ClosingDate", typeof(System.DateTime));
    
            var buildingName_enParameter = buildingName_en != null ?
                new ObjectParameter("BuildingName_en", buildingName_en) :
                new ObjectParameter("BuildingName_en", typeof(string));
    
            var buildingName_jpParameter = buildingName_jp != null ?
                new ObjectParameter("BuildingName_jp", buildingName_jp) :
                new ObjectParameter("BuildingName_jp", typeof(string));
    
            var buildingName_krParameter = buildingName_kr != null ?
                new ObjectParameter("BuildingName_kr", buildingName_kr) :
                new ObjectParameter("BuildingName_kr", typeof(string));
    
            var buildingName_cnParameter = buildingName_cn != null ?
                new ObjectParameter("BuildingName_cn", buildingName_cn) :
                new ObjectParameter("BuildingName_cn", typeof(string));
    
            var buildingName_frParameter = buildingName_fr != null ?
                new ObjectParameter("BuildingName_fr", buildingName_fr) :
                new ObjectParameter("BuildingName_fr", typeof(string));
    
            var buildingName_tlParameter = buildingName_tl != null ?
                new ObjectParameter("BuildingName_tl", buildingName_tl) :
                new ObjectParameter("BuildingName_tl", typeof(string));
    
            var billingCompanyName_enParameter = billingCompanyName_en != null ?
                new ObjectParameter("BillingCompanyName_en", billingCompanyName_en) :
                new ObjectParameter("BillingCompanyName_en", typeof(string));
    
            var billingCompanyName_jpParameter = billingCompanyName_jp != null ?
                new ObjectParameter("BillingCompanyName_jp", billingCompanyName_jp) :
                new ObjectParameter("BillingCompanyName_jp", typeof(string));
    
            var billingCompanyName_krParameter = billingCompanyName_kr != null ?
                new ObjectParameter("BillingCompanyName_kr", billingCompanyName_kr) :
                new ObjectParameter("BillingCompanyName_kr", typeof(string));
    
            var billingCompanyName_cnParameter = billingCompanyName_cn != null ?
                new ObjectParameter("BillingCompanyName_cn", billingCompanyName_cn) :
                new ObjectParameter("BillingCompanyName_cn", typeof(string));
    
            var billingCompanyName_frParameter = billingCompanyName_fr != null ?
                new ObjectParameter("BillingCompanyName_fr", billingCompanyName_fr) :
                new ObjectParameter("BillingCompanyName_fr", typeof(string));
    
            var billingCompanyName_tlParameter = billingCompanyName_tl != null ?
                new ObjectParameter("BillingCompanyName_tl", billingCompanyName_tl) :
                new ObjectParameter("BillingCompanyName_tl", typeof(string));
    
            var isPostBillParameter = isPostBill.HasValue ?
                new ObjectParameter("IsPostBill", isPostBill) :
                new ObjectParameter("IsPostBill", typeof(bool));
    
            var biilingDivisionIDParameter = biilingDivisionID.HasValue ?
                new ObjectParameter("BiilingDivisionID", biilingDivisionID) :
                new ObjectParameter("BiilingDivisionID", typeof(System.Guid));
    
            var billingDivisionName_enParameter = billingDivisionName_en != null ?
                new ObjectParameter("BillingDivisionName_en", billingDivisionName_en) :
                new ObjectParameter("BillingDivisionName_en", typeof(string));
    
            var billingDivisionName_jpParameter = billingDivisionName_jp != null ?
                new ObjectParameter("BillingDivisionName_jp", billingDivisionName_jp) :
                new ObjectParameter("BillingDivisionName_jp", typeof(string));
    
            var billingDivisionName_krParameter = billingDivisionName_kr != null ?
                new ObjectParameter("BillingDivisionName_kr", billingDivisionName_kr) :
                new ObjectParameter("BillingDivisionName_kr", typeof(string));
    
            var billingDivisionName_frParameter = billingDivisionName_fr != null ?
                new ObjectParameter("BillingDivisionName_fr", billingDivisionName_fr) :
                new ObjectParameter("BillingDivisionName_fr", typeof(string));
    
            var billingDivisionName_tlParameter = billingDivisionName_tl != null ?
                new ObjectParameter("BillingDivisionName_tl", billingDivisionName_tl) :
                new ObjectParameter("BillingDivisionName_tl", typeof(string));
    
            var billingPostalCodeParameter = billingPostalCode != null ?
                new ObjectParameter("BillingPostalCode", billingPostalCode) :
                new ObjectParameter("BillingPostalCode", typeof(string));
    
            var billingAddress_enParameter = billingAddress_en != null ?
                new ObjectParameter("BillingAddress_en", billingAddress_en) :
                new ObjectParameter("BillingAddress_en", typeof(string));
    
            var billingAddress_jpParameter = billingAddress_jp != null ?
                new ObjectParameter("BillingAddress_jp", billingAddress_jp) :
                new ObjectParameter("BillingAddress_jp", typeof(string));
    
            var billingAddress_krParameter = billingAddress_kr != null ?
                new ObjectParameter("BillingAddress_kr", billingAddress_kr) :
                new ObjectParameter("BillingAddress_kr", typeof(string));
    
            var billingAddress_cnParameter = billingAddress_cn != null ?
                new ObjectParameter("BillingAddress_cn", billingAddress_cn) :
                new ObjectParameter("BillingAddress_cn", typeof(string));
    
            var billingAddress_frParameter = billingAddress_fr != null ?
                new ObjectParameter("BillingAddress_fr", billingAddress_fr) :
                new ObjectParameter("BillingAddress_fr", typeof(string));
    
            var billingAddress_tlParameter = billingAddress_tl != null ?
                new ObjectParameter("BillingAddress_tl", billingAddress_tl) :
                new ObjectParameter("BillingAddress_tl", typeof(string));
    
            var billingPersonInCharge_enParameter = billingPersonInCharge_en != null ?
                new ObjectParameter("BillingPersonInCharge_en", billingPersonInCharge_en) :
                new ObjectParameter("BillingPersonInCharge_en", typeof(string));
    
            var billingPersonInCharge_jpParameter = billingPersonInCharge_jp != null ?
                new ObjectParameter("BillingPersonInCharge_jp", billingPersonInCharge_jp) :
                new ObjectParameter("BillingPersonInCharge_jp", typeof(string));
    
            var billingPersonInCharge_krParameter = billingPersonInCharge_kr != null ?
                new ObjectParameter("BillingPersonInCharge_kr", billingPersonInCharge_kr) :
                new ObjectParameter("BillingPersonInCharge_kr", typeof(string));
    
            var billingPersonInCharge_cnParameter = billingPersonInCharge_cn != null ?
                new ObjectParameter("BillingPersonInCharge_cn", billingPersonInCharge_cn) :
                new ObjectParameter("BillingPersonInCharge_cn", typeof(string));
    
            var billingPersonInCharge_frParameter = billingPersonInCharge_fr != null ?
                new ObjectParameter("BillingPersonInCharge_fr", billingPersonInCharge_fr) :
                new ObjectParameter("BillingPersonInCharge_fr", typeof(string));
    
            var billingPersonInCharge_tlParameter = billingPersonInCharge_tl != null ?
                new ObjectParameter("BillingPersonInCharge_tl", billingPersonInCharge_tl) :
                new ObjectParameter("BillingPersonInCharge_tl", typeof(string));
    
            var billingPostCodeParameter = billingPostCode != null ?
                new ObjectParameter("BillingPostCode", billingPostCode) :
                new ObjectParameter("BillingPostCode", typeof(string));
    
            var billingBankIDParameter = billingBankID.HasValue ?
                new ObjectParameter("BillingBankID", billingBankID) :
                new ObjectParameter("BillingBankID", typeof(System.Guid));
    
            var billingBankBranchIDParameter = billingBankBranchID.HasValue ?
                new ObjectParameter("BillingBankBranchID", billingBankBranchID) :
                new ObjectParameter("BillingBankBranchID", typeof(System.Guid));
    
            var billingBankAccountTypeIDParameter = billingBankAccountTypeID.HasValue ?
                new ObjectParameter("BillingBankAccountTypeID", billingBankAccountTypeID) :
                new ObjectParameter("BillingBankAccountTypeID", typeof(long));
    
            var billingBankAccountNoParameter = billingBankAccountNo != null ?
                new ObjectParameter("BillingBankAccountNo", billingBankAccountNo) :
                new ObjectParameter("BillingBankAccountNo", typeof(string));
    
            var billingBankAccountHolder_enParameter = billingBankAccountHolder_en != null ?
                new ObjectParameter("BillingBankAccountHolder_en", billingBankAccountHolder_en) :
                new ObjectParameter("BillingBankAccountHolder_en", typeof(string));
    
            var billingBankAccountHolder_jpParameter = billingBankAccountHolder_jp != null ?
                new ObjectParameter("BillingBankAccountHolder_jp", billingBankAccountHolder_jp) :
                new ObjectParameter("BillingBankAccountHolder_jp", typeof(string));
    
            var billingBankAccountHolder_krParameter = billingBankAccountHolder_kr != null ?
                new ObjectParameter("BillingBankAccountHolder_kr", billingBankAccountHolder_kr) :
                new ObjectParameter("BillingBankAccountHolder_kr", typeof(string));
    
            var billingBankAccountHolder_cnParameter = billingBankAccountHolder_cn != null ?
                new ObjectParameter("BillingBankAccountHolder_cn", billingBankAccountHolder_cn) :
                new ObjectParameter("BillingBankAccountHolder_cn", typeof(string));
    
            var billingBankAccountHolder_frParameter = billingBankAccountHolder_fr != null ?
                new ObjectParameter("BillingBankAccountHolder_fr", billingBankAccountHolder_fr) :
                new ObjectParameter("BillingBankAccountHolder_fr", typeof(string));
    
            var billingBankAccountHolder_tlParameter = billingBankAccountHolder_tl != null ?
                new ObjectParameter("BillingBankAccountHolder_tl", billingBankAccountHolder_tl) :
                new ObjectParameter("BillingBankAccountHolder_tl", typeof(string));
    
            var isWebsitePrivateParameter = isWebsitePrivate.HasValue ?
                new ObjectParameter("IsWebsitePrivate", isWebsitePrivate) :
                new ObjectParameter("IsWebsitePrivate", typeof(bool));
    
            var salesManParameter = salesMan != null ?
                new ObjectParameter("SalesMan", salesMan) :
                new ObjectParameter("SalesMan", typeof(string));
    
            var dateOfPaymentParameter = dateOfPayment.HasValue ?
                new ObjectParameter("DateOfPayment", dateOfPayment) :
                new ObjectParameter("DateOfPayment", typeof(System.DateTime));
    
            var coordinateParameter = coordinate != null ?
                new ObjectParameter("Coordinate", coordinate) :
                new ObjectParameter("Coordinate", typeof(string));
    
            var inHousePersonIDParameter = inHousePersonID.HasValue ?
                new ObjectParameter("InHousePersonID", inHousePersonID) :
                new ObjectParameter("InHousePersonID", typeof(System.Guid));
    
            var salesScaleParameter = salesScale != null ?
                new ObjectParameter("SalesScale", salesScale) :
                new ObjectParameter("SalesScale", typeof(string));
    
            var industryClassificationParameter = industryClassification != null ?
                new ObjectParameter("IndustryClassification", industryClassification) :
                new ObjectParameter("IndustryClassification", typeof(string));
    
            var tradingDivisionParameter = tradingDivision != null ?
                new ObjectParameter("TradingDivision", tradingDivision) :
                new ObjectParameter("TradingDivision", typeof(string));
    
            var salesVisitDateParameter = salesVisitDate.HasValue ?
                new ObjectParameter("SalesVisitDate", salesVisitDate) :
                new ObjectParameter("SalesVisitDate", typeof(System.DateTime));
    
            var isInteractWithCompanyParameter = isInteractWithCompany.HasValue ?
                new ObjectParameter("IsInteractWithCompany", isInteractWithCompany) :
                new ObjectParameter("IsInteractWithCompany", typeof(bool));
    
            var isInteractByVisitParameter = isInteractByVisit.HasValue ?
                new ObjectParameter("IsInteractByVisit", isInteractByVisit) :
                new ObjectParameter("IsInteractByVisit", typeof(bool));
    
            var isInteractByPhoneParameter = isInteractByPhone.HasValue ?
                new ObjectParameter("IsInteractByPhone", isInteractByPhone) :
                new ObjectParameter("IsInteractByPhone", typeof(bool));
    
            var hasThePersonInChargeParameter = hasThePersonInCharge.HasValue ?
                new ObjectParameter("HasThePersonInCharge", hasThePersonInCharge) :
                new ObjectParameter("HasThePersonInCharge", typeof(bool));
    
            var interactWithCompanyDiscriptionParameter = interactWithCompanyDiscription != null ?
                new ObjectParameter("InteractWithCompanyDiscription", interactWithCompanyDiscription) :
                new ObjectParameter("InteractWithCompanyDiscription", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var updatedDateParameter = updatedDate.HasValue ?
                new ObjectParameter("UpdatedDate", updatedDate) :
                new ObjectParameter("UpdatedDate", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(long));
    
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SaveDeleteCompany", iDParameter, registrationIDParameter, divisionIDParameter, corporateDivisionIDParameter, originCountryIDParameter, applicationIDParameter, isCompanyAgentParameter, companyNoParameter, name_enParameter, name_jpParameter, name_krParameter, name_cnParameter, name_frParameter, name_tlParameter, corporateNoParameter, webSiteURLParameter, emailParameter, email_CCParameter, passwordParameter, representativeDirector_enParameter, representativeDirector_jpParameter, representativeDirector_krParameter, representativeDirector_cnParameter, representativeDirector_frParameter, representativeDirector_tlParameter, phoneParameter, faxParameter, postalCodeParameter, address_enParameter, address_jpParameter, address_krParameter, address_cnParameter, address_frParameter, address_tlParameter, captitalParameter, establishmentDateParameter, businessClassificationIDParameter, isActiveParameter, mainPhotoParameter, logoParameter, isBillingMonthlyParameter, employeeName_enParameter, employeeName_jpParameter, employeeName_krParameter, employeeName_cnParameter, employeeName_frParameter, employeeName_tlParameter, branchName_enParameter, branchName_jpParameter, branchName_krParameter, branchName_cnParameter, branchName_frParameter, branchName_tlParameter, tradingNoteParameter, tradingRecordParameter, bankIDParameter, bankBranchIDParameter, bankAccountTypeIDParameter, privateCompanyNameParameter, personInCharge_enParameter, personInCharge_jpParameter, personInCharge_krParameter, personInCharge_cnParameter, personInCharge_frParameter, personInCharge_tlParameter, inchargeMobileNoParameter, isJapneseOfficeParameter, homeOfficeAddressIDParameter, foreignCountryIDParameter, isAddressPrivateParameter, privateNameParameter, provinceOfOverseas_enParameter, provinceOfOverseas_jpParameter, provinceOfOverseas_krParameter, provinceOfOverseas_cnParameter, provinceOfOverseas_frParameter, provinceOfOverseas_tlParameter, closingDateParameter, buildingName_enParameter, buildingName_jpParameter, buildingName_krParameter, buildingName_cnParameter, buildingName_frParameter, buildingName_tlParameter, billingCompanyName_enParameter, billingCompanyName_jpParameter, billingCompanyName_krParameter, billingCompanyName_cnParameter, billingCompanyName_frParameter, billingCompanyName_tlParameter, isPostBillParameter, biilingDivisionIDParameter, billingDivisionName_enParameter, billingDivisionName_jpParameter, billingDivisionName_krParameter, billingDivisionName_frParameter, billingDivisionName_tlParameter, billingPostalCodeParameter, billingAddress_enParameter, billingAddress_jpParameter, billingAddress_krParameter, billingAddress_cnParameter, billingAddress_frParameter, billingAddress_tlParameter, billingPersonInCharge_enParameter, billingPersonInCharge_jpParameter, billingPersonInCharge_krParameter, billingPersonInCharge_cnParameter, billingPersonInCharge_frParameter, billingPersonInCharge_tlParameter, billingPostCodeParameter, billingBankIDParameter, billingBankBranchIDParameter, billingBankAccountTypeIDParameter, billingBankAccountNoParameter, billingBankAccountHolder_enParameter, billingBankAccountHolder_jpParameter, billingBankAccountHolder_krParameter, billingBankAccountHolder_cnParameter, billingBankAccountHolder_frParameter, billingBankAccountHolder_tlParameter, isWebsitePrivateParameter, salesManParameter, dateOfPaymentParameter, coordinateParameter, inHousePersonIDParameter, salesScaleParameter, industryClassificationParameter, tradingDivisionParameter, salesVisitDateParameter, isInteractWithCompanyParameter, isInteractByVisitParameter, isInteractByPhoneParameter, hasThePersonInChargeParameter, interactWithCompanyDiscriptionParameter, createdDateParameter, createdByParameter, updatedDateParameter, updatedByParameter, cultureIdParameter, statementTypeParameter);
        }
    
        public virtual int SP_SaveDeleteEmployee(Nullable<System.Guid> iD, Nullable<long> registrationID, string employeeID, Nullable<System.Guid> branchOfficeID, Nullable<long> countryID, Nullable<System.Guid> departmentID, Nullable<long> employeeTypeID, Nullable<long> applicationID, string name_en, string name_jp, string name_kr, string name_cn, string name_fr, string name_tl, string password, Nullable<System.DateTime> birthDate, Nullable<System.DateTime> joiningDate, Nullable<System.DateTime> registrationDate, Nullable<System.DateTime> leavingDate, Nullable<int> attendanceDay, string clockInTime, string clockOutTime, string skypeID, string skypePassword, string email, Nullable<bool> isResponsiblePerson, string homeAddress_en, string homeAddress_jp, string homeAddress_kr, string homeAddress_cn, string homeAddress_fr, string homeAddress_tl, string homePhone, string mobilePhone, string pCEmail, string mobileEmail, string sns_one, string sns_two, Nullable<System.Guid> bankID, Nullable<System.Guid> bankBranchID, Nullable<long> bankAccountTypeID, string bankAccountNumber, string bankAccountName, string photo, string signature, string institute_en, string institute_jp, string institute_kr, string institute_cn, string institute_fr, string institute_tl, string academicQualification, Nullable<System.Guid> language_one, Nullable<System.Guid> language_two, Nullable<System.Guid> language_three, string selfIntroduction_en, string selfIntroduction_jp, string selfIntroduction_kr, string selfIntroduction_fr, string selfIntroduction_tl, string selfIntroduction_cn, string note_en, string note_jp, string note_kr, string note_fr, string note_tl, string note_cn, Nullable<long> createdBy, Nullable<System.DateTime> createdDate, Nullable<long> updatedBy, Nullable<System.DateTime> updatedDate, Nullable<bool> active, Nullable<bool> isDeleted, string cultureId, string statementType)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var registrationIDParameter = registrationID.HasValue ?
                new ObjectParameter("RegistrationID", registrationID) :
                new ObjectParameter("RegistrationID", typeof(long));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var branchOfficeIDParameter = branchOfficeID.HasValue ?
                new ObjectParameter("BranchOfficeID", branchOfficeID) :
                new ObjectParameter("BranchOfficeID", typeof(System.Guid));
    
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(long));
    
            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(System.Guid));
    
            var employeeTypeIDParameter = employeeTypeID.HasValue ?
                new ObjectParameter("EmployeeTypeID", employeeTypeID) :
                new ObjectParameter("EmployeeTypeID", typeof(long));
    
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(long));
    
            var name_enParameter = name_en != null ?
                new ObjectParameter("Name_en", name_en) :
                new ObjectParameter("Name_en", typeof(string));
    
            var name_jpParameter = name_jp != null ?
                new ObjectParameter("Name_jp", name_jp) :
                new ObjectParameter("Name_jp", typeof(string));
    
            var name_krParameter = name_kr != null ?
                new ObjectParameter("Name_kr", name_kr) :
                new ObjectParameter("Name_kr", typeof(string));
    
            var name_cnParameter = name_cn != null ?
                new ObjectParameter("Name_cn", name_cn) :
                new ObjectParameter("Name_cn", typeof(string));
    
            var name_frParameter = name_fr != null ?
                new ObjectParameter("Name_fr", name_fr) :
                new ObjectParameter("Name_fr", typeof(string));
    
            var name_tlParameter = name_tl != null ?
                new ObjectParameter("Name_tl", name_tl) :
                new ObjectParameter("Name_tl", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var joiningDateParameter = joiningDate.HasValue ?
                new ObjectParameter("JoiningDate", joiningDate) :
                new ObjectParameter("JoiningDate", typeof(System.DateTime));
    
            var registrationDateParameter = registrationDate.HasValue ?
                new ObjectParameter("RegistrationDate", registrationDate) :
                new ObjectParameter("RegistrationDate", typeof(System.DateTime));
    
            var leavingDateParameter = leavingDate.HasValue ?
                new ObjectParameter("LeavingDate", leavingDate) :
                new ObjectParameter("LeavingDate", typeof(System.DateTime));
    
            var attendanceDayParameter = attendanceDay.HasValue ?
                new ObjectParameter("AttendanceDay", attendanceDay) :
                new ObjectParameter("AttendanceDay", typeof(int));
    
            var clockInTimeParameter = clockInTime != null ?
                new ObjectParameter("ClockInTime", clockInTime) :
                new ObjectParameter("ClockInTime", typeof(string));
    
            var clockOutTimeParameter = clockOutTime != null ?
                new ObjectParameter("ClockOutTime", clockOutTime) :
                new ObjectParameter("ClockOutTime", typeof(string));
    
            var skypeIDParameter = skypeID != null ?
                new ObjectParameter("SkypeID", skypeID) :
                new ObjectParameter("SkypeID", typeof(string));
    
            var skypePasswordParameter = skypePassword != null ?
                new ObjectParameter("SkypePassword", skypePassword) :
                new ObjectParameter("SkypePassword", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var isResponsiblePersonParameter = isResponsiblePerson.HasValue ?
                new ObjectParameter("IsResponsiblePerson", isResponsiblePerson) :
                new ObjectParameter("IsResponsiblePerson", typeof(bool));
    
            var homeAddress_enParameter = homeAddress_en != null ?
                new ObjectParameter("HomeAddress_en", homeAddress_en) :
                new ObjectParameter("HomeAddress_en", typeof(string));
    
            var homeAddress_jpParameter = homeAddress_jp != null ?
                new ObjectParameter("HomeAddress_jp", homeAddress_jp) :
                new ObjectParameter("HomeAddress_jp", typeof(string));
    
            var homeAddress_krParameter = homeAddress_kr != null ?
                new ObjectParameter("HomeAddress_kr", homeAddress_kr) :
                new ObjectParameter("HomeAddress_kr", typeof(string));
    
            var homeAddress_cnParameter = homeAddress_cn != null ?
                new ObjectParameter("HomeAddress_cn", homeAddress_cn) :
                new ObjectParameter("HomeAddress_cn", typeof(string));
    
            var homeAddress_frParameter = homeAddress_fr != null ?
                new ObjectParameter("HomeAddress_fr", homeAddress_fr) :
                new ObjectParameter("HomeAddress_fr", typeof(string));
    
            var homeAddress_tlParameter = homeAddress_tl != null ?
                new ObjectParameter("HomeAddress_tl", homeAddress_tl) :
                new ObjectParameter("HomeAddress_tl", typeof(string));
    
            var homePhoneParameter = homePhone != null ?
                new ObjectParameter("HomePhone", homePhone) :
                new ObjectParameter("HomePhone", typeof(string));
    
            var mobilePhoneParameter = mobilePhone != null ?
                new ObjectParameter("MobilePhone", mobilePhone) :
                new ObjectParameter("MobilePhone", typeof(string));
    
            var pCEmailParameter = pCEmail != null ?
                new ObjectParameter("PCEmail", pCEmail) :
                new ObjectParameter("PCEmail", typeof(string));
    
            var mobileEmailParameter = mobileEmail != null ?
                new ObjectParameter("MobileEmail", mobileEmail) :
                new ObjectParameter("MobileEmail", typeof(string));
    
            var sns_oneParameter = sns_one != null ?
                new ObjectParameter("Sns_one", sns_one) :
                new ObjectParameter("Sns_one", typeof(string));
    
            var sns_twoParameter = sns_two != null ?
                new ObjectParameter("Sns_two", sns_two) :
                new ObjectParameter("Sns_two", typeof(string));
    
            var bankIDParameter = bankID.HasValue ?
                new ObjectParameter("BankID", bankID) :
                new ObjectParameter("BankID", typeof(System.Guid));
    
            var bankBranchIDParameter = bankBranchID.HasValue ?
                new ObjectParameter("BankBranchID", bankBranchID) :
                new ObjectParameter("BankBranchID", typeof(System.Guid));
    
            var bankAccountTypeIDParameter = bankAccountTypeID.HasValue ?
                new ObjectParameter("BankAccountTypeID", bankAccountTypeID) :
                new ObjectParameter("BankAccountTypeID", typeof(long));
    
            var bankAccountNumberParameter = bankAccountNumber != null ?
                new ObjectParameter("BankAccountNumber", bankAccountNumber) :
                new ObjectParameter("BankAccountNumber", typeof(string));
    
            var bankAccountNameParameter = bankAccountName != null ?
                new ObjectParameter("BankAccountName", bankAccountName) :
                new ObjectParameter("BankAccountName", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("Photo", photo) :
                new ObjectParameter("Photo", typeof(string));
    
            var signatureParameter = signature != null ?
                new ObjectParameter("Signature", signature) :
                new ObjectParameter("Signature", typeof(string));
    
            var institute_enParameter = institute_en != null ?
                new ObjectParameter("Institute_en", institute_en) :
                new ObjectParameter("Institute_en", typeof(string));
    
            var institute_jpParameter = institute_jp != null ?
                new ObjectParameter("Institute_jp", institute_jp) :
                new ObjectParameter("Institute_jp", typeof(string));
    
            var institute_krParameter = institute_kr != null ?
                new ObjectParameter("Institute_kr", institute_kr) :
                new ObjectParameter("Institute_kr", typeof(string));
    
            var institute_cnParameter = institute_cn != null ?
                new ObjectParameter("Institute_cn", institute_cn) :
                new ObjectParameter("Institute_cn", typeof(string));
    
            var institute_frParameter = institute_fr != null ?
                new ObjectParameter("Institute_fr", institute_fr) :
                new ObjectParameter("Institute_fr", typeof(string));
    
            var institute_tlParameter = institute_tl != null ?
                new ObjectParameter("Institute_tl", institute_tl) :
                new ObjectParameter("Institute_tl", typeof(string));
    
            var academicQualificationParameter = academicQualification != null ?
                new ObjectParameter("AcademicQualification", academicQualification) :
                new ObjectParameter("AcademicQualification", typeof(string));
    
            var language_oneParameter = language_one.HasValue ?
                new ObjectParameter("Language_one", language_one) :
                new ObjectParameter("Language_one", typeof(System.Guid));
    
            var language_twoParameter = language_two.HasValue ?
                new ObjectParameter("Language_two", language_two) :
                new ObjectParameter("Language_two", typeof(System.Guid));
    
            var language_threeParameter = language_three.HasValue ?
                new ObjectParameter("Language_three", language_three) :
                new ObjectParameter("Language_three", typeof(System.Guid));
    
            var selfIntroduction_enParameter = selfIntroduction_en != null ?
                new ObjectParameter("SelfIntroduction_en", selfIntroduction_en) :
                new ObjectParameter("SelfIntroduction_en", typeof(string));
    
            var selfIntroduction_jpParameter = selfIntroduction_jp != null ?
                new ObjectParameter("SelfIntroduction_jp", selfIntroduction_jp) :
                new ObjectParameter("SelfIntroduction_jp", typeof(string));
    
            var selfIntroduction_krParameter = selfIntroduction_kr != null ?
                new ObjectParameter("SelfIntroduction_kr", selfIntroduction_kr) :
                new ObjectParameter("SelfIntroduction_kr", typeof(string));
    
            var selfIntroduction_frParameter = selfIntroduction_fr != null ?
                new ObjectParameter("SelfIntroduction_fr", selfIntroduction_fr) :
                new ObjectParameter("SelfIntroduction_fr", typeof(string));
    
            var selfIntroduction_tlParameter = selfIntroduction_tl != null ?
                new ObjectParameter("SelfIntroduction_tl", selfIntroduction_tl) :
                new ObjectParameter("SelfIntroduction_tl", typeof(string));
    
            var selfIntroduction_cnParameter = selfIntroduction_cn != null ?
                new ObjectParameter("SelfIntroduction_cn", selfIntroduction_cn) :
                new ObjectParameter("SelfIntroduction_cn", typeof(string));
    
            var note_enParameter = note_en != null ?
                new ObjectParameter("Note_en", note_en) :
                new ObjectParameter("Note_en", typeof(string));
    
            var note_jpParameter = note_jp != null ?
                new ObjectParameter("Note_jp", note_jp) :
                new ObjectParameter("Note_jp", typeof(string));
    
            var note_krParameter = note_kr != null ?
                new ObjectParameter("Note_kr", note_kr) :
                new ObjectParameter("Note_kr", typeof(string));
    
            var note_frParameter = note_fr != null ?
                new ObjectParameter("Note_fr", note_fr) :
                new ObjectParameter("Note_fr", typeof(string));
    
            var note_tlParameter = note_tl != null ?
                new ObjectParameter("Note_tl", note_tl) :
                new ObjectParameter("Note_tl", typeof(string));
    
            var note_cnParameter = note_cn != null ?
                new ObjectParameter("Note_cn", note_cn) :
                new ObjectParameter("Note_cn", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(long));
    
            var updatedDateParameter = updatedDate.HasValue ?
                new ObjectParameter("UpdatedDate", updatedDate) :
                new ObjectParameter("UpdatedDate", typeof(System.DateTime));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SaveDeleteEmployee", iDParameter, registrationIDParameter, employeeIDParameter, branchOfficeIDParameter, countryIDParameter, departmentIDParameter, employeeTypeIDParameter, applicationIDParameter, name_enParameter, name_jpParameter, name_krParameter, name_cnParameter, name_frParameter, name_tlParameter, passwordParameter, birthDateParameter, joiningDateParameter, registrationDateParameter, leavingDateParameter, attendanceDayParameter, clockInTimeParameter, clockOutTimeParameter, skypeIDParameter, skypePasswordParameter, emailParameter, isResponsiblePersonParameter, homeAddress_enParameter, homeAddress_jpParameter, homeAddress_krParameter, homeAddress_cnParameter, homeAddress_frParameter, homeAddress_tlParameter, homePhoneParameter, mobilePhoneParameter, pCEmailParameter, mobileEmailParameter, sns_oneParameter, sns_twoParameter, bankIDParameter, bankBranchIDParameter, bankAccountTypeIDParameter, bankAccountNumberParameter, bankAccountNameParameter, photoParameter, signatureParameter, institute_enParameter, institute_jpParameter, institute_krParameter, institute_cnParameter, institute_frParameter, institute_tlParameter, academicQualificationParameter, language_oneParameter, language_twoParameter, language_threeParameter, selfIntroduction_enParameter, selfIntroduction_jpParameter, selfIntroduction_krParameter, selfIntroduction_frParameter, selfIntroduction_tlParameter, selfIntroduction_cnParameter, note_enParameter, note_jpParameter, note_krParameter, note_frParameter, note_tlParameter, note_cnParameter, createdByParameter, createdDateParameter, updatedByParameter, updatedDateParameter, activeParameter, isDeletedParameter, cultureIdParameter, statementTypeParameter);
        }
    
        public virtual int SP_SaveDeleteOrderWeb(Nullable<System.Guid> iD, Nullable<long> applicationID, string invoiceNo, Nullable<System.Guid> sourceLanguageID, Nullable<System.Guid> targetLanguageID, Nullable<System.Guid> translationFieldID, Nullable<System.Guid> assignedTranslatorID, Nullable<System.Guid> clientID, Nullable<long> deliveryPlanID, string deliveryPlan, string deliveryLevelName, Nullable<long> currencyID, Nullable<System.Guid> introducerID, Nullable<int> translationType, Nullable<System.DateTime> orderDate, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<System.DateTime> deliveryDate, Nullable<System.DateTime> completionDate, Nullable<int> orderStatus, Nullable<int> paymentStatus, Nullable<int> paymentMethod, Nullable<long> wordCount, Nullable<int> countType, Nullable<decimal> paymentAmount, Nullable<decimal> translatorFee, Nullable<decimal> estimatedPrice, Nullable<decimal> unitPrice, Nullable<decimal> discount, Nullable<decimal> priceAfterDiscount, Nullable<decimal> consumptionTax, Nullable<System.DateTime> requestDate, Nullable<System.DateTime> paymentDate, string commentToTranslator, string menuScript, string deliveryComment, string companyNotes, string commentToBcause, string referenceFileName, string referenceDownloadURL, string statementType, ObjectParameter oRDER_NO)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(long));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var sourceLanguageIDParameter = sourceLanguageID.HasValue ?
                new ObjectParameter("SourceLanguageID", sourceLanguageID) :
                new ObjectParameter("SourceLanguageID", typeof(System.Guid));
    
            var targetLanguageIDParameter = targetLanguageID.HasValue ?
                new ObjectParameter("TargetLanguageID", targetLanguageID) :
                new ObjectParameter("TargetLanguageID", typeof(System.Guid));
    
            var translationFieldIDParameter = translationFieldID.HasValue ?
                new ObjectParameter("TranslationFieldID", translationFieldID) :
                new ObjectParameter("TranslationFieldID", typeof(System.Guid));
    
            var assignedTranslatorIDParameter = assignedTranslatorID.HasValue ?
                new ObjectParameter("AssignedTranslatorID", assignedTranslatorID) :
                new ObjectParameter("AssignedTranslatorID", typeof(System.Guid));
    
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(System.Guid));
    
            var deliveryPlanIDParameter = deliveryPlanID.HasValue ?
                new ObjectParameter("DeliveryPlanID", deliveryPlanID) :
                new ObjectParameter("DeliveryPlanID", typeof(long));
    
            var deliveryPlanParameter = deliveryPlan != null ?
                new ObjectParameter("DeliveryPlan", deliveryPlan) :
                new ObjectParameter("DeliveryPlan", typeof(string));
    
            var deliveryLevelNameParameter = deliveryLevelName != null ?
                new ObjectParameter("DeliveryLevelName", deliveryLevelName) :
                new ObjectParameter("DeliveryLevelName", typeof(string));
    
            var currencyIDParameter = currencyID.HasValue ?
                new ObjectParameter("CurrencyID", currencyID) :
                new ObjectParameter("CurrencyID", typeof(long));
    
            var introducerIDParameter = introducerID.HasValue ?
                new ObjectParameter("IntroducerID", introducerID) :
                new ObjectParameter("IntroducerID", typeof(System.Guid));
    
            var translationTypeParameter = translationType.HasValue ?
                new ObjectParameter("TranslationType", translationType) :
                new ObjectParameter("TranslationType", typeof(int));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var deliveryDateParameter = deliveryDate.HasValue ?
                new ObjectParameter("DeliveryDate", deliveryDate) :
                new ObjectParameter("DeliveryDate", typeof(System.DateTime));
    
            var completionDateParameter = completionDate.HasValue ?
                new ObjectParameter("CompletionDate", completionDate) :
                new ObjectParameter("CompletionDate", typeof(System.DateTime));
    
            var orderStatusParameter = orderStatus.HasValue ?
                new ObjectParameter("OrderStatus", orderStatus) :
                new ObjectParameter("OrderStatus", typeof(int));
    
            var paymentStatusParameter = paymentStatus.HasValue ?
                new ObjectParameter("PaymentStatus", paymentStatus) :
                new ObjectParameter("PaymentStatus", typeof(int));
    
            var paymentMethodParameter = paymentMethod.HasValue ?
                new ObjectParameter("PaymentMethod", paymentMethod) :
                new ObjectParameter("PaymentMethod", typeof(int));
    
            var wordCountParameter = wordCount.HasValue ?
                new ObjectParameter("WordCount", wordCount) :
                new ObjectParameter("WordCount", typeof(long));
    
            var countTypeParameter = countType.HasValue ?
                new ObjectParameter("CountType", countType) :
                new ObjectParameter("CountType", typeof(int));
    
            var paymentAmountParameter = paymentAmount.HasValue ?
                new ObjectParameter("PaymentAmount", paymentAmount) :
                new ObjectParameter("PaymentAmount", typeof(decimal));
    
            var translatorFeeParameter = translatorFee.HasValue ?
                new ObjectParameter("TranslatorFee", translatorFee) :
                new ObjectParameter("TranslatorFee", typeof(decimal));
    
            var estimatedPriceParameter = estimatedPrice.HasValue ?
                new ObjectParameter("EstimatedPrice", estimatedPrice) :
                new ObjectParameter("EstimatedPrice", typeof(decimal));
    
            var unitPriceParameter = unitPrice.HasValue ?
                new ObjectParameter("UnitPrice", unitPrice) :
                new ObjectParameter("UnitPrice", typeof(decimal));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(decimal));
    
            var priceAfterDiscountParameter = priceAfterDiscount.HasValue ?
                new ObjectParameter("PriceAfterDiscount", priceAfterDiscount) :
                new ObjectParameter("PriceAfterDiscount", typeof(decimal));
    
            var consumptionTaxParameter = consumptionTax.HasValue ?
                new ObjectParameter("ConsumptionTax", consumptionTax) :
                new ObjectParameter("ConsumptionTax", typeof(decimal));
    
            var requestDateParameter = requestDate.HasValue ?
                new ObjectParameter("RequestDate", requestDate) :
                new ObjectParameter("RequestDate", typeof(System.DateTime));
    
            var paymentDateParameter = paymentDate.HasValue ?
                new ObjectParameter("PaymentDate", paymentDate) :
                new ObjectParameter("PaymentDate", typeof(System.DateTime));
    
            var commentToTranslatorParameter = commentToTranslator != null ?
                new ObjectParameter("CommentToTranslator", commentToTranslator) :
                new ObjectParameter("CommentToTranslator", typeof(string));
    
            var menuScriptParameter = menuScript != null ?
                new ObjectParameter("MenuScript", menuScript) :
                new ObjectParameter("MenuScript", typeof(string));
    
            var deliveryCommentParameter = deliveryComment != null ?
                new ObjectParameter("DeliveryComment", deliveryComment) :
                new ObjectParameter("DeliveryComment", typeof(string));
    
            var companyNotesParameter = companyNotes != null ?
                new ObjectParameter("CompanyNotes", companyNotes) :
                new ObjectParameter("CompanyNotes", typeof(string));
    
            var commentToBcauseParameter = commentToBcause != null ?
                new ObjectParameter("CommentToBcause", commentToBcause) :
                new ObjectParameter("CommentToBcause", typeof(string));
    
            var referenceFileNameParameter = referenceFileName != null ?
                new ObjectParameter("ReferenceFileName", referenceFileName) :
                new ObjectParameter("ReferenceFileName", typeof(string));
    
            var referenceDownloadURLParameter = referenceDownloadURL != null ?
                new ObjectParameter("ReferenceDownloadURL", referenceDownloadURL) :
                new ObjectParameter("ReferenceDownloadURL", typeof(string));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SaveDeleteOrderWeb", iDParameter, applicationIDParameter, invoiceNoParameter, sourceLanguageIDParameter, targetLanguageIDParameter, translationFieldIDParameter, assignedTranslatorIDParameter, clientIDParameter, deliveryPlanIDParameter, deliveryPlanParameter, deliveryLevelNameParameter, currencyIDParameter, introducerIDParameter, translationTypeParameter, orderDateParameter, startDateParameter, endDateParameter, deliveryDateParameter, completionDateParameter, orderStatusParameter, paymentStatusParameter, paymentMethodParameter, wordCountParameter, countTypeParameter, paymentAmountParameter, translatorFeeParameter, estimatedPriceParameter, unitPriceParameter, discountParameter, priceAfterDiscountParameter, consumptionTaxParameter, requestDateParameter, paymentDateParameter, commentToTranslatorParameter, menuScriptParameter, deliveryCommentParameter, companyNotesParameter, commentToBcauseParameter, referenceFileNameParameter, referenceDownloadURLParameter, statementTypeParameter, oRDER_NO);
        }
    
        public virtual int SP_SaveDeleteOrderWebDocuments(Nullable<System.Guid> iD, Nullable<System.Guid> orderID, string name, string fileDescription, string downloadURL, Nullable<System.DateTime> uploadDate, string statementType)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(System.Guid));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var fileDescriptionParameter = fileDescription != null ?
                new ObjectParameter("FileDescription", fileDescription) :
                new ObjectParameter("FileDescription", typeof(string));
    
            var downloadURLParameter = downloadURL != null ?
                new ObjectParameter("DownloadURL", downloadURL) :
                new ObjectParameter("DownloadURL", typeof(string));
    
            var uploadDateParameter = uploadDate.HasValue ?
                new ObjectParameter("UploadDate", uploadDate) :
                new ObjectParameter("UploadDate", typeof(System.DateTime));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SaveDeleteOrderWebDocuments", iDParameter, orderIDParameter, nameParameter, fileDescriptionParameter, downloadURLParameter, uploadDateParameter, statementTypeParameter);
        }
    
        public virtual int SP_SaveDeletePaypalTransaction(Nullable<System.Guid> iD, string gUID, string pAYMENTID, Nullable<long> aPPID, string sTATEMENT_TYPE)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var gUIDParameter = gUID != null ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(string));
    
            var pAYMENTIDParameter = pAYMENTID != null ?
                new ObjectParameter("PAYMENTID", pAYMENTID) :
                new ObjectParameter("PAYMENTID", typeof(string));
    
            var aPPIDParameter = aPPID.HasValue ?
                new ObjectParameter("APPID", aPPID) :
                new ObjectParameter("APPID", typeof(long));
    
            var sTATEMENT_TYPEParameter = sTATEMENT_TYPE != null ?
                new ObjectParameter("STATEMENT_TYPE", sTATEMENT_TYPE) :
                new ObjectParameter("STATEMENT_TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SaveDeletePaypalTransaction", iDParameter, gUIDParameter, pAYMENTIDParameter, aPPIDParameter, sTATEMENT_TYPEParameter);
        }
    
        public virtual int SP_SaveDeleteTransproLanguagePriceCategory(Nullable<System.Guid> iD, Nullable<System.Guid> sourceLanguageID, Nullable<System.Guid> targetLanguageID, Nullable<System.Guid> specialityFieldID, Nullable<System.Guid> subSpecialityFieldID, string description_en, string description_jp, string description_kr, string description_cn, string description_fr, string description_tl, Nullable<long> wordPerPage, Nullable<long> currencyID, Nullable<bool> isLightPrice, Nullable<bool> isBusinessPrice, Nullable<bool> isExpertPrice, Nullable<bool> isActive, Nullable<bool> isDeleted, string statementType)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var sourceLanguageIDParameter = sourceLanguageID.HasValue ?
                new ObjectParameter("SourceLanguageID", sourceLanguageID) :
                new ObjectParameter("SourceLanguageID", typeof(System.Guid));
    
            var targetLanguageIDParameter = targetLanguageID.HasValue ?
                new ObjectParameter("TargetLanguageID", targetLanguageID) :
                new ObjectParameter("TargetLanguageID", typeof(System.Guid));
    
            var specialityFieldIDParameter = specialityFieldID.HasValue ?
                new ObjectParameter("SpecialityFieldID", specialityFieldID) :
                new ObjectParameter("SpecialityFieldID", typeof(System.Guid));
    
            var subSpecialityFieldIDParameter = subSpecialityFieldID.HasValue ?
                new ObjectParameter("SubSpecialityFieldID", subSpecialityFieldID) :
                new ObjectParameter("SubSpecialityFieldID", typeof(System.Guid));
    
            var description_enParameter = description_en != null ?
                new ObjectParameter("Description_en", description_en) :
                new ObjectParameter("Description_en", typeof(string));
    
            var description_jpParameter = description_jp != null ?
                new ObjectParameter("Description_jp", description_jp) :
                new ObjectParameter("Description_jp", typeof(string));
    
            var description_krParameter = description_kr != null ?
                new ObjectParameter("Description_kr", description_kr) :
                new ObjectParameter("Description_kr", typeof(string));
    
            var description_cnParameter = description_cn != null ?
                new ObjectParameter("Description_cn", description_cn) :
                new ObjectParameter("Description_cn", typeof(string));
    
            var description_frParameter = description_fr != null ?
                new ObjectParameter("Description_fr", description_fr) :
                new ObjectParameter("Description_fr", typeof(string));
    
            var description_tlParameter = description_tl != null ?
                new ObjectParameter("Description_tl", description_tl) :
                new ObjectParameter("Description_tl", typeof(string));
    
            var wordPerPageParameter = wordPerPage.HasValue ?
                new ObjectParameter("WordPerPage", wordPerPage) :
                new ObjectParameter("WordPerPage", typeof(long));
    
            var currencyIDParameter = currencyID.HasValue ?
                new ObjectParameter("CurrencyID", currencyID) :
                new ObjectParameter("CurrencyID", typeof(long));
    
            var isLightPriceParameter = isLightPrice.HasValue ?
                new ObjectParameter("IsLightPrice", isLightPrice) :
                new ObjectParameter("IsLightPrice", typeof(bool));
    
            var isBusinessPriceParameter = isBusinessPrice.HasValue ?
                new ObjectParameter("IsBusinessPrice", isBusinessPrice) :
                new ObjectParameter("IsBusinessPrice", typeof(bool));
    
            var isExpertPriceParameter = isExpertPrice.HasValue ?
                new ObjectParameter("IsExpertPrice", isExpertPrice) :
                new ObjectParameter("IsExpertPrice", typeof(bool));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SaveDeleteTransproLanguagePriceCategory", iDParameter, sourceLanguageIDParameter, targetLanguageIDParameter, specialityFieldIDParameter, subSpecialityFieldIDParameter, description_enParameter, description_jpParameter, description_krParameter, description_cnParameter, description_frParameter, description_tlParameter, wordPerPageParameter, currencyIDParameter, isLightPriceParameter, isBusinessPriceParameter, isExpertPriceParameter, isActiveParameter, isDeletedParameter, statementTypeParameter);
        }
    
        public virtual int SP_SaveDeleteTransproLanguagePriceDetails(Nullable<System.Guid> iD, Nullable<System.Guid> priceCategoryID, Nullable<long> deliveryPlanID, Nullable<decimal> lightPrice, Nullable<decimal> businessPrice, Nullable<decimal> expertPrice, Nullable<bool> isDefaultForView, Nullable<int> sortBy, string statementType)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var priceCategoryIDParameter = priceCategoryID.HasValue ?
                new ObjectParameter("PriceCategoryID", priceCategoryID) :
                new ObjectParameter("PriceCategoryID", typeof(System.Guid));
    
            var deliveryPlanIDParameter = deliveryPlanID.HasValue ?
                new ObjectParameter("DeliveryPlanID", deliveryPlanID) :
                new ObjectParameter("DeliveryPlanID", typeof(long));
    
            var lightPriceParameter = lightPrice.HasValue ?
                new ObjectParameter("LightPrice", lightPrice) :
                new ObjectParameter("LightPrice", typeof(decimal));
    
            var businessPriceParameter = businessPrice.HasValue ?
                new ObjectParameter("BusinessPrice", businessPrice) :
                new ObjectParameter("BusinessPrice", typeof(decimal));
    
            var expertPriceParameter = expertPrice.HasValue ?
                new ObjectParameter("ExpertPrice", expertPrice) :
                new ObjectParameter("ExpertPrice", typeof(decimal));
    
            var isDefaultForViewParameter = isDefaultForView.HasValue ?
                new ObjectParameter("IsDefaultForView", isDefaultForView) :
                new ObjectParameter("IsDefaultForView", typeof(bool));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SaveDeleteTransproLanguagePriceDetails", iDParameter, priceCategoryIDParameter, deliveryPlanIDParameter, lightPriceParameter, businessPriceParameter, expertPriceParameter, isDefaultForViewParameter, sortByParameter, statementTypeParameter);
        }
    
        public virtual int SP_SaveEstimation(Nullable<System.Guid> iD, string estimationNo, Nullable<System.DateTime> inquiryDate, Nullable<System.DateTime> registrationDate, Nullable<long> applicationID, Nullable<System.Guid> divisionID, Nullable<System.Guid> estimationRouteID, Nullable<System.Guid> outwardSalesID, Nullable<System.Guid> largeSalesID, Nullable<System.Guid> salesPersonID, Nullable<System.Guid> assistantID, Nullable<System.Guid> coordinatorID, Nullable<System.Guid> approvalID, Nullable<System.Guid> clientID, Nullable<System.Guid> clientDepartmentID, Nullable<System.Guid> tradingID, Nullable<System.Guid> projectID, Nullable<System.Guid> teamID, Nullable<bool> isCompanyPrivate, Nullable<int> clientStatus, Nullable<System.Guid> businessCategoryID, string clientPersonInCharge, string clientEmailCC, string clientAddress_en, string clientAddress_jp, string clientAddress_kr, string clientAddress_cn, string clientAddress_fr, string clientAddress_tl, string clientContactNo, string clientFax, Nullable<System.Guid> subSpecializedFieldID, string billingCompanyName_en, string billingCompanyName_jp, string billingCompanyName_kr, string billingCompanyName_cn, string billingCompanyName_fr, string billingCompanyName_tl, string billingTo, string billingEmailCC, string billingAddress_en, string billingAddress_jp, string billingAddress_kr, string billingAddress_cn, string billingAddress_fr, string billingAddress_tl, string billingContactNo, string billingFax, Nullable<bool> isPostingBill, string paymentTerms, string deliveryCompanyName_en, string deliveryCompanyName_jp, string deliveryCompanyName_kr, string deliveryCompanyName_cn, string deliveryCompanyName_fr, string deliveryCompanyName_tl, string deliveryTo, string deliveryEmailCC, string deliveryAddress_en, string deliveryAddress_jp, string deliveryAddress_kr, string deliveryAddress_cn, string deliveryAddress_fr, string deliveryAddress_tl, string deliveryContactNo, string deliveryFax, string deliveryInstruction, string remarksCoordinatorType, Nullable<long> currencyID, Nullable<bool> isProspect, Nullable<bool> isUndisclosed, Nullable<int> estimationType, Nullable<System.Guid> specializedFieldID, Nullable<bool> isInternalPurpose, Nullable<bool> isExternalPurpose, Nullable<bool> isPrintPurpose, Nullable<bool> isWebPurpose, Nullable<bool> isOtherPurpose, string otherPurposeText, Nullable<bool> priorityQuality, Nullable<bool> priorityPrice, Nullable<bool> priorityDelivery, Nullable<bool> priorityTender, Nullable<bool> knownByGoogle, Nullable<bool> knownByYahoo, Nullable<bool> knownByEmail, Nullable<bool> knownByBing, Nullable<bool> knownByOthers, string knownOtherText, Nullable<System.DateTime> finalDeliveryDate, Nullable<System.DateTime> firstDeliveryDate, string attachedMaterialFileName, string attachedMaterialDownloadURL, string coordinatorNotes_en, string coordinatorNotes_jp, string coordinatorNotes_kr, string coordinatorNotes_cn, string coordinatorNotes_fr, string coordinatorNotes_tl, string remarks_en, string remarks_jp, string remarks_kr, string remarks_cn, string remarks_fr, string remarks_tl, Nullable<bool> isRemarksHideInPDF, Nullable<bool> isOrderReceived, Nullable<long> discountTotal, Nullable<long> averageUnitPrice, Nullable<long> actualUnitPrice, Nullable<bool> isDeleted, string purposeDetails, string orderTitle, Nullable<long> issuedByTranslator, Nullable<long> issuedByCompany, Nullable<decimal> priceCertification, string otherItemName_en, string otherItemName_jp, string otherItemName_kr, string otherItemName_cn, string otherItemName_fr, string otherItemName_tl, Nullable<decimal> otherItemUnitPrice, Nullable<int> otherItemNumber, Nullable<decimal> otherAmount, Nullable<decimal> taxEstimation, Nullable<decimal> quotationInclTax, Nullable<decimal> quotationExclTax, Nullable<decimal> consumptionOnTax, Nullable<decimal> excludedTaxCost, Nullable<bool> isCampaign, Nullable<bool> isSpecialPrice, Nullable<bool> isSpecialDeal, Nullable<decimal> subtotalAfterDiscount, Nullable<decimal> quotationTotalInclTax, Nullable<decimal> quotationTotalExclTax, Nullable<decimal> grandTotal, Nullable<bool> isPerformance, Nullable<bool> isPrice, Nullable<bool> isAccuracy, Nullable<bool> isLocal, Nullable<int> expensePriceInTax, Nullable<int> grossProfitRate, Nullable<int> totalPriceExTax, Nullable<int> grossProfit, Nullable<int> consumptionTax, Nullable<int> profit, Nullable<int> totalWithoutTax, Nullable<int> totalWithTax, Nullable<bool> isPromotion, Nullable<bool> isSpecialPayment, Nullable<bool> isPastComplaint, Nullable<bool> isExpertise, Nullable<bool> isOnGoingTask, Nullable<bool> isOverseas, Nullable<bool> isJapan, Nullable<bool> isContentAll, string quotationNotes_en, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<long> countryID, Nullable<bool> knownByIntroduction, string knownIntroductionText, Nullable<long> unitID, string statementType, Nullable<long> createdBy, Nullable<bool> isTemporaryRegistration)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var estimationNoParameter = estimationNo != null ?
                new ObjectParameter("EstimationNo", estimationNo) :
                new ObjectParameter("EstimationNo", typeof(string));
    
            var inquiryDateParameter = inquiryDate.HasValue ?
                new ObjectParameter("InquiryDate", inquiryDate) :
                new ObjectParameter("InquiryDate", typeof(System.DateTime));
    
            var registrationDateParameter = registrationDate.HasValue ?
                new ObjectParameter("RegistrationDate", registrationDate) :
                new ObjectParameter("RegistrationDate", typeof(System.DateTime));
    
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(long));
    
            var divisionIDParameter = divisionID.HasValue ?
                new ObjectParameter("DivisionID", divisionID) :
                new ObjectParameter("DivisionID", typeof(System.Guid));
    
            var estimationRouteIDParameter = estimationRouteID.HasValue ?
                new ObjectParameter("EstimationRouteID", estimationRouteID) :
                new ObjectParameter("EstimationRouteID", typeof(System.Guid));
    
            var outwardSalesIDParameter = outwardSalesID.HasValue ?
                new ObjectParameter("OutwardSalesID", outwardSalesID) :
                new ObjectParameter("OutwardSalesID", typeof(System.Guid));
    
            var largeSalesIDParameter = largeSalesID.HasValue ?
                new ObjectParameter("LargeSalesID", largeSalesID) :
                new ObjectParameter("LargeSalesID", typeof(System.Guid));
    
            var salesPersonIDParameter = salesPersonID.HasValue ?
                new ObjectParameter("SalesPersonID", salesPersonID) :
                new ObjectParameter("SalesPersonID", typeof(System.Guid));
    
            var assistantIDParameter = assistantID.HasValue ?
                new ObjectParameter("AssistantID", assistantID) :
                new ObjectParameter("AssistantID", typeof(System.Guid));
    
            var coordinatorIDParameter = coordinatorID.HasValue ?
                new ObjectParameter("CoordinatorID", coordinatorID) :
                new ObjectParameter("CoordinatorID", typeof(System.Guid));
    
            var approvalIDParameter = approvalID.HasValue ?
                new ObjectParameter("ApprovalID", approvalID) :
                new ObjectParameter("ApprovalID", typeof(System.Guid));
    
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(System.Guid));
    
            var clientDepartmentIDParameter = clientDepartmentID.HasValue ?
                new ObjectParameter("ClientDepartmentID", clientDepartmentID) :
                new ObjectParameter("ClientDepartmentID", typeof(System.Guid));
    
            var tradingIDParameter = tradingID.HasValue ?
                new ObjectParameter("TradingID", tradingID) :
                new ObjectParameter("TradingID", typeof(System.Guid));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(System.Guid));
    
            var teamIDParameter = teamID.HasValue ?
                new ObjectParameter("TeamID", teamID) :
                new ObjectParameter("TeamID", typeof(System.Guid));
    
            var isCompanyPrivateParameter = isCompanyPrivate.HasValue ?
                new ObjectParameter("IsCompanyPrivate", isCompanyPrivate) :
                new ObjectParameter("IsCompanyPrivate", typeof(bool));
    
            var clientStatusParameter = clientStatus.HasValue ?
                new ObjectParameter("ClientStatus", clientStatus) :
                new ObjectParameter("ClientStatus", typeof(int));
    
            var businessCategoryIDParameter = businessCategoryID.HasValue ?
                new ObjectParameter("BusinessCategoryID", businessCategoryID) :
                new ObjectParameter("BusinessCategoryID", typeof(System.Guid));
    
            var clientPersonInChargeParameter = clientPersonInCharge != null ?
                new ObjectParameter("ClientPersonInCharge", clientPersonInCharge) :
                new ObjectParameter("ClientPersonInCharge", typeof(string));
    
            var clientEmailCCParameter = clientEmailCC != null ?
                new ObjectParameter("ClientEmailCC", clientEmailCC) :
                new ObjectParameter("ClientEmailCC", typeof(string));
    
            var clientAddress_enParameter = clientAddress_en != null ?
                new ObjectParameter("ClientAddress_en", clientAddress_en) :
                new ObjectParameter("ClientAddress_en", typeof(string));
    
            var clientAddress_jpParameter = clientAddress_jp != null ?
                new ObjectParameter("ClientAddress_jp", clientAddress_jp) :
                new ObjectParameter("ClientAddress_jp", typeof(string));
    
            var clientAddress_krParameter = clientAddress_kr != null ?
                new ObjectParameter("ClientAddress_kr", clientAddress_kr) :
                new ObjectParameter("ClientAddress_kr", typeof(string));
    
            var clientAddress_cnParameter = clientAddress_cn != null ?
                new ObjectParameter("ClientAddress_cn", clientAddress_cn) :
                new ObjectParameter("ClientAddress_cn", typeof(string));
    
            var clientAddress_frParameter = clientAddress_fr != null ?
                new ObjectParameter("ClientAddress_fr", clientAddress_fr) :
                new ObjectParameter("ClientAddress_fr", typeof(string));
    
            var clientAddress_tlParameter = clientAddress_tl != null ?
                new ObjectParameter("ClientAddress_tl", clientAddress_tl) :
                new ObjectParameter("ClientAddress_tl", typeof(string));
    
            var clientContactNoParameter = clientContactNo != null ?
                new ObjectParameter("ClientContactNo", clientContactNo) :
                new ObjectParameter("ClientContactNo", typeof(string));
    
            var clientFaxParameter = clientFax != null ?
                new ObjectParameter("ClientFax", clientFax) :
                new ObjectParameter("ClientFax", typeof(string));
    
            var subSpecializedFieldIDParameter = subSpecializedFieldID.HasValue ?
                new ObjectParameter("SubSpecializedFieldID", subSpecializedFieldID) :
                new ObjectParameter("SubSpecializedFieldID", typeof(System.Guid));
    
            var billingCompanyName_enParameter = billingCompanyName_en != null ?
                new ObjectParameter("BillingCompanyName_en", billingCompanyName_en) :
                new ObjectParameter("BillingCompanyName_en", typeof(string));
    
            var billingCompanyName_jpParameter = billingCompanyName_jp != null ?
                new ObjectParameter("BillingCompanyName_jp", billingCompanyName_jp) :
                new ObjectParameter("BillingCompanyName_jp", typeof(string));
    
            var billingCompanyName_krParameter = billingCompanyName_kr != null ?
                new ObjectParameter("BillingCompanyName_kr", billingCompanyName_kr) :
                new ObjectParameter("BillingCompanyName_kr", typeof(string));
    
            var billingCompanyName_cnParameter = billingCompanyName_cn != null ?
                new ObjectParameter("BillingCompanyName_cn", billingCompanyName_cn) :
                new ObjectParameter("BillingCompanyName_cn", typeof(string));
    
            var billingCompanyName_frParameter = billingCompanyName_fr != null ?
                new ObjectParameter("BillingCompanyName_fr", billingCompanyName_fr) :
                new ObjectParameter("BillingCompanyName_fr", typeof(string));
    
            var billingCompanyName_tlParameter = billingCompanyName_tl != null ?
                new ObjectParameter("BillingCompanyName_tl", billingCompanyName_tl) :
                new ObjectParameter("BillingCompanyName_tl", typeof(string));
    
            var billingToParameter = billingTo != null ?
                new ObjectParameter("BillingTo", billingTo) :
                new ObjectParameter("BillingTo", typeof(string));
    
            var billingEmailCCParameter = billingEmailCC != null ?
                new ObjectParameter("BillingEmailCC", billingEmailCC) :
                new ObjectParameter("BillingEmailCC", typeof(string));
    
            var billingAddress_enParameter = billingAddress_en != null ?
                new ObjectParameter("BillingAddress_en", billingAddress_en) :
                new ObjectParameter("BillingAddress_en", typeof(string));
    
            var billingAddress_jpParameter = billingAddress_jp != null ?
                new ObjectParameter("BillingAddress_jp", billingAddress_jp) :
                new ObjectParameter("BillingAddress_jp", typeof(string));
    
            var billingAddress_krParameter = billingAddress_kr != null ?
                new ObjectParameter("BillingAddress_kr", billingAddress_kr) :
                new ObjectParameter("BillingAddress_kr", typeof(string));
    
            var billingAddress_cnParameter = billingAddress_cn != null ?
                new ObjectParameter("BillingAddress_cn", billingAddress_cn) :
                new ObjectParameter("BillingAddress_cn", typeof(string));
    
            var billingAddress_frParameter = billingAddress_fr != null ?
                new ObjectParameter("BillingAddress_fr", billingAddress_fr) :
                new ObjectParameter("BillingAddress_fr", typeof(string));
    
            var billingAddress_tlParameter = billingAddress_tl != null ?
                new ObjectParameter("BillingAddress_tl", billingAddress_tl) :
                new ObjectParameter("BillingAddress_tl", typeof(string));
    
            var billingContactNoParameter = billingContactNo != null ?
                new ObjectParameter("BillingContactNo", billingContactNo) :
                new ObjectParameter("BillingContactNo", typeof(string));
    
            var billingFaxParameter = billingFax != null ?
                new ObjectParameter("BillingFax", billingFax) :
                new ObjectParameter("BillingFax", typeof(string));
    
            var isPostingBillParameter = isPostingBill.HasValue ?
                new ObjectParameter("IsPostingBill", isPostingBill) :
                new ObjectParameter("IsPostingBill", typeof(bool));
    
            var paymentTermsParameter = paymentTerms != null ?
                new ObjectParameter("PaymentTerms", paymentTerms) :
                new ObjectParameter("PaymentTerms", typeof(string));
    
            var deliveryCompanyName_enParameter = deliveryCompanyName_en != null ?
                new ObjectParameter("DeliveryCompanyName_en", deliveryCompanyName_en) :
                new ObjectParameter("DeliveryCompanyName_en", typeof(string));
    
            var deliveryCompanyName_jpParameter = deliveryCompanyName_jp != null ?
                new ObjectParameter("DeliveryCompanyName_jp", deliveryCompanyName_jp) :
                new ObjectParameter("DeliveryCompanyName_jp", typeof(string));
    
            var deliveryCompanyName_krParameter = deliveryCompanyName_kr != null ?
                new ObjectParameter("DeliveryCompanyName_kr", deliveryCompanyName_kr) :
                new ObjectParameter("DeliveryCompanyName_kr", typeof(string));
    
            var deliveryCompanyName_cnParameter = deliveryCompanyName_cn != null ?
                new ObjectParameter("DeliveryCompanyName_cn", deliveryCompanyName_cn) :
                new ObjectParameter("DeliveryCompanyName_cn", typeof(string));
    
            var deliveryCompanyName_frParameter = deliveryCompanyName_fr != null ?
                new ObjectParameter("DeliveryCompanyName_fr", deliveryCompanyName_fr) :
                new ObjectParameter("DeliveryCompanyName_fr", typeof(string));
    
            var deliveryCompanyName_tlParameter = deliveryCompanyName_tl != null ?
                new ObjectParameter("DeliveryCompanyName_tl", deliveryCompanyName_tl) :
                new ObjectParameter("DeliveryCompanyName_tl", typeof(string));
    
            var deliveryToParameter = deliveryTo != null ?
                new ObjectParameter("DeliveryTo", deliveryTo) :
                new ObjectParameter("DeliveryTo", typeof(string));
    
            var deliveryEmailCCParameter = deliveryEmailCC != null ?
                new ObjectParameter("DeliveryEmailCC", deliveryEmailCC) :
                new ObjectParameter("DeliveryEmailCC", typeof(string));
    
            var deliveryAddress_enParameter = deliveryAddress_en != null ?
                new ObjectParameter("DeliveryAddress_en", deliveryAddress_en) :
                new ObjectParameter("DeliveryAddress_en", typeof(string));
    
            var deliveryAddress_jpParameter = deliveryAddress_jp != null ?
                new ObjectParameter("DeliveryAddress_jp", deliveryAddress_jp) :
                new ObjectParameter("DeliveryAddress_jp", typeof(string));
    
            var deliveryAddress_krParameter = deliveryAddress_kr != null ?
                new ObjectParameter("DeliveryAddress_kr", deliveryAddress_kr) :
                new ObjectParameter("DeliveryAddress_kr", typeof(string));
    
            var deliveryAddress_cnParameter = deliveryAddress_cn != null ?
                new ObjectParameter("DeliveryAddress_cn", deliveryAddress_cn) :
                new ObjectParameter("DeliveryAddress_cn", typeof(string));
    
            var deliveryAddress_frParameter = deliveryAddress_fr != null ?
                new ObjectParameter("DeliveryAddress_fr", deliveryAddress_fr) :
                new ObjectParameter("DeliveryAddress_fr", typeof(string));
    
            var deliveryAddress_tlParameter = deliveryAddress_tl != null ?
                new ObjectParameter("DeliveryAddress_tl", deliveryAddress_tl) :
                new ObjectParameter("DeliveryAddress_tl", typeof(string));
    
            var deliveryContactNoParameter = deliveryContactNo != null ?
                new ObjectParameter("DeliveryContactNo", deliveryContactNo) :
                new ObjectParameter("DeliveryContactNo", typeof(string));
    
            var deliveryFaxParameter = deliveryFax != null ?
                new ObjectParameter("DeliveryFax", deliveryFax) :
                new ObjectParameter("DeliveryFax", typeof(string));
    
            var deliveryInstructionParameter = deliveryInstruction != null ?
                new ObjectParameter("DeliveryInstruction", deliveryInstruction) :
                new ObjectParameter("DeliveryInstruction", typeof(string));
    
            var remarksCoordinatorTypeParameter = remarksCoordinatorType != null ?
                new ObjectParameter("RemarksCoordinatorType", remarksCoordinatorType) :
                new ObjectParameter("RemarksCoordinatorType", typeof(string));
    
            var currencyIDParameter = currencyID.HasValue ?
                new ObjectParameter("CurrencyID", currencyID) :
                new ObjectParameter("CurrencyID", typeof(long));
    
            var isProspectParameter = isProspect.HasValue ?
                new ObjectParameter("IsProspect", isProspect) :
                new ObjectParameter("IsProspect", typeof(bool));
    
            var isUndisclosedParameter = isUndisclosed.HasValue ?
                new ObjectParameter("IsUndisclosed", isUndisclosed) :
                new ObjectParameter("IsUndisclosed", typeof(bool));
    
            var estimationTypeParameter = estimationType.HasValue ?
                new ObjectParameter("EstimationType", estimationType) :
                new ObjectParameter("EstimationType", typeof(int));
    
            var specializedFieldIDParameter = specializedFieldID.HasValue ?
                new ObjectParameter("SpecializedFieldID", specializedFieldID) :
                new ObjectParameter("SpecializedFieldID", typeof(System.Guid));
    
            var isInternalPurposeParameter = isInternalPurpose.HasValue ?
                new ObjectParameter("IsInternalPurpose", isInternalPurpose) :
                new ObjectParameter("IsInternalPurpose", typeof(bool));
    
            var isExternalPurposeParameter = isExternalPurpose.HasValue ?
                new ObjectParameter("IsExternalPurpose", isExternalPurpose) :
                new ObjectParameter("IsExternalPurpose", typeof(bool));
    
            var isPrintPurposeParameter = isPrintPurpose.HasValue ?
                new ObjectParameter("IsPrintPurpose", isPrintPurpose) :
                new ObjectParameter("IsPrintPurpose", typeof(bool));
    
            var isWebPurposeParameter = isWebPurpose.HasValue ?
                new ObjectParameter("IsWebPurpose", isWebPurpose) :
                new ObjectParameter("IsWebPurpose", typeof(bool));
    
            var isOtherPurposeParameter = isOtherPurpose.HasValue ?
                new ObjectParameter("IsOtherPurpose", isOtherPurpose) :
                new ObjectParameter("IsOtherPurpose", typeof(bool));
    
            var otherPurposeTextParameter = otherPurposeText != null ?
                new ObjectParameter("OtherPurposeText", otherPurposeText) :
                new ObjectParameter("OtherPurposeText", typeof(string));
    
            var priorityQualityParameter = priorityQuality.HasValue ?
                new ObjectParameter("PriorityQuality", priorityQuality) :
                new ObjectParameter("PriorityQuality", typeof(bool));
    
            var priorityPriceParameter = priorityPrice.HasValue ?
                new ObjectParameter("PriorityPrice", priorityPrice) :
                new ObjectParameter("PriorityPrice", typeof(bool));
    
            var priorityDeliveryParameter = priorityDelivery.HasValue ?
                new ObjectParameter("PriorityDelivery", priorityDelivery) :
                new ObjectParameter("PriorityDelivery", typeof(bool));
    
            var priorityTenderParameter = priorityTender.HasValue ?
                new ObjectParameter("PriorityTender", priorityTender) :
                new ObjectParameter("PriorityTender", typeof(bool));
    
            var knownByGoogleParameter = knownByGoogle.HasValue ?
                new ObjectParameter("KnownByGoogle", knownByGoogle) :
                new ObjectParameter("KnownByGoogle", typeof(bool));
    
            var knownByYahooParameter = knownByYahoo.HasValue ?
                new ObjectParameter("KnownByYahoo", knownByYahoo) :
                new ObjectParameter("KnownByYahoo", typeof(bool));
    
            var knownByEmailParameter = knownByEmail.HasValue ?
                new ObjectParameter("KnownByEmail", knownByEmail) :
                new ObjectParameter("KnownByEmail", typeof(bool));
    
            var knownByBingParameter = knownByBing.HasValue ?
                new ObjectParameter("KnownByBing", knownByBing) :
                new ObjectParameter("KnownByBing", typeof(bool));
    
            var knownByOthersParameter = knownByOthers.HasValue ?
                new ObjectParameter("KnownByOthers", knownByOthers) :
                new ObjectParameter("KnownByOthers", typeof(bool));
    
            var knownOtherTextParameter = knownOtherText != null ?
                new ObjectParameter("KnownOtherText", knownOtherText) :
                new ObjectParameter("KnownOtherText", typeof(string));
    
            var finalDeliveryDateParameter = finalDeliveryDate.HasValue ?
                new ObjectParameter("FinalDeliveryDate", finalDeliveryDate) :
                new ObjectParameter("FinalDeliveryDate", typeof(System.DateTime));
    
            var firstDeliveryDateParameter = firstDeliveryDate.HasValue ?
                new ObjectParameter("FirstDeliveryDate", firstDeliveryDate) :
                new ObjectParameter("FirstDeliveryDate", typeof(System.DateTime));
    
            var attachedMaterialFileNameParameter = attachedMaterialFileName != null ?
                new ObjectParameter("AttachedMaterialFileName", attachedMaterialFileName) :
                new ObjectParameter("AttachedMaterialFileName", typeof(string));
    
            var attachedMaterialDownloadURLParameter = attachedMaterialDownloadURL != null ?
                new ObjectParameter("AttachedMaterialDownloadURL", attachedMaterialDownloadURL) :
                new ObjectParameter("AttachedMaterialDownloadURL", typeof(string));
    
            var coordinatorNotes_enParameter = coordinatorNotes_en != null ?
                new ObjectParameter("CoordinatorNotes_en", coordinatorNotes_en) :
                new ObjectParameter("CoordinatorNotes_en", typeof(string));
    
            var coordinatorNotes_jpParameter = coordinatorNotes_jp != null ?
                new ObjectParameter("CoordinatorNotes_jp", coordinatorNotes_jp) :
                new ObjectParameter("CoordinatorNotes_jp", typeof(string));
    
            var coordinatorNotes_krParameter = coordinatorNotes_kr != null ?
                new ObjectParameter("CoordinatorNotes_kr", coordinatorNotes_kr) :
                new ObjectParameter("CoordinatorNotes_kr", typeof(string));
    
            var coordinatorNotes_cnParameter = coordinatorNotes_cn != null ?
                new ObjectParameter("CoordinatorNotes_cn", coordinatorNotes_cn) :
                new ObjectParameter("CoordinatorNotes_cn", typeof(string));
    
            var coordinatorNotes_frParameter = coordinatorNotes_fr != null ?
                new ObjectParameter("CoordinatorNotes_fr", coordinatorNotes_fr) :
                new ObjectParameter("CoordinatorNotes_fr", typeof(string));
    
            var coordinatorNotes_tlParameter = coordinatorNotes_tl != null ?
                new ObjectParameter("CoordinatorNotes_tl", coordinatorNotes_tl) :
                new ObjectParameter("CoordinatorNotes_tl", typeof(string));
    
            var remarks_enParameter = remarks_en != null ?
                new ObjectParameter("Remarks_en", remarks_en) :
                new ObjectParameter("Remarks_en", typeof(string));
    
            var remarks_jpParameter = remarks_jp != null ?
                new ObjectParameter("Remarks_jp", remarks_jp) :
                new ObjectParameter("Remarks_jp", typeof(string));
    
            var remarks_krParameter = remarks_kr != null ?
                new ObjectParameter("Remarks_kr", remarks_kr) :
                new ObjectParameter("Remarks_kr", typeof(string));
    
            var remarks_cnParameter = remarks_cn != null ?
                new ObjectParameter("Remarks_cn", remarks_cn) :
                new ObjectParameter("Remarks_cn", typeof(string));
    
            var remarks_frParameter = remarks_fr != null ?
                new ObjectParameter("Remarks_fr", remarks_fr) :
                new ObjectParameter("Remarks_fr", typeof(string));
    
            var remarks_tlParameter = remarks_tl != null ?
                new ObjectParameter("Remarks_tl", remarks_tl) :
                new ObjectParameter("Remarks_tl", typeof(string));
    
            var isRemarksHideInPDFParameter = isRemarksHideInPDF.HasValue ?
                new ObjectParameter("IsRemarksHideInPDF", isRemarksHideInPDF) :
                new ObjectParameter("IsRemarksHideInPDF", typeof(bool));
    
            var isOrderReceivedParameter = isOrderReceived.HasValue ?
                new ObjectParameter("IsOrderReceived", isOrderReceived) :
                new ObjectParameter("IsOrderReceived", typeof(bool));
    
            var discountTotalParameter = discountTotal.HasValue ?
                new ObjectParameter("DiscountTotal", discountTotal) :
                new ObjectParameter("DiscountTotal", typeof(long));
    
            var averageUnitPriceParameter = averageUnitPrice.HasValue ?
                new ObjectParameter("AverageUnitPrice", averageUnitPrice) :
                new ObjectParameter("AverageUnitPrice", typeof(long));
    
            var actualUnitPriceParameter = actualUnitPrice.HasValue ?
                new ObjectParameter("ActualUnitPrice", actualUnitPrice) :
                new ObjectParameter("ActualUnitPrice", typeof(long));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var purposeDetailsParameter = purposeDetails != null ?
                new ObjectParameter("PurposeDetails", purposeDetails) :
                new ObjectParameter("PurposeDetails", typeof(string));
    
            var orderTitleParameter = orderTitle != null ?
                new ObjectParameter("OrderTitle", orderTitle) :
                new ObjectParameter("OrderTitle", typeof(string));
    
            var issuedByTranslatorParameter = issuedByTranslator.HasValue ?
                new ObjectParameter("IssuedByTranslator", issuedByTranslator) :
                new ObjectParameter("IssuedByTranslator", typeof(long));
    
            var issuedByCompanyParameter = issuedByCompany.HasValue ?
                new ObjectParameter("IssuedByCompany", issuedByCompany) :
                new ObjectParameter("IssuedByCompany", typeof(long));
    
            var priceCertificationParameter = priceCertification.HasValue ?
                new ObjectParameter("PriceCertification", priceCertification) :
                new ObjectParameter("PriceCertification", typeof(decimal));
    
            var otherItemName_enParameter = otherItemName_en != null ?
                new ObjectParameter("OtherItemName_en", otherItemName_en) :
                new ObjectParameter("OtherItemName_en", typeof(string));
    
            var otherItemName_jpParameter = otherItemName_jp != null ?
                new ObjectParameter("OtherItemName_jp", otherItemName_jp) :
                new ObjectParameter("OtherItemName_jp", typeof(string));
    
            var otherItemName_krParameter = otherItemName_kr != null ?
                new ObjectParameter("OtherItemName_kr", otherItemName_kr) :
                new ObjectParameter("OtherItemName_kr", typeof(string));
    
            var otherItemName_cnParameter = otherItemName_cn != null ?
                new ObjectParameter("OtherItemName_cn", otherItemName_cn) :
                new ObjectParameter("OtherItemName_cn", typeof(string));
    
            var otherItemName_frParameter = otherItemName_fr != null ?
                new ObjectParameter("OtherItemName_fr", otherItemName_fr) :
                new ObjectParameter("OtherItemName_fr", typeof(string));
    
            var otherItemName_tlParameter = otherItemName_tl != null ?
                new ObjectParameter("OtherItemName_tl", otherItemName_tl) :
                new ObjectParameter("OtherItemName_tl", typeof(string));
    
            var otherItemUnitPriceParameter = otherItemUnitPrice.HasValue ?
                new ObjectParameter("OtherItemUnitPrice", otherItemUnitPrice) :
                new ObjectParameter("OtherItemUnitPrice", typeof(decimal));
    
            var otherItemNumberParameter = otherItemNumber.HasValue ?
                new ObjectParameter("OtherItemNumber", otherItemNumber) :
                new ObjectParameter("OtherItemNumber", typeof(int));
    
            var otherAmountParameter = otherAmount.HasValue ?
                new ObjectParameter("OtherAmount", otherAmount) :
                new ObjectParameter("OtherAmount", typeof(decimal));
    
            var taxEstimationParameter = taxEstimation.HasValue ?
                new ObjectParameter("TaxEstimation", taxEstimation) :
                new ObjectParameter("TaxEstimation", typeof(decimal));
    
            var quotationInclTaxParameter = quotationInclTax.HasValue ?
                new ObjectParameter("QuotationInclTax", quotationInclTax) :
                new ObjectParameter("QuotationInclTax", typeof(decimal));
    
            var quotationExclTaxParameter = quotationExclTax.HasValue ?
                new ObjectParameter("QuotationExclTax", quotationExclTax) :
                new ObjectParameter("QuotationExclTax", typeof(decimal));
    
            var consumptionOnTaxParameter = consumptionOnTax.HasValue ?
                new ObjectParameter("ConsumptionOnTax", consumptionOnTax) :
                new ObjectParameter("ConsumptionOnTax", typeof(decimal));
    
            var excludedTaxCostParameter = excludedTaxCost.HasValue ?
                new ObjectParameter("ExcludedTaxCost", excludedTaxCost) :
                new ObjectParameter("ExcludedTaxCost", typeof(decimal));
    
            var isCampaignParameter = isCampaign.HasValue ?
                new ObjectParameter("IsCampaign", isCampaign) :
                new ObjectParameter("IsCampaign", typeof(bool));
    
            var isSpecialPriceParameter = isSpecialPrice.HasValue ?
                new ObjectParameter("IsSpecialPrice", isSpecialPrice) :
                new ObjectParameter("IsSpecialPrice", typeof(bool));
    
            var isSpecialDealParameter = isSpecialDeal.HasValue ?
                new ObjectParameter("IsSpecialDeal", isSpecialDeal) :
                new ObjectParameter("IsSpecialDeal", typeof(bool));
    
            var subtotalAfterDiscountParameter = subtotalAfterDiscount.HasValue ?
                new ObjectParameter("SubtotalAfterDiscount", subtotalAfterDiscount) :
                new ObjectParameter("SubtotalAfterDiscount", typeof(decimal));
    
            var quotationTotalInclTaxParameter = quotationTotalInclTax.HasValue ?
                new ObjectParameter("QuotationTotalInclTax", quotationTotalInclTax) :
                new ObjectParameter("QuotationTotalInclTax", typeof(decimal));
    
            var quotationTotalExclTaxParameter = quotationTotalExclTax.HasValue ?
                new ObjectParameter("QuotationTotalExclTax", quotationTotalExclTax) :
                new ObjectParameter("QuotationTotalExclTax", typeof(decimal));
    
            var grandTotalParameter = grandTotal.HasValue ?
                new ObjectParameter("GrandTotal", grandTotal) :
                new ObjectParameter("GrandTotal", typeof(decimal));
    
            var isPerformanceParameter = isPerformance.HasValue ?
                new ObjectParameter("IsPerformance", isPerformance) :
                new ObjectParameter("IsPerformance", typeof(bool));
    
            var isPriceParameter = isPrice.HasValue ?
                new ObjectParameter("IsPrice", isPrice) :
                new ObjectParameter("IsPrice", typeof(bool));
    
            var isAccuracyParameter = isAccuracy.HasValue ?
                new ObjectParameter("IsAccuracy", isAccuracy) :
                new ObjectParameter("IsAccuracy", typeof(bool));
    
            var isLocalParameter = isLocal.HasValue ?
                new ObjectParameter("IsLocal", isLocal) :
                new ObjectParameter("IsLocal", typeof(bool));
    
            var expensePriceInTaxParameter = expensePriceInTax.HasValue ?
                new ObjectParameter("ExpensePriceInTax", expensePriceInTax) :
                new ObjectParameter("ExpensePriceInTax", typeof(int));
    
            var grossProfitRateParameter = grossProfitRate.HasValue ?
                new ObjectParameter("GrossProfitRate", grossProfitRate) :
                new ObjectParameter("GrossProfitRate", typeof(int));
    
            var totalPriceExTaxParameter = totalPriceExTax.HasValue ?
                new ObjectParameter("TotalPriceExTax", totalPriceExTax) :
                new ObjectParameter("TotalPriceExTax", typeof(int));
    
            var grossProfitParameter = grossProfit.HasValue ?
                new ObjectParameter("GrossProfit", grossProfit) :
                new ObjectParameter("GrossProfit", typeof(int));
    
            var consumptionTaxParameter = consumptionTax.HasValue ?
                new ObjectParameter("ConsumptionTax", consumptionTax) :
                new ObjectParameter("ConsumptionTax", typeof(int));
    
            var profitParameter = profit.HasValue ?
                new ObjectParameter("Profit", profit) :
                new ObjectParameter("Profit", typeof(int));
    
            var totalWithoutTaxParameter = totalWithoutTax.HasValue ?
                new ObjectParameter("TotalWithoutTax", totalWithoutTax) :
                new ObjectParameter("TotalWithoutTax", typeof(int));
    
            var totalWithTaxParameter = totalWithTax.HasValue ?
                new ObjectParameter("TotalWithTax", totalWithTax) :
                new ObjectParameter("TotalWithTax", typeof(int));
    
            var isPromotionParameter = isPromotion.HasValue ?
                new ObjectParameter("IsPromotion", isPromotion) :
                new ObjectParameter("IsPromotion", typeof(bool));
    
            var isSpecialPaymentParameter = isSpecialPayment.HasValue ?
                new ObjectParameter("IsSpecialPayment", isSpecialPayment) :
                new ObjectParameter("IsSpecialPayment", typeof(bool));
    
            var isPastComplaintParameter = isPastComplaint.HasValue ?
                new ObjectParameter("IsPastComplaint", isPastComplaint) :
                new ObjectParameter("IsPastComplaint", typeof(bool));
    
            var isExpertiseParameter = isExpertise.HasValue ?
                new ObjectParameter("IsExpertise", isExpertise) :
                new ObjectParameter("IsExpertise", typeof(bool));
    
            var isOnGoingTaskParameter = isOnGoingTask.HasValue ?
                new ObjectParameter("IsOnGoingTask", isOnGoingTask) :
                new ObjectParameter("IsOnGoingTask", typeof(bool));
    
            var isOverseasParameter = isOverseas.HasValue ?
                new ObjectParameter("IsOverseas", isOverseas) :
                new ObjectParameter("IsOverseas", typeof(bool));
    
            var isJapanParameter = isJapan.HasValue ?
                new ObjectParameter("IsJapan", isJapan) :
                new ObjectParameter("IsJapan", typeof(bool));
    
            var isContentAllParameter = isContentAll.HasValue ?
                new ObjectParameter("IsContentAll", isContentAll) :
                new ObjectParameter("IsContentAll", typeof(bool));
    
            var quotationNotes_enParameter = quotationNotes_en != null ?
                new ObjectParameter("QuotationNotes_en", quotationNotes_en) :
                new ObjectParameter("QuotationNotes_en", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(long));
    
            var knownByIntroductionParameter = knownByIntroduction.HasValue ?
                new ObjectParameter("KnownByIntroduction", knownByIntroduction) :
                new ObjectParameter("KnownByIntroduction", typeof(bool));
    
            var knownIntroductionTextParameter = knownIntroductionText != null ?
                new ObjectParameter("KnownIntroductionText", knownIntroductionText) :
                new ObjectParameter("KnownIntroductionText", typeof(string));
    
            var unitIDParameter = unitID.HasValue ?
                new ObjectParameter("UnitID", unitID) :
                new ObjectParameter("UnitID", typeof(long));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var isTemporaryRegistrationParameter = isTemporaryRegistration.HasValue ?
                new ObjectParameter("IsTemporaryRegistration", isTemporaryRegistration) :
                new ObjectParameter("IsTemporaryRegistration", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SaveEstimation", iDParameter, estimationNoParameter, inquiryDateParameter, registrationDateParameter, applicationIDParameter, divisionIDParameter, estimationRouteIDParameter, outwardSalesIDParameter, largeSalesIDParameter, salesPersonIDParameter, assistantIDParameter, coordinatorIDParameter, approvalIDParameter, clientIDParameter, clientDepartmentIDParameter, tradingIDParameter, projectIDParameter, teamIDParameter, isCompanyPrivateParameter, clientStatusParameter, businessCategoryIDParameter, clientPersonInChargeParameter, clientEmailCCParameter, clientAddress_enParameter, clientAddress_jpParameter, clientAddress_krParameter, clientAddress_cnParameter, clientAddress_frParameter, clientAddress_tlParameter, clientContactNoParameter, clientFaxParameter, subSpecializedFieldIDParameter, billingCompanyName_enParameter, billingCompanyName_jpParameter, billingCompanyName_krParameter, billingCompanyName_cnParameter, billingCompanyName_frParameter, billingCompanyName_tlParameter, billingToParameter, billingEmailCCParameter, billingAddress_enParameter, billingAddress_jpParameter, billingAddress_krParameter, billingAddress_cnParameter, billingAddress_frParameter, billingAddress_tlParameter, billingContactNoParameter, billingFaxParameter, isPostingBillParameter, paymentTermsParameter, deliveryCompanyName_enParameter, deliveryCompanyName_jpParameter, deliveryCompanyName_krParameter, deliveryCompanyName_cnParameter, deliveryCompanyName_frParameter, deliveryCompanyName_tlParameter, deliveryToParameter, deliveryEmailCCParameter, deliveryAddress_enParameter, deliveryAddress_jpParameter, deliveryAddress_krParameter, deliveryAddress_cnParameter, deliveryAddress_frParameter, deliveryAddress_tlParameter, deliveryContactNoParameter, deliveryFaxParameter, deliveryInstructionParameter, remarksCoordinatorTypeParameter, currencyIDParameter, isProspectParameter, isUndisclosedParameter, estimationTypeParameter, specializedFieldIDParameter, isInternalPurposeParameter, isExternalPurposeParameter, isPrintPurposeParameter, isWebPurposeParameter, isOtherPurposeParameter, otherPurposeTextParameter, priorityQualityParameter, priorityPriceParameter, priorityDeliveryParameter, priorityTenderParameter, knownByGoogleParameter, knownByYahooParameter, knownByEmailParameter, knownByBingParameter, knownByOthersParameter, knownOtherTextParameter, finalDeliveryDateParameter, firstDeliveryDateParameter, attachedMaterialFileNameParameter, attachedMaterialDownloadURLParameter, coordinatorNotes_enParameter, coordinatorNotes_jpParameter, coordinatorNotes_krParameter, coordinatorNotes_cnParameter, coordinatorNotes_frParameter, coordinatorNotes_tlParameter, remarks_enParameter, remarks_jpParameter, remarks_krParameter, remarks_cnParameter, remarks_frParameter, remarks_tlParameter, isRemarksHideInPDFParameter, isOrderReceivedParameter, discountTotalParameter, averageUnitPriceParameter, actualUnitPriceParameter, isDeletedParameter, purposeDetailsParameter, orderTitleParameter, issuedByTranslatorParameter, issuedByCompanyParameter, priceCertificationParameter, otherItemName_enParameter, otherItemName_jpParameter, otherItemName_krParameter, otherItemName_cnParameter, otherItemName_frParameter, otherItemName_tlParameter, otherItemUnitPriceParameter, otherItemNumberParameter, otherAmountParameter, taxEstimationParameter, quotationInclTaxParameter, quotationExclTaxParameter, consumptionOnTaxParameter, excludedTaxCostParameter, isCampaignParameter, isSpecialPriceParameter, isSpecialDealParameter, subtotalAfterDiscountParameter, quotationTotalInclTaxParameter, quotationTotalExclTaxParameter, grandTotalParameter, isPerformanceParameter, isPriceParameter, isAccuracyParameter, isLocalParameter, expensePriceInTaxParameter, grossProfitRateParameter, totalPriceExTaxParameter, grossProfitParameter, consumptionTaxParameter, profitParameter, totalWithoutTaxParameter, totalWithTaxParameter, isPromotionParameter, isSpecialPaymentParameter, isPastComplaintParameter, isExpertiseParameter, isOnGoingTaskParameter, isOverseasParameter, isJapanParameter, isContentAllParameter, quotationNotes_enParameter, startDateParameter, endDateParameter, countryIDParameter, knownByIntroductionParameter, knownIntroductionTextParameter, unitIDParameter, statementTypeParameter, createdByParameter, isTemporaryRegistrationParameter);
        }
    
        public virtual int SP_SaveEstimationActions(Nullable<System.Guid> iD, Nullable<System.Guid> estimationID, Nullable<System.DateTime> nextActionDate, string actionDetails_en, string actionDetails_jp, string actionDetails_kr, string actionDetails_cn, string actionDetails_fr, string actionDetails_tl, Nullable<int> actionType, Nullable<long> operationBy, Nullable<System.DateTime> operationDate, string statementType)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var estimationIDParameter = estimationID.HasValue ?
                new ObjectParameter("EstimationID", estimationID) :
                new ObjectParameter("EstimationID", typeof(System.Guid));
    
            var nextActionDateParameter = nextActionDate.HasValue ?
                new ObjectParameter("NextActionDate", nextActionDate) :
                new ObjectParameter("NextActionDate", typeof(System.DateTime));
    
            var actionDetails_enParameter = actionDetails_en != null ?
                new ObjectParameter("ActionDetails_en", actionDetails_en) :
                new ObjectParameter("ActionDetails_en", typeof(string));
    
            var actionDetails_jpParameter = actionDetails_jp != null ?
                new ObjectParameter("ActionDetails_jp", actionDetails_jp) :
                new ObjectParameter("ActionDetails_jp", typeof(string));
    
            var actionDetails_krParameter = actionDetails_kr != null ?
                new ObjectParameter("ActionDetails_kr", actionDetails_kr) :
                new ObjectParameter("ActionDetails_kr", typeof(string));
    
            var actionDetails_cnParameter = actionDetails_cn != null ?
                new ObjectParameter("ActionDetails_cn", actionDetails_cn) :
                new ObjectParameter("ActionDetails_cn", typeof(string));
    
            var actionDetails_frParameter = actionDetails_fr != null ?
                new ObjectParameter("ActionDetails_fr", actionDetails_fr) :
                new ObjectParameter("ActionDetails_fr", typeof(string));
    
            var actionDetails_tlParameter = actionDetails_tl != null ?
                new ObjectParameter("ActionDetails_tl", actionDetails_tl) :
                new ObjectParameter("ActionDetails_tl", typeof(string));
    
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(int));
    
            var operationByParameter = operationBy.HasValue ?
                new ObjectParameter("OperationBy", operationBy) :
                new ObjectParameter("OperationBy", typeof(long));
    
            var operationDateParameter = operationDate.HasValue ?
                new ObjectParameter("OperationDate", operationDate) :
                new ObjectParameter("OperationDate", typeof(System.DateTime));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SaveEstimationActions", iDParameter, estimationIDParameter, nextActionDateParameter, actionDetails_enParameter, actionDetails_jpParameter, actionDetails_krParameter, actionDetails_cnParameter, actionDetails_frParameter, actionDetails_tlParameter, actionTypeParameter, operationByParameter, operationDateParameter, statementTypeParameter);
        }
    
        public virtual int SP_SaveEstimationDetails(Nullable<System.Guid> iD, Nullable<System.Guid> estimationID, Nullable<System.Guid> sourceLanguageID, Nullable<System.Guid> targetLanguageID, Nullable<System.Guid> serviceType, Nullable<long> deliveryPlanID, Nullable<decimal> unitPrice1, Nullable<int> pageCount1, Nullable<decimal> discount1, Nullable<decimal> unitPrice2, Nullable<int> pageCount2, Nullable<decimal> discount2, Nullable<decimal> unitPrice3, Nullable<int> pageCount3, Nullable<decimal> discount3, Nullable<decimal> unitPrice4, Nullable<int> pageCount4, Nullable<decimal> discount4, Nullable<decimal> unitPrice5, Nullable<int> pageCount5, Nullable<decimal> discount5, Nullable<decimal> basicTime, Nullable<decimal> additionalBasicAmount, Nullable<decimal> additionalTime, Nullable<decimal> extensionTime, Nullable<int> extraTime, Nullable<decimal> lateNightTime, Nullable<decimal> transferTime, Nullable<decimal> basicAmount, Nullable<decimal> extensionAmount, Nullable<decimal> extraAmount, Nullable<decimal> lateAtNightAmount, Nullable<decimal> transferAmount, Nullable<int> numberOfDays, Nullable<int> numberOfPeople, Nullable<decimal> otherAmount, Nullable<decimal> certificateAmount, Nullable<bool> excludeTax, string contents, Nullable<decimal> lengthMinute, Nullable<bool> withTranslation, Nullable<decimal> unitPriceTime, Nullable<decimal> unitPriceSubTotal, Nullable<decimal> discountRate, Nullable<decimal> discountedPrice, Nullable<decimal> estimationPrice, Nullable<decimal> studioPrice, Nullable<decimal> studioPriceTime, Nullable<decimal> editPrice, Nullable<decimal> editPriceTime, Nullable<decimal> studioPriceSubTotal, Nullable<decimal> studioPriceDiscountRate, Nullable<decimal> studioDiscountedPrice, Nullable<decimal> totalAfterDiscount, Nullable<decimal> total, Nullable<decimal> paymentRate, Nullable<decimal> expectedPayment, Nullable<System.DateTime> startDate, Nullable<System.DateTime> completionDate, string startTime, string finishTime, Nullable<bool> isOverseas, string statementType)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var estimationIDParameter = estimationID.HasValue ?
                new ObjectParameter("EstimationID", estimationID) :
                new ObjectParameter("EstimationID", typeof(System.Guid));
    
            var sourceLanguageIDParameter = sourceLanguageID.HasValue ?
                new ObjectParameter("SourceLanguageID", sourceLanguageID) :
                new ObjectParameter("SourceLanguageID", typeof(System.Guid));
    
            var targetLanguageIDParameter = targetLanguageID.HasValue ?
                new ObjectParameter("TargetLanguageID", targetLanguageID) :
                new ObjectParameter("TargetLanguageID", typeof(System.Guid));
    
            var serviceTypeParameter = serviceType.HasValue ?
                new ObjectParameter("ServiceType", serviceType) :
                new ObjectParameter("ServiceType", typeof(System.Guid));
    
            var deliveryPlanIDParameter = deliveryPlanID.HasValue ?
                new ObjectParameter("DeliveryPlanID", deliveryPlanID) :
                new ObjectParameter("DeliveryPlanID", typeof(long));
    
            var unitPrice1Parameter = unitPrice1.HasValue ?
                new ObjectParameter("UnitPrice1", unitPrice1) :
                new ObjectParameter("UnitPrice1", typeof(decimal));
    
            var pageCount1Parameter = pageCount1.HasValue ?
                new ObjectParameter("PageCount1", pageCount1) :
                new ObjectParameter("PageCount1", typeof(int));
    
            var discount1Parameter = discount1.HasValue ?
                new ObjectParameter("Discount1", discount1) :
                new ObjectParameter("Discount1", typeof(decimal));
    
            var unitPrice2Parameter = unitPrice2.HasValue ?
                new ObjectParameter("UnitPrice2", unitPrice2) :
                new ObjectParameter("UnitPrice2", typeof(decimal));
    
            var pageCount2Parameter = pageCount2.HasValue ?
                new ObjectParameter("PageCount2", pageCount2) :
                new ObjectParameter("PageCount2", typeof(int));
    
            var discount2Parameter = discount2.HasValue ?
                new ObjectParameter("Discount2", discount2) :
                new ObjectParameter("Discount2", typeof(decimal));
    
            var unitPrice3Parameter = unitPrice3.HasValue ?
                new ObjectParameter("UnitPrice3", unitPrice3) :
                new ObjectParameter("UnitPrice3", typeof(decimal));
    
            var pageCount3Parameter = pageCount3.HasValue ?
                new ObjectParameter("PageCount3", pageCount3) :
                new ObjectParameter("PageCount3", typeof(int));
    
            var discount3Parameter = discount3.HasValue ?
                new ObjectParameter("Discount3", discount3) :
                new ObjectParameter("Discount3", typeof(decimal));
    
            var unitPrice4Parameter = unitPrice4.HasValue ?
                new ObjectParameter("UnitPrice4", unitPrice4) :
                new ObjectParameter("UnitPrice4", typeof(decimal));
    
            var pageCount4Parameter = pageCount4.HasValue ?
                new ObjectParameter("PageCount4", pageCount4) :
                new ObjectParameter("PageCount4", typeof(int));
    
            var discount4Parameter = discount4.HasValue ?
                new ObjectParameter("Discount4", discount4) :
                new ObjectParameter("Discount4", typeof(decimal));
    
            var unitPrice5Parameter = unitPrice5.HasValue ?
                new ObjectParameter("UnitPrice5", unitPrice5) :
                new ObjectParameter("UnitPrice5", typeof(decimal));
    
            var pageCount5Parameter = pageCount5.HasValue ?
                new ObjectParameter("PageCount5", pageCount5) :
                new ObjectParameter("PageCount5", typeof(int));
    
            var discount5Parameter = discount5.HasValue ?
                new ObjectParameter("Discount5", discount5) :
                new ObjectParameter("Discount5", typeof(decimal));
    
            var basicTimeParameter = basicTime.HasValue ?
                new ObjectParameter("BasicTime", basicTime) :
                new ObjectParameter("BasicTime", typeof(decimal));
    
            var additionalBasicAmountParameter = additionalBasicAmount.HasValue ?
                new ObjectParameter("AdditionalBasicAmount", additionalBasicAmount) :
                new ObjectParameter("AdditionalBasicAmount", typeof(decimal));
    
            var additionalTimeParameter = additionalTime.HasValue ?
                new ObjectParameter("AdditionalTime", additionalTime) :
                new ObjectParameter("AdditionalTime", typeof(decimal));
    
            var extensionTimeParameter = extensionTime.HasValue ?
                new ObjectParameter("ExtensionTime", extensionTime) :
                new ObjectParameter("ExtensionTime", typeof(decimal));
    
            var extraTimeParameter = extraTime.HasValue ?
                new ObjectParameter("ExtraTime", extraTime) :
                new ObjectParameter("ExtraTime", typeof(int));
    
            var lateNightTimeParameter = lateNightTime.HasValue ?
                new ObjectParameter("LateNightTime", lateNightTime) :
                new ObjectParameter("LateNightTime", typeof(decimal));
    
            var transferTimeParameter = transferTime.HasValue ?
                new ObjectParameter("TransferTime", transferTime) :
                new ObjectParameter("TransferTime", typeof(decimal));
    
            var basicAmountParameter = basicAmount.HasValue ?
                new ObjectParameter("BasicAmount", basicAmount) :
                new ObjectParameter("BasicAmount", typeof(decimal));
    
            var extensionAmountParameter = extensionAmount.HasValue ?
                new ObjectParameter("ExtensionAmount", extensionAmount) :
                new ObjectParameter("ExtensionAmount", typeof(decimal));
    
            var extraAmountParameter = extraAmount.HasValue ?
                new ObjectParameter("ExtraAmount", extraAmount) :
                new ObjectParameter("ExtraAmount", typeof(decimal));
    
            var lateAtNightAmountParameter = lateAtNightAmount.HasValue ?
                new ObjectParameter("LateAtNightAmount", lateAtNightAmount) :
                new ObjectParameter("LateAtNightAmount", typeof(decimal));
    
            var transferAmountParameter = transferAmount.HasValue ?
                new ObjectParameter("TransferAmount", transferAmount) :
                new ObjectParameter("TransferAmount", typeof(decimal));
    
            var numberOfDaysParameter = numberOfDays.HasValue ?
                new ObjectParameter("NumberOfDays", numberOfDays) :
                new ObjectParameter("NumberOfDays", typeof(int));
    
            var numberOfPeopleParameter = numberOfPeople.HasValue ?
                new ObjectParameter("NumberOfPeople", numberOfPeople) :
                new ObjectParameter("NumberOfPeople", typeof(int));
    
            var otherAmountParameter = otherAmount.HasValue ?
                new ObjectParameter("OtherAmount", otherAmount) :
                new ObjectParameter("OtherAmount", typeof(decimal));
    
            var certificateAmountParameter = certificateAmount.HasValue ?
                new ObjectParameter("CertificateAmount", certificateAmount) :
                new ObjectParameter("CertificateAmount", typeof(decimal));
    
            var excludeTaxParameter = excludeTax.HasValue ?
                new ObjectParameter("ExcludeTax", excludeTax) :
                new ObjectParameter("ExcludeTax", typeof(bool));
    
            var contentsParameter = contents != null ?
                new ObjectParameter("Contents", contents) :
                new ObjectParameter("Contents", typeof(string));
    
            var lengthMinuteParameter = lengthMinute.HasValue ?
                new ObjectParameter("LengthMinute", lengthMinute) :
                new ObjectParameter("LengthMinute", typeof(decimal));
    
            var withTranslationParameter = withTranslation.HasValue ?
                new ObjectParameter("WithTranslation", withTranslation) :
                new ObjectParameter("WithTranslation", typeof(bool));
    
            var unitPriceTimeParameter = unitPriceTime.HasValue ?
                new ObjectParameter("UnitPriceTime", unitPriceTime) :
                new ObjectParameter("UnitPriceTime", typeof(decimal));
    
            var unitPriceSubTotalParameter = unitPriceSubTotal.HasValue ?
                new ObjectParameter("UnitPriceSubTotal", unitPriceSubTotal) :
                new ObjectParameter("UnitPriceSubTotal", typeof(decimal));
    
            var discountRateParameter = discountRate.HasValue ?
                new ObjectParameter("DiscountRate", discountRate) :
                new ObjectParameter("DiscountRate", typeof(decimal));
    
            var discountedPriceParameter = discountedPrice.HasValue ?
                new ObjectParameter("DiscountedPrice", discountedPrice) :
                new ObjectParameter("DiscountedPrice", typeof(decimal));
    
            var estimationPriceParameter = estimationPrice.HasValue ?
                new ObjectParameter("EstimationPrice", estimationPrice) :
                new ObjectParameter("EstimationPrice", typeof(decimal));
    
            var studioPriceParameter = studioPrice.HasValue ?
                new ObjectParameter("StudioPrice", studioPrice) :
                new ObjectParameter("StudioPrice", typeof(decimal));
    
            var studioPriceTimeParameter = studioPriceTime.HasValue ?
                new ObjectParameter("StudioPriceTime", studioPriceTime) :
                new ObjectParameter("StudioPriceTime", typeof(decimal));
    
            var editPriceParameter = editPrice.HasValue ?
                new ObjectParameter("EditPrice", editPrice) :
                new ObjectParameter("EditPrice", typeof(decimal));
    
            var editPriceTimeParameter = editPriceTime.HasValue ?
                new ObjectParameter("EditPriceTime", editPriceTime) :
                new ObjectParameter("EditPriceTime", typeof(decimal));
    
            var studioPriceSubTotalParameter = studioPriceSubTotal.HasValue ?
                new ObjectParameter("StudioPriceSubTotal", studioPriceSubTotal) :
                new ObjectParameter("StudioPriceSubTotal", typeof(decimal));
    
            var studioPriceDiscountRateParameter = studioPriceDiscountRate.HasValue ?
                new ObjectParameter("StudioPriceDiscountRate", studioPriceDiscountRate) :
                new ObjectParameter("StudioPriceDiscountRate", typeof(decimal));
    
            var studioDiscountedPriceParameter = studioDiscountedPrice.HasValue ?
                new ObjectParameter("StudioDiscountedPrice", studioDiscountedPrice) :
                new ObjectParameter("StudioDiscountedPrice", typeof(decimal));
    
            var totalAfterDiscountParameter = totalAfterDiscount.HasValue ?
                new ObjectParameter("TotalAfterDiscount", totalAfterDiscount) :
                new ObjectParameter("TotalAfterDiscount", typeof(decimal));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(decimal));
    
            var paymentRateParameter = paymentRate.HasValue ?
                new ObjectParameter("PaymentRate", paymentRate) :
                new ObjectParameter("PaymentRate", typeof(decimal));
    
            var expectedPaymentParameter = expectedPayment.HasValue ?
                new ObjectParameter("ExpectedPayment", expectedPayment) :
                new ObjectParameter("ExpectedPayment", typeof(decimal));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var completionDateParameter = completionDate.HasValue ?
                new ObjectParameter("CompletionDate", completionDate) :
                new ObjectParameter("CompletionDate", typeof(System.DateTime));
    
            var startTimeParameter = startTime != null ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(string));
    
            var finishTimeParameter = finishTime != null ?
                new ObjectParameter("FinishTime", finishTime) :
                new ObjectParameter("FinishTime", typeof(string));
    
            var isOverseasParameter = isOverseas.HasValue ?
                new ObjectParameter("IsOverseas", isOverseas) :
                new ObjectParameter("IsOverseas", typeof(bool));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SaveEstimationDetails", iDParameter, estimationIDParameter, sourceLanguageIDParameter, targetLanguageIDParameter, serviceTypeParameter, deliveryPlanIDParameter, unitPrice1Parameter, pageCount1Parameter, discount1Parameter, unitPrice2Parameter, pageCount2Parameter, discount2Parameter, unitPrice3Parameter, pageCount3Parameter, discount3Parameter, unitPrice4Parameter, pageCount4Parameter, discount4Parameter, unitPrice5Parameter, pageCount5Parameter, discount5Parameter, basicTimeParameter, additionalBasicAmountParameter, additionalTimeParameter, extensionTimeParameter, extraTimeParameter, lateNightTimeParameter, transferTimeParameter, basicAmountParameter, extensionAmountParameter, extraAmountParameter, lateAtNightAmountParameter, transferAmountParameter, numberOfDaysParameter, numberOfPeopleParameter, otherAmountParameter, certificateAmountParameter, excludeTaxParameter, contentsParameter, lengthMinuteParameter, withTranslationParameter, unitPriceTimeParameter, unitPriceSubTotalParameter, discountRateParameter, discountedPriceParameter, estimationPriceParameter, studioPriceParameter, studioPriceTimeParameter, editPriceParameter, editPriceTimeParameter, studioPriceSubTotalParameter, studioPriceDiscountRateParameter, studioDiscountedPriceParameter, totalAfterDiscountParameter, totalParameter, paymentRateParameter, expectedPaymentParameter, startDateParameter, completionDateParameter, startTimeParameter, finishTimeParameter, isOverseasParameter, statementTypeParameter);
        }
    
        public virtual int SP_SaveEstimationFiles(Nullable<System.Guid> iD, Nullable<System.Guid> estimateID, Nullable<System.Guid> estimateDetailsID, string fileName, string downloadURL, string translationText, Nullable<int> wordCount, string statementType)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var estimateIDParameter = estimateID.HasValue ?
                new ObjectParameter("EstimateID", estimateID) :
                new ObjectParameter("EstimateID", typeof(System.Guid));
    
            var estimateDetailsIDParameter = estimateDetailsID.HasValue ?
                new ObjectParameter("EstimateDetailsID", estimateDetailsID) :
                new ObjectParameter("EstimateDetailsID", typeof(System.Guid));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var downloadURLParameter = downloadURL != null ?
                new ObjectParameter("DownloadURL", downloadURL) :
                new ObjectParameter("DownloadURL", typeof(string));
    
            var translationTextParameter = translationText != null ?
                new ObjectParameter("TranslationText", translationText) :
                new ObjectParameter("TranslationText", typeof(string));
    
            var wordCountParameter = wordCount.HasValue ?
                new ObjectParameter("WordCount", wordCount) :
                new ObjectParameter("WordCount", typeof(int));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SaveEstimationFiles", iDParameter, estimateIDParameter, estimateDetailsIDParameter, fileNameParameter, downloadURLParameter, translationTextParameter, wordCountParameter, statementTypeParameter);
        }
    
        public virtual int SP_SaveOrder(Nullable<System.Guid> iD, Nullable<long> registrationID, Nullable<long> applicationID, string orderNo, string invoiceNo, Nullable<System.Guid> estimationID, Nullable<System.Guid> companyID, string deliveryDescription_en, string deliveryDescription_jp, string deliveryDescription_kr, string deliveryDescription_cn, string deliveryDescription_fr, string deliveryDescription_tl, Nullable<decimal> quoatedPrice, Nullable<decimal> consumptionTax, Nullable<decimal> costExclTax, Nullable<decimal> billingAmount, Nullable<decimal> originalCost, Nullable<decimal> withdrawlAmount, Nullable<decimal> profit, Nullable<int> orderStatus, Nullable<int> paymentStatus, Nullable<decimal> grossInterestProfit, Nullable<bool> isDeposited, string remarks, Nullable<System.DateTime> deadline, Nullable<System.DateTime> estimatedDateOfDeposit, Nullable<int> clientComplain, Nullable<int> staffComplain, Nullable<int> nonStaffComplain, Nullable<System.DateTime> complainDate, Nullable<System.DateTime> responseComplainDate, string complainDetails, string accountingRelatedMemo, Nullable<decimal> costInclTax, Nullable<decimal> paymentinInstallment, Nullable<decimal> internalPayment, Nullable<decimal> externalPayment, Nullable<decimal> shand, Nullable<decimal> bhand, Nullable<decimal> chand, Nullable<decimal> partner, Nullable<decimal> netProfit, Nullable<decimal> netMarginRate, Nullable<decimal> grossProfit, Nullable<decimal> grossMarginRate, Nullable<decimal> orderAmount, string statementType)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var registrationIDParameter = registrationID.HasValue ?
                new ObjectParameter("RegistrationID", registrationID) :
                new ObjectParameter("RegistrationID", typeof(long));
    
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(long));
    
            var orderNoParameter = orderNo != null ?
                new ObjectParameter("OrderNo", orderNo) :
                new ObjectParameter("OrderNo", typeof(string));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var estimationIDParameter = estimationID.HasValue ?
                new ObjectParameter("EstimationID", estimationID) :
                new ObjectParameter("EstimationID", typeof(System.Guid));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(System.Guid));
    
            var deliveryDescription_enParameter = deliveryDescription_en != null ?
                new ObjectParameter("DeliveryDescription_en", deliveryDescription_en) :
                new ObjectParameter("DeliveryDescription_en", typeof(string));
    
            var deliveryDescription_jpParameter = deliveryDescription_jp != null ?
                new ObjectParameter("DeliveryDescription_jp", deliveryDescription_jp) :
                new ObjectParameter("DeliveryDescription_jp", typeof(string));
    
            var deliveryDescription_krParameter = deliveryDescription_kr != null ?
                new ObjectParameter("DeliveryDescription_kr", deliveryDescription_kr) :
                new ObjectParameter("DeliveryDescription_kr", typeof(string));
    
            var deliveryDescription_cnParameter = deliveryDescription_cn != null ?
                new ObjectParameter("DeliveryDescription_cn", deliveryDescription_cn) :
                new ObjectParameter("DeliveryDescription_cn", typeof(string));
    
            var deliveryDescription_frParameter = deliveryDescription_fr != null ?
                new ObjectParameter("DeliveryDescription_fr", deliveryDescription_fr) :
                new ObjectParameter("DeliveryDescription_fr", typeof(string));
    
            var deliveryDescription_tlParameter = deliveryDescription_tl != null ?
                new ObjectParameter("DeliveryDescription_tl", deliveryDescription_tl) :
                new ObjectParameter("DeliveryDescription_tl", typeof(string));
    
            var quoatedPriceParameter = quoatedPrice.HasValue ?
                new ObjectParameter("QuoatedPrice", quoatedPrice) :
                new ObjectParameter("QuoatedPrice", typeof(decimal));
    
            var consumptionTaxParameter = consumptionTax.HasValue ?
                new ObjectParameter("ConsumptionTax", consumptionTax) :
                new ObjectParameter("ConsumptionTax", typeof(decimal));
    
            var costExclTaxParameter = costExclTax.HasValue ?
                new ObjectParameter("CostExclTax", costExclTax) :
                new ObjectParameter("CostExclTax", typeof(decimal));
    
            var billingAmountParameter = billingAmount.HasValue ?
                new ObjectParameter("BillingAmount", billingAmount) :
                new ObjectParameter("BillingAmount", typeof(decimal));
    
            var originalCostParameter = originalCost.HasValue ?
                new ObjectParameter("OriginalCost", originalCost) :
                new ObjectParameter("OriginalCost", typeof(decimal));
    
            var withdrawlAmountParameter = withdrawlAmount.HasValue ?
                new ObjectParameter("WithdrawlAmount", withdrawlAmount) :
                new ObjectParameter("WithdrawlAmount", typeof(decimal));
    
            var profitParameter = profit.HasValue ?
                new ObjectParameter("Profit", profit) :
                new ObjectParameter("Profit", typeof(decimal));
    
            var orderStatusParameter = orderStatus.HasValue ?
                new ObjectParameter("OrderStatus", orderStatus) :
                new ObjectParameter("OrderStatus", typeof(int));
    
            var paymentStatusParameter = paymentStatus.HasValue ?
                new ObjectParameter("PaymentStatus", paymentStatus) :
                new ObjectParameter("PaymentStatus", typeof(int));
    
            var grossInterestProfitParameter = grossInterestProfit.HasValue ?
                new ObjectParameter("GrossInterestProfit", grossInterestProfit) :
                new ObjectParameter("GrossInterestProfit", typeof(decimal));
    
            var isDepositedParameter = isDeposited.HasValue ?
                new ObjectParameter("IsDeposited", isDeposited) :
                new ObjectParameter("IsDeposited", typeof(bool));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var deadlineParameter = deadline.HasValue ?
                new ObjectParameter("Deadline", deadline) :
                new ObjectParameter("Deadline", typeof(System.DateTime));
    
            var estimatedDateOfDepositParameter = estimatedDateOfDeposit.HasValue ?
                new ObjectParameter("EstimatedDateOfDeposit", estimatedDateOfDeposit) :
                new ObjectParameter("EstimatedDateOfDeposit", typeof(System.DateTime));
    
            var clientComplainParameter = clientComplain.HasValue ?
                new ObjectParameter("ClientComplain", clientComplain) :
                new ObjectParameter("ClientComplain", typeof(int));
    
            var staffComplainParameter = staffComplain.HasValue ?
                new ObjectParameter("StaffComplain", staffComplain) :
                new ObjectParameter("StaffComplain", typeof(int));
    
            var nonStaffComplainParameter = nonStaffComplain.HasValue ?
                new ObjectParameter("NonStaffComplain", nonStaffComplain) :
                new ObjectParameter("NonStaffComplain", typeof(int));
    
            var complainDateParameter = complainDate.HasValue ?
                new ObjectParameter("ComplainDate", complainDate) :
                new ObjectParameter("ComplainDate", typeof(System.DateTime));
    
            var responseComplainDateParameter = responseComplainDate.HasValue ?
                new ObjectParameter("ResponseComplainDate", responseComplainDate) :
                new ObjectParameter("ResponseComplainDate", typeof(System.DateTime));
    
            var complainDetailsParameter = complainDetails != null ?
                new ObjectParameter("ComplainDetails", complainDetails) :
                new ObjectParameter("ComplainDetails", typeof(string));
    
            var accountingRelatedMemoParameter = accountingRelatedMemo != null ?
                new ObjectParameter("AccountingRelatedMemo", accountingRelatedMemo) :
                new ObjectParameter("AccountingRelatedMemo", typeof(string));
    
            var costInclTaxParameter = costInclTax.HasValue ?
                new ObjectParameter("CostInclTax", costInclTax) :
                new ObjectParameter("CostInclTax", typeof(decimal));
    
            var paymentinInstallmentParameter = paymentinInstallment.HasValue ?
                new ObjectParameter("PaymentinInstallment", paymentinInstallment) :
                new ObjectParameter("PaymentinInstallment", typeof(decimal));
    
            var internalPaymentParameter = internalPayment.HasValue ?
                new ObjectParameter("InternalPayment", internalPayment) :
                new ObjectParameter("InternalPayment", typeof(decimal));
    
            var externalPaymentParameter = externalPayment.HasValue ?
                new ObjectParameter("ExternalPayment", externalPayment) :
                new ObjectParameter("ExternalPayment", typeof(decimal));
    
            var shandParameter = shand.HasValue ?
                new ObjectParameter("Shand", shand) :
                new ObjectParameter("Shand", typeof(decimal));
    
            var bhandParameter = bhand.HasValue ?
                new ObjectParameter("Bhand", bhand) :
                new ObjectParameter("Bhand", typeof(decimal));
    
            var chandParameter = chand.HasValue ?
                new ObjectParameter("Chand", chand) :
                new ObjectParameter("Chand", typeof(decimal));
    
            var partnerParameter = partner.HasValue ?
                new ObjectParameter("Partner", partner) :
                new ObjectParameter("Partner", typeof(decimal));
    
            var netProfitParameter = netProfit.HasValue ?
                new ObjectParameter("NetProfit", netProfit) :
                new ObjectParameter("NetProfit", typeof(decimal));
    
            var netMarginRateParameter = netMarginRate.HasValue ?
                new ObjectParameter("NetMarginRate", netMarginRate) :
                new ObjectParameter("NetMarginRate", typeof(decimal));
    
            var grossProfitParameter = grossProfit.HasValue ?
                new ObjectParameter("GrossProfit", grossProfit) :
                new ObjectParameter("GrossProfit", typeof(decimal));
    
            var grossMarginRateParameter = grossMarginRate.HasValue ?
                new ObjectParameter("GrossMarginRate", grossMarginRate) :
                new ObjectParameter("GrossMarginRate", typeof(decimal));
    
            var orderAmountParameter = orderAmount.HasValue ?
                new ObjectParameter("OrderAmount", orderAmount) :
                new ObjectParameter("OrderAmount", typeof(decimal));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SaveOrder", iDParameter, registrationIDParameter, applicationIDParameter, orderNoParameter, invoiceNoParameter, estimationIDParameter, companyIDParameter, deliveryDescription_enParameter, deliveryDescription_jpParameter, deliveryDescription_krParameter, deliveryDescription_cnParameter, deliveryDescription_frParameter, deliveryDescription_tlParameter, quoatedPriceParameter, consumptionTaxParameter, costExclTaxParameter, billingAmountParameter, originalCostParameter, withdrawlAmountParameter, profitParameter, orderStatusParameter, paymentStatusParameter, grossInterestProfitParameter, isDepositedParameter, remarksParameter, deadlineParameter, estimatedDateOfDepositParameter, clientComplainParameter, staffComplainParameter, nonStaffComplainParameter, complainDateParameter, responseComplainDateParameter, complainDetailsParameter, accountingRelatedMemoParameter, costInclTaxParameter, paymentinInstallmentParameter, internalPaymentParameter, externalPaymentParameter, shandParameter, bhandParameter, chandParameter, partnerParameter, netProfitParameter, netMarginRateParameter, grossProfitParameter, grossMarginRateParameter, orderAmountParameter, statementTypeParameter);
        }
    
        public virtual int SP_SaveOrderStaffAllowance(Nullable<System.Guid> iD, Nullable<System.Guid> estimationID, Nullable<int> allowanceType, string itemName, Nullable<decimal> unitPrice, Nullable<int> noOfPersons, Nullable<int> noOfDays, Nullable<decimal> subTotal, Nullable<bool> isCompleteSet, Nullable<bool> isExclTax, string statementType)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var estimationIDParameter = estimationID.HasValue ?
                new ObjectParameter("EstimationID", estimationID) :
                new ObjectParameter("EstimationID", typeof(System.Guid));
    
            var allowanceTypeParameter = allowanceType.HasValue ?
                new ObjectParameter("AllowanceType", allowanceType) :
                new ObjectParameter("AllowanceType", typeof(int));
    
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var unitPriceParameter = unitPrice.HasValue ?
                new ObjectParameter("UnitPrice", unitPrice) :
                new ObjectParameter("UnitPrice", typeof(decimal));
    
            var noOfPersonsParameter = noOfPersons.HasValue ?
                new ObjectParameter("NoOfPersons", noOfPersons) :
                new ObjectParameter("NoOfPersons", typeof(int));
    
            var noOfDaysParameter = noOfDays.HasValue ?
                new ObjectParameter("NoOfDays", noOfDays) :
                new ObjectParameter("NoOfDays", typeof(int));
    
            var subTotalParameter = subTotal.HasValue ?
                new ObjectParameter("SubTotal", subTotal) :
                new ObjectParameter("SubTotal", typeof(decimal));
    
            var isCompleteSetParameter = isCompleteSet.HasValue ?
                new ObjectParameter("IsCompleteSet", isCompleteSet) :
                new ObjectParameter("IsCompleteSet", typeof(bool));
    
            var isExclTaxParameter = isExclTax.HasValue ?
                new ObjectParameter("IsExclTax", isExclTax) :
                new ObjectParameter("IsExclTax", typeof(bool));
    
            var statementTypeParameter = statementType != null ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SaveOrderStaffAllowance", iDParameter, estimationIDParameter, allowanceTypeParameter, itemNameParameter, unitPriceParameter, noOfPersonsParameter, noOfDaysParameter, subTotalParameter, isCompleteSetParameter, isExclTaxParameter, statementTypeParameter);
        }
    
        public virtual int SP_SetNewPassword(Nullable<long> iD, string password, Nullable<int> statementType)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var statementTypeParameter = statementType.HasValue ?
                new ObjectParameter("StatementType", statementType) :
                new ObjectParameter("StatementType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SetNewPassword", iDParameter, passwordParameter, statementTypeParameter);
        }
    
        public virtual int SP_UpdateEmployee(Nullable<System.Guid> iD, Nullable<long> registrationID, string employeeID, Nullable<System.Guid> divisionID, Nullable<long> countryID, Nullable<System.Guid> departmentID, Nullable<System.Guid> teamID, Nullable<long> employeeTypeID, Nullable<long> applicationID, string name_en, string name_jp, string name_kr, string name_cn, string name_fr, string name_tl, string password, Nullable<System.DateTime> birthDate, Nullable<System.DateTime> joiningDate, Nullable<System.DateTime> registrationDate, Nullable<System.DateTime> leavingDate, Nullable<int> attendanceDay, string clockInTime, string clockOutTime, string skypeID, string skypePassword, string email, Nullable<bool> isResponsiblePerson, string homeAddress_en, string homeAddress_jp, string homeAddress_kr, string homeAddress_cn, string homeAddress_fr, string homeAddress_tl, string homePhone, string mobilePhone, string pCEmail, string mobileEmail, string sns_one, string sns_two, Nullable<System.Guid> bankID, Nullable<System.Guid> bankBranchID, Nullable<long> bankAccountTypeID, string bankAccountNumber, string bankAccountName, string photo, string signature, string institute_en, string institute_jp, string institute_kr, string institute_cn, string institute_fr, string institute_tl, string academicQualification, Nullable<System.Guid> language_one, Nullable<System.Guid> language_two, Nullable<System.Guid> language_three, string selfIntroduction_en, string selfIntroduction_jp, string selfIntroduction_kr, string selfIntroduction_fr, string selfIntroduction_tl, string selfIntroduction_cn, string note_en, string note_jp, string note_kr, string note_fr, string note_tl, string note_cn, Nullable<long> createdBy, Nullable<System.DateTime> createdDate, Nullable<long> updatedBy, Nullable<System.DateTime> updatedDate, Nullable<bool> active, string cultureId)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var registrationIDParameter = registrationID.HasValue ?
                new ObjectParameter("RegistrationID", registrationID) :
                new ObjectParameter("RegistrationID", typeof(long));
    
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var divisionIDParameter = divisionID.HasValue ?
                new ObjectParameter("DivisionID", divisionID) :
                new ObjectParameter("DivisionID", typeof(System.Guid));
    
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(long));
    
            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(System.Guid));
    
            var teamIDParameter = teamID.HasValue ?
                new ObjectParameter("TeamID", teamID) :
                new ObjectParameter("TeamID", typeof(System.Guid));
    
            var employeeTypeIDParameter = employeeTypeID.HasValue ?
                new ObjectParameter("EmployeeTypeID", employeeTypeID) :
                new ObjectParameter("EmployeeTypeID", typeof(long));
    
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(long));
    
            var name_enParameter = name_en != null ?
                new ObjectParameter("Name_en", name_en) :
                new ObjectParameter("Name_en", typeof(string));
    
            var name_jpParameter = name_jp != null ?
                new ObjectParameter("Name_jp", name_jp) :
                new ObjectParameter("Name_jp", typeof(string));
    
            var name_krParameter = name_kr != null ?
                new ObjectParameter("Name_kr", name_kr) :
                new ObjectParameter("Name_kr", typeof(string));
    
            var name_cnParameter = name_cn != null ?
                new ObjectParameter("Name_cn", name_cn) :
                new ObjectParameter("Name_cn", typeof(string));
    
            var name_frParameter = name_fr != null ?
                new ObjectParameter("Name_fr", name_fr) :
                new ObjectParameter("Name_fr", typeof(string));
    
            var name_tlParameter = name_tl != null ?
                new ObjectParameter("Name_tl", name_tl) :
                new ObjectParameter("Name_tl", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var joiningDateParameter = joiningDate.HasValue ?
                new ObjectParameter("JoiningDate", joiningDate) :
                new ObjectParameter("JoiningDate", typeof(System.DateTime));
    
            var registrationDateParameter = registrationDate.HasValue ?
                new ObjectParameter("RegistrationDate", registrationDate) :
                new ObjectParameter("RegistrationDate", typeof(System.DateTime));
    
            var leavingDateParameter = leavingDate.HasValue ?
                new ObjectParameter("LeavingDate", leavingDate) :
                new ObjectParameter("LeavingDate", typeof(System.DateTime));
    
            var attendanceDayParameter = attendanceDay.HasValue ?
                new ObjectParameter("AttendanceDay", attendanceDay) :
                new ObjectParameter("AttendanceDay", typeof(int));
    
            var clockInTimeParameter = clockInTime != null ?
                new ObjectParameter("ClockInTime", clockInTime) :
                new ObjectParameter("ClockInTime", typeof(string));
    
            var clockOutTimeParameter = clockOutTime != null ?
                new ObjectParameter("ClockOutTime", clockOutTime) :
                new ObjectParameter("ClockOutTime", typeof(string));
    
            var skypeIDParameter = skypeID != null ?
                new ObjectParameter("SkypeID", skypeID) :
                new ObjectParameter("SkypeID", typeof(string));
    
            var skypePasswordParameter = skypePassword != null ?
                new ObjectParameter("SkypePassword", skypePassword) :
                new ObjectParameter("SkypePassword", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var isResponsiblePersonParameter = isResponsiblePerson.HasValue ?
                new ObjectParameter("IsResponsiblePerson", isResponsiblePerson) :
                new ObjectParameter("IsResponsiblePerson", typeof(bool));
    
            var homeAddress_enParameter = homeAddress_en != null ?
                new ObjectParameter("HomeAddress_en", homeAddress_en) :
                new ObjectParameter("HomeAddress_en", typeof(string));
    
            var homeAddress_jpParameter = homeAddress_jp != null ?
                new ObjectParameter("HomeAddress_jp", homeAddress_jp) :
                new ObjectParameter("HomeAddress_jp", typeof(string));
    
            var homeAddress_krParameter = homeAddress_kr != null ?
                new ObjectParameter("HomeAddress_kr", homeAddress_kr) :
                new ObjectParameter("HomeAddress_kr", typeof(string));
    
            var homeAddress_cnParameter = homeAddress_cn != null ?
                new ObjectParameter("HomeAddress_cn", homeAddress_cn) :
                new ObjectParameter("HomeAddress_cn", typeof(string));
    
            var homeAddress_frParameter = homeAddress_fr != null ?
                new ObjectParameter("HomeAddress_fr", homeAddress_fr) :
                new ObjectParameter("HomeAddress_fr", typeof(string));
    
            var homeAddress_tlParameter = homeAddress_tl != null ?
                new ObjectParameter("HomeAddress_tl", homeAddress_tl) :
                new ObjectParameter("HomeAddress_tl", typeof(string));
    
            var homePhoneParameter = homePhone != null ?
                new ObjectParameter("HomePhone", homePhone) :
                new ObjectParameter("HomePhone", typeof(string));
    
            var mobilePhoneParameter = mobilePhone != null ?
                new ObjectParameter("MobilePhone", mobilePhone) :
                new ObjectParameter("MobilePhone", typeof(string));
    
            var pCEmailParameter = pCEmail != null ?
                new ObjectParameter("PCEmail", pCEmail) :
                new ObjectParameter("PCEmail", typeof(string));
    
            var mobileEmailParameter = mobileEmail != null ?
                new ObjectParameter("MobileEmail", mobileEmail) :
                new ObjectParameter("MobileEmail", typeof(string));
    
            var sns_oneParameter = sns_one != null ?
                new ObjectParameter("Sns_one", sns_one) :
                new ObjectParameter("Sns_one", typeof(string));
    
            var sns_twoParameter = sns_two != null ?
                new ObjectParameter("Sns_two", sns_two) :
                new ObjectParameter("Sns_two", typeof(string));
    
            var bankIDParameter = bankID.HasValue ?
                new ObjectParameter("BankID", bankID) :
                new ObjectParameter("BankID", typeof(System.Guid));
    
            var bankBranchIDParameter = bankBranchID.HasValue ?
                new ObjectParameter("BankBranchID", bankBranchID) :
                new ObjectParameter("BankBranchID", typeof(System.Guid));
    
            var bankAccountTypeIDParameter = bankAccountTypeID.HasValue ?
                new ObjectParameter("BankAccountTypeID", bankAccountTypeID) :
                new ObjectParameter("BankAccountTypeID", typeof(long));
    
            var bankAccountNumberParameter = bankAccountNumber != null ?
                new ObjectParameter("BankAccountNumber", bankAccountNumber) :
                new ObjectParameter("BankAccountNumber", typeof(string));
    
            var bankAccountNameParameter = bankAccountName != null ?
                new ObjectParameter("BankAccountName", bankAccountName) :
                new ObjectParameter("BankAccountName", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("Photo", photo) :
                new ObjectParameter("Photo", typeof(string));
    
            var signatureParameter = signature != null ?
                new ObjectParameter("Signature", signature) :
                new ObjectParameter("Signature", typeof(string));
    
            var institute_enParameter = institute_en != null ?
                new ObjectParameter("Institute_en", institute_en) :
                new ObjectParameter("Institute_en", typeof(string));
    
            var institute_jpParameter = institute_jp != null ?
                new ObjectParameter("Institute_jp", institute_jp) :
                new ObjectParameter("Institute_jp", typeof(string));
    
            var institute_krParameter = institute_kr != null ?
                new ObjectParameter("Institute_kr", institute_kr) :
                new ObjectParameter("Institute_kr", typeof(string));
    
            var institute_cnParameter = institute_cn != null ?
                new ObjectParameter("Institute_cn", institute_cn) :
                new ObjectParameter("Institute_cn", typeof(string));
    
            var institute_frParameter = institute_fr != null ?
                new ObjectParameter("Institute_fr", institute_fr) :
                new ObjectParameter("Institute_fr", typeof(string));
    
            var institute_tlParameter = institute_tl != null ?
                new ObjectParameter("Institute_tl", institute_tl) :
                new ObjectParameter("Institute_tl", typeof(string));
    
            var academicQualificationParameter = academicQualification != null ?
                new ObjectParameter("AcademicQualification", academicQualification) :
                new ObjectParameter("AcademicQualification", typeof(string));
    
            var language_oneParameter = language_one.HasValue ?
                new ObjectParameter("Language_one", language_one) :
                new ObjectParameter("Language_one", typeof(System.Guid));
    
            var language_twoParameter = language_two.HasValue ?
                new ObjectParameter("Language_two", language_two) :
                new ObjectParameter("Language_two", typeof(System.Guid));
    
            var language_threeParameter = language_three.HasValue ?
                new ObjectParameter("Language_three", language_three) :
                new ObjectParameter("Language_three", typeof(System.Guid));
    
            var selfIntroduction_enParameter = selfIntroduction_en != null ?
                new ObjectParameter("SelfIntroduction_en", selfIntroduction_en) :
                new ObjectParameter("SelfIntroduction_en", typeof(string));
    
            var selfIntroduction_jpParameter = selfIntroduction_jp != null ?
                new ObjectParameter("SelfIntroduction_jp", selfIntroduction_jp) :
                new ObjectParameter("SelfIntroduction_jp", typeof(string));
    
            var selfIntroduction_krParameter = selfIntroduction_kr != null ?
                new ObjectParameter("SelfIntroduction_kr", selfIntroduction_kr) :
                new ObjectParameter("SelfIntroduction_kr", typeof(string));
    
            var selfIntroduction_frParameter = selfIntroduction_fr != null ?
                new ObjectParameter("SelfIntroduction_fr", selfIntroduction_fr) :
                new ObjectParameter("SelfIntroduction_fr", typeof(string));
    
            var selfIntroduction_tlParameter = selfIntroduction_tl != null ?
                new ObjectParameter("SelfIntroduction_tl", selfIntroduction_tl) :
                new ObjectParameter("SelfIntroduction_tl", typeof(string));
    
            var selfIntroduction_cnParameter = selfIntroduction_cn != null ?
                new ObjectParameter("SelfIntroduction_cn", selfIntroduction_cn) :
                new ObjectParameter("SelfIntroduction_cn", typeof(string));
    
            var note_enParameter = note_en != null ?
                new ObjectParameter("Note_en", note_en) :
                new ObjectParameter("Note_en", typeof(string));
    
            var note_jpParameter = note_jp != null ?
                new ObjectParameter("Note_jp", note_jp) :
                new ObjectParameter("Note_jp", typeof(string));
    
            var note_krParameter = note_kr != null ?
                new ObjectParameter("Note_kr", note_kr) :
                new ObjectParameter("Note_kr", typeof(string));
    
            var note_frParameter = note_fr != null ?
                new ObjectParameter("Note_fr", note_fr) :
                new ObjectParameter("Note_fr", typeof(string));
    
            var note_tlParameter = note_tl != null ?
                new ObjectParameter("Note_tl", note_tl) :
                new ObjectParameter("Note_tl", typeof(string));
    
            var note_cnParameter = note_cn != null ?
                new ObjectParameter("Note_cn", note_cn) :
                new ObjectParameter("Note_cn", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(long));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(long));
    
            var updatedDateParameter = updatedDate.HasValue ?
                new ObjectParameter("UpdatedDate", updatedDate) :
                new ObjectParameter("UpdatedDate", typeof(System.DateTime));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var cultureIdParameter = cultureId != null ?
                new ObjectParameter("CultureId", cultureId) :
                new ObjectParameter("CultureId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateEmployee", iDParameter, registrationIDParameter, employeeIDParameter, divisionIDParameter, countryIDParameter, departmentIDParameter, teamIDParameter, employeeTypeIDParameter, applicationIDParameter, name_enParameter, name_jpParameter, name_krParameter, name_cnParameter, name_frParameter, name_tlParameter, passwordParameter, birthDateParameter, joiningDateParameter, registrationDateParameter, leavingDateParameter, attendanceDayParameter, clockInTimeParameter, clockOutTimeParameter, skypeIDParameter, skypePasswordParameter, emailParameter, isResponsiblePersonParameter, homeAddress_enParameter, homeAddress_jpParameter, homeAddress_krParameter, homeAddress_cnParameter, homeAddress_frParameter, homeAddress_tlParameter, homePhoneParameter, mobilePhoneParameter, pCEmailParameter, mobileEmailParameter, sns_oneParameter, sns_twoParameter, bankIDParameter, bankBranchIDParameter, bankAccountTypeIDParameter, bankAccountNumberParameter, bankAccountNameParameter, photoParameter, signatureParameter, institute_enParameter, institute_jpParameter, institute_krParameter, institute_cnParameter, institute_frParameter, institute_tlParameter, academicQualificationParameter, language_oneParameter, language_twoParameter, language_threeParameter, selfIntroduction_enParameter, selfIntroduction_jpParameter, selfIntroduction_krParameter, selfIntroduction_frParameter, selfIntroduction_tlParameter, selfIntroduction_cnParameter, note_enParameter, note_jpParameter, note_krParameter, note_frParameter, note_tlParameter, note_cnParameter, createdByParameter, createdDateParameter, updatedByParameter, updatedDateParameter, activeParameter, cultureIdParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int USP_GetAdditionalOperationPermissionList(Nullable<long> id, Nullable<long> userId, Nullable<long> screenOperationId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var screenOperationIdParameter = screenOperationId.HasValue ?
                new ObjectParameter("ScreenOperationId", screenOperationId) :
                new ObjectParameter("ScreenOperationId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GetAdditionalOperationPermissionList", idParameter, userIdParameter, screenOperationIdParameter);
        }
    
        public virtual int USP_GetAdditionalScreenPermissionList(Nullable<long> id, Nullable<long> userId, Nullable<long> moduleId, Nullable<long> screenId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(long));
    
            var screenIdParameter = screenId.HasValue ?
                new ObjectParameter("ScreenId", screenId) :
                new ObjectParameter("ScreenId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GetAdditionalScreenPermissionList", idParameter, userIdParameter, moduleIdParameter, screenIdParameter);
        }
    
        public virtual ObjectResult<string> USP_GetNextId(string identityField, string identityLengthField)
        {
            var identityFieldParameter = identityField != null ?
                new ObjectParameter("IdentityField", identityField) :
                new ObjectParameter("IdentityField", typeof(string));
    
            var identityLengthFieldParameter = identityLengthField != null ?
                new ObjectParameter("IdentityLengthField", identityLengthField) :
                new ObjectParameter("IdentityLengthField", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_GetNextId", identityFieldParameter, identityLengthFieldParameter);
        }
    
        public virtual int USP_GetRoleWiseOperationPermissionList(Nullable<long> id, Nullable<long> roleId, Nullable<long> screenOperationId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(long));
    
            var screenOperationIdParameter = screenOperationId.HasValue ?
                new ObjectParameter("ScreenOperationId", screenOperationId) :
                new ObjectParameter("ScreenOperationId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GetRoleWiseOperationPermissionList", idParameter, roleIdParameter, screenOperationIdParameter);
        }
    
        public virtual int USP_GetRoleWiseScreenPermissionList(Nullable<long> id, Nullable<long> roleId, Nullable<long> moduleId, Nullable<long> screenId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(long));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(long));
    
            var screenIdParameter = screenId.HasValue ?
                new ObjectParameter("ScreenId", screenId) :
                new ObjectParameter("ScreenId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GetRoleWiseScreenPermissionList", idParameter, roleIdParameter, moduleIdParameter, screenIdParameter);
        }
    
        public virtual int USP_GetScreenList(Nullable<long> id, Nullable<long> moduleId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GetScreenList", idParameter, moduleIdParameter);
        }
    
        public virtual int USP_GetScreenOperationList(Nullable<long> id, Nullable<long> screenId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var screenIdParameter = screenId.HasValue ?
                new ObjectParameter("ScreenId", screenId) :
                new ObjectParameter("ScreenId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GetScreenOperationList", idParameter, screenIdParameter);
        }
    
        public virtual int USP_GetUserDetails(Nullable<long> id, string username)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GetUserDetails", idParameter, usernameParameter);
        }
    
        public virtual int USP_GetUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GetUsers");
        }
    }
}
